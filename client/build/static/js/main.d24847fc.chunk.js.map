{"version":3,"sources":["components/Header/HeaderStyles.js","components/Header/index.js","components/Card/CardStyles.js","components/Card/Alphabet.js","components/Card/CardActions.js","components/Card/CardDescription.js","components/Card/CardInput.js","components/Card/CardOutput.js","feature/Utils.js","feature/ceasar/ceasarSlice.js","feature/ceasar/CeasarStyles.js","feature/ceasar/ExtraInput.js","feature/ceasar/index.js","feature/affine/affineSlice.js","feature/affine/AffineStyles.js","feature/affine/ExtraInput.js","feature/affine/index.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Nav","styled","div","Wrapper","Logo","Link","NavList","ul","NavItem","li","NavLink","Header","to","Container","props","textarea","Title","align","Content","TextareaInput","OutputText","span","Btns","Btn","button","Counter","InputGroup","CountBtn","disabled","AlphabetWrap","TransformOutPut","CaseStrategy","WrapDropdown","DropdownButton","DropdownList","ForeignChars","Brick","Description","Alphabet","CardActions","getForeignChars","encode","decode","plaintext","ciphertext","keys","currentCase","getCaseStategy","caseStrategy","foreignChars","reset","titleAlign","title","extraInput","useState","showCase","setShowCase","handleSelectCase","e","onClick","map","strategy","key","className","active","id","value","target","length","CardDescription","cipher","desc","link","href","rel","CardInput","getPlaintext","onChange","CardOutput","replace","toUpperCase","toLowerCase","submit","url","mess","k","a","fetch","method","body","JSON","stringify","text","headers","response","json","result","getCurrentCase","cases","filter","item","initialState","ceasarSlice","createSlice","name","reducers","getData","state","action","payload","resetData","increaseKey","decreaseKey","actions","selectCeasar","ceasar","Wrap","ExtraInput","data","useSelector","dispatch","useDispatch","htmlFor","parseInt","type","min","max","Ceasar","getCiphertext","getKey","newCases","b","affineSlice","increaseSlope","increaseIntercept","decreaseSlope","decreaseIntercept","selectAffine","affine","CounterWrap","Affine","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d24847fc.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Nav = styled.div`\r\n  background-color: #4db6ac;\r\n  height: 6.4rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  line-height: 6.4rem;\r\n  width: 80%;\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n  color: #fff;\r\n  font-size: 3.2rem;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  padding: 0;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  padding: 0 1.5rem;\r\n  text-transform: capitalize;\r\n`;\r\n","import { Nav, Logo, Wrapper, NavList, NavItem, NavLink } from './HeaderStyles';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Nav>\r\n      <Wrapper>\r\n        <Logo to=\"/\">CipherVip</Logo>\r\n        <NavList>\r\n          <NavItem>\r\n            <NavLink to=\"/\">ceasar</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/affine\">affine</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/\">Vigenere</NavLink>\r\n          </NavItem>\r\n        </NavList>\r\n      </Wrapper>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  box-sizing: border-box;\r\n  height: ${(props) => (props.textarea ? '30rem' : 'auto')};\r\n  max-width: 50rem;\r\n  margin-top: 1rem;\r\n  padding: 0 0.75rem;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 31.5%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  border-bottom: 1px solid #e3e8ec;\r\n  border-radius: 0 0 0.2rem 0.2rem;\r\n  color: #4db6ac;\r\n  font-size: 2.4rem;\r\n  font-weight: 600;\r\n  line-height: 4.8rem;\r\n  padding: 2rem;\r\n  text-align: ${(props) => (props.align === 'center' ? 'center' : 'left')};\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TextareaInput = styled.textarea`\r\n  border: none;\r\n  color: #797f86;\r\n  display: block;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  outline: none;\r\n  padding: 2rem;\r\n  resize: none;\r\n  transition: all 0.2s ease 0s;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid #26a69a;\r\n    box-shadow: 0 1px 0 0 #26a69a;\r\n  }\r\n`;\r\n\r\nexport const OutputText = styled.span`\r\n  color: #797f86;\r\n  display: block;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  padding: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  border-bottom: 1px solid #e3e8ec;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 2rem;\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n  }\r\n`;\r\nexport const Btn = styled.button`\r\n  background-color: #26a69a;\r\n  border: none;\r\n  border-radius: 0.2rem;\r\n  color: rgb(232, 230, 227);\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  height: 3.6rem;\r\n  letter-spacing: 0.5px;\r\n  line-height: 3.6rem;\r\n  max-width: 11.6rem;\r\n  padding: 0 3.2rem;\r\n  text-align: center;\r\n  text-decoration-color: initial;\r\n  text-transform: uppercase;\r\n  transition: background-color 0.3s ease 0s;\r\n  vertical-align: middle;\r\n  width: 11.6rem;\r\n\r\n  &:hover {\r\n    background-color: rgb(34, 150, 138);\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    &:last-child {\r\n      margin-top: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Counter = styled(Btns)`\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 2rem 2rem 1rem 2rem;\r\n  div {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    color: #4db6ac;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    padding-left: 1.8rem;\r\n  }\r\n\r\n  ${Btn} {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  input {\r\n    border: none;\r\n    color: #797f86;\r\n    flex-grow: 1;\r\n    font-size: 1.6rem;\r\n    letter-spacing: 1px;\r\n    outline: none;\r\n    text-align: center;\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    -moz-appearance: textfield;\r\n  }\r\n`;\r\n\r\nexport const CountBtn = styled(Btn)`\r\n  background-color: transparent;\r\n  color: ${(props) => (props.disabled ? '#797f86' : '#000')};\r\n  cursor: ${(props) => (props.disabled ? 'initial' : 'pointer')};\r\n  font-size: 2.6rem;\r\n  font-weight: 600;\r\n  height: 4.6rem;\r\n  padding: 0;\r\n  width: 4.6rem;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: ${(props) => (props.disabled ? '#797f86' : '#4db6ac')};\r\n    transform: ${(props) => (props.disabled ? 'scale(1)' : 'scale(1.5)')};\r\n  }\r\n`;\r\n\r\nexport const AlphabetWrap = styled(Counter)`\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    color: #797f86;\r\n    font-size: 1.4rem;\r\n    height: 2.6rem;\r\n    line-height: 2.6rem;\r\n    letter-spacing: 1px;\r\n    padding-left: 1.8rem;\r\n    text-align: left;\r\n    vertical-align: middle;\r\n\r\n    &:first-child {\r\n      font-size: 1.2rem;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TransformOutPut = styled(Counter)`\r\n  flex-direction: row;\r\n  padding: 0 2rem;\r\n\r\n  & > div {\r\n    height: 100%;\r\n    padding: 2rem 0 2rem 1.8rem;\r\n    width: 50%;\r\n  }\r\n\r\n  label {\r\n    padding-left: 0;\r\n  }\r\n`;\r\n\r\nexport const CaseStrategy = styled.div`\r\n  border-right: 1px solid #e3e8ec;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const WrapDropdown = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    color: #797f86;\r\n    font-size: 1.8rem;\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 2.5rem;\r\n    pointer-events: none;\r\n  }\r\n\r\n  ul {\r\n    width: calc(100% + 3.8rem);\r\n  }\r\n`;\r\n\r\nexport const DropdownButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #797f86;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  outline: none;\r\n  padding: 1.2rem 3.2rem 0 0;\r\n  text-align: left;\r\n  width: 100%;\r\n\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const DropdownList = styled.ul`\r\n  background-color: #fff;\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  border-radius: 0.25rem;\r\n  color: #797f86;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  left: -3.8rem;\r\n  top: 140%;\r\n  z-index: 1008;\r\n  width: 100%;\r\n\r\n  li {\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n    font-weight: 600;\r\n    padding: 1.25rem;\r\n    padding-left: 3.8rem;\r\n    transition: all 0.2s linear 0s;\r\n\r\n    &:hover {\r\n      background-color: rgba(227, 232, 236, 0.4);\r\n      padding-left: 4.2rem;\r\n    }\r\n\r\n    &.active {\r\n      background-color: #e3e8ec;\r\n      color: #26a69a;\r\n    }\r\n\r\n    &:first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ForeignChars = styled.div`\r\n  ${WrapDropdown} {\r\n    padding-top: 1.2rem;\r\n\r\n    button {\r\n      background-color: transparent;\r\n      border: none;\r\n      color: #797f86;\r\n      cursor: pointer;\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      outline: none;\r\n      transition: color 0.2s ease 0s;\r\n\r\n      &:first-letter {\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      &:first-child {\r\n        margin-right: 1rem;\r\n      }\r\n\r\n      &.active {\r\n        color: #26a69a;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Brick = styled.div`\r\n  color: #797f86;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.25rem 3.8rem;\r\n\r\n  svg {\r\n    font-size: 1.6rem;\r\n    font-weight: 600;\r\n    fill: currentColor;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 1.4;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  background-color: #fff;\r\n  padding: 3.6rem 0;\r\n  text-align: center;\r\n\r\n  div {\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1rem;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n  }\r\n\r\n  h1 {\r\n    color: #272727;\r\n    display: block;\r\n    font-size: 2.1rem;\r\n    font-weight: 600;\r\n    max-width: 60rem;\r\n    padding-bottom: 1.4rem;\r\n  }\r\n\r\n  p {\r\n    color: #797f86;\r\n    font-size: 1.6rem;\r\n    font-weight: 590;\r\n    max-width: 60rem;\r\n  }\r\n\r\n  a {\r\n    color: #4db6ac;\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    text-align: left;\r\n\r\n    h1,\r\n    p {\r\n      max-width: 80rem;\r\n    }\r\n  }\r\n`;\r\n","import { AlphabetWrap } from './CardStyles';\r\n\r\nconst Alphabet = () => {\r\n  return (\r\n    <AlphabetWrap>\r\n      <label>ALPHABET</label>\r\n      <div>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n      </div>\r\n    </AlphabetWrap>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import { useState } from 'react';\r\nimport { HiArrowNarrowDown } from 'react-icons/hi';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport Alphabet from './Alphabet';\r\nimport {\r\n  Brick,\r\n  Btn,\r\n  Btns,\r\n  CaseStrategy,\r\n  Container,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  ForeignChars,\r\n  Title,\r\n  TransformOutPut,\r\n  WrapDropdown,\r\n} from './CardStyles';\r\n\r\nconst CardActions = ({\r\n  getForeignChars,\r\n  encode,\r\n  decode,\r\n  plaintext,\r\n  ciphertext,\r\n  keys,\r\n  currentCase,\r\n  getCaseStategy,\r\n  caseStrategy,\r\n  foreignChars,\r\n  reset,\r\n  titleAlign,\r\n  title,\r\n  extraInput,\r\n}) => {\r\n  const [showCase, setShowCase] = useState(false);\r\n\r\n  const handleSelectCase = (e) => {\r\n    getCaseStategy(e);\r\n    setShowCase(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <Btns>\r\n          <Btn onClick={() => encode(plaintext, keys)}>encode</Btn>\r\n          <Btn onClick={() => decode(plaintext, keys)}>decode</Btn>\r\n          <Btn onClick={reset}>Reset</Btn>\r\n        </Btns>\r\n\r\n        {extraInput}\r\n\r\n        <Alphabet />\r\n\r\n        <TransformOutPut>\r\n          <CaseStrategy>\r\n            <label>CASE STRATEGY</label>\r\n            <WrapDropdown>\r\n              <DropdownButton onClick={() => setShowCase(!showCase)}>\r\n                {currentCase}\r\n              </DropdownButton>\r\n              {showCase && (\r\n                <DropdownList>\r\n                  {caseStrategy.map((strategy, key) => {\r\n                    return (\r\n                      <li\r\n                        className={strategy.active ? 'active' : ''}\r\n                        key={key}\r\n                        id={strategy.value}\r\n                        onClick={handleSelectCase}\r\n                      >\r\n                        {strategy.value}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </DropdownList>\r\n              )}\r\n              <RiArrowDownSFill />\r\n            </WrapDropdown>\r\n          </CaseStrategy>\r\n\r\n          <ForeignChars>\r\n            <label>FOREIGN CHARS</label>\r\n            <WrapDropdown>\r\n              <button\r\n                className={foreignChars === 'include' ? 'active' : ''}\r\n                id=\"include\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                include\r\n              </button>\r\n              <button\r\n                className={foreignChars === 'ignore' ? 'active' : ''}\r\n                id=\"ignore\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                ignore\r\n              </button>\r\n            </WrapDropdown>\r\n          </ForeignChars>\r\n        </TransformOutPut>\r\n\r\n        <Brick>\r\n          <HiArrowNarrowDown />\r\n          <span>Decoded {ciphertext.length} chars</span>\r\n        </Brick>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import { Description } from './CardStyles';\r\n\r\nconst CardDescription = ({ cipher, desc, link }) => {\r\n  return (\r\n    <Description>\r\n      <div>\r\n        <h1>\r\n          {cipher} cipher: Encode and Decode {cipher} to text\r\n        </h1>\r\n        <p>\r\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {cipher} cipher{' '}\r\n          </a>\r\n          {desc}\r\n        </p>\r\n      </div>\r\n    </Description>\r\n  );\r\n};\r\n\r\nexport default CardDescription;\r\n","import { Container, Title, Content, TextareaInput } from './CardStyles';\r\n\r\nconst CardInput = ({ title, titleAlign, plaintext, getPlaintext }) => {\r\n  const handleChange = (e) => {\r\n    getPlaintext(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <TextareaInput value={plaintext} onChange={handleChange} />\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardInput;\r\n","import { Container, Content, OutputText, Title } from './CardStyles';\r\n\r\nconst CardOutput = ({\r\n  title,\r\n  titleAlign,\r\n  currentCase,\r\n  foreignChars,\r\n  ciphertext,\r\n}) => {\r\n  const formatOutput = () => {\r\n    if (foreignChars === 'ignore' && currentCase === 'upper case') {\r\n      return ciphertext.replace(/\\s/g, '').toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'lower case') {\r\n      return ciphertext.replace(/\\s/g, '').toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'maintain case') {\r\n      return ciphertext.replace(/\\s/g, '');\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'upper case') {\r\n      return ciphertext.toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'lower case') {\r\n      return ciphertext.toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'maintain case') {\r\n      return ciphertext;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <OutputText>{formatOutput()}</OutputText>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardOutput;\r\n","export const submit = async (url, mess, k) => {\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      text: mess,\r\n      key: k,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n  const result = await response.json();\r\n  return result;\r\n};\r\n\r\nexport const getCurrentCase = (cases) => {\r\n  return cases.filter((item) => item.active)[0].value;\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'JpwolyCpw',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 7,\r\n};\r\n\r\nexport const ceasarSlice = createSlice({\r\n  name: 'ceasar',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseKey(state) {\r\n      state.key += 1;\r\n    },\r\n    decreaseKey(state) {\r\n      state.key -= 1;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, increaseKey, decreaseKey } =\r\n  ceasarSlice.actions;\r\n\r\nexport const selectCeasar = (state) => state.ceasar;\r\n\r\nexport default ceasarSlice.reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: #f2f4f6;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 48px;\r\n  padding-top: 48px;\r\n  width: 80%;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import {\r\n  CountBtn,\r\n  Counter,\r\n  InputGroup,\r\n} from '../../components/Card/CardStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getData, selectCeasar, decreaseKey, increaseKey } from './ceasarSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const increase = () => {\r\n    dispatch(increaseKey());\r\n  };\r\n\r\n  const decrease = () => {\r\n    dispatch(decreaseKey());\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">KEY</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key) === 0 ? true : false}\r\n              onClick={decrease}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key) === 26 ? true : false}\r\n              onClick={increase}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { getCurrentCase, submit } from '../Utils';\r\nimport { getData, resetData, selectCeasar } from './ceasarSlice';\r\nimport { Container, Wrap } from './CeasarStyles';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Ceasar = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    const { ciphertext } = await submit(\r\n      '/api/ceasar/encode',\r\n      text,\r\n      parseInt(key),\r\n    );\r\n    getCiphertext(ciphertext);\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    const { ciphertext } = await submit(\r\n      '/api/ceasar/decode',\r\n      text,\r\n      parseInt(key),\r\n    );\r\n    getCiphertext(ciphertext);\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Ceasar Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Ceasar\"\r\n        desc={\r\n          ' is one of the simplest and most widely known encryption techniques. It is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Ceasar;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'RheafsUhe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: { a: 7, b: 3 },\r\n};\r\n\r\nexport const affineSlice = createSlice({\r\n  name: 'affine',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseSlope(state) {\r\n      state.key.a += 1;\r\n    },\r\n    increaseIntercept(state) {\r\n      state.key.b += 1;\r\n    },\r\n    decreaseSlope(state) {\r\n      state.key.a -= 1;\r\n    },\r\n    decreaseIntercept(state) {\r\n      state.key.b -= 1;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n} = affineSlice.actions;\r\n\r\nexport const selectAffine = (state) => state.affine;\r\n\r\nexport default affineSlice.reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const CounterWrap = styled.div`\r\n  display: flex;\r\n\r\n  & > div {\r\n    width: 50%;\r\n\r\n    &:first-child {\r\n      border-right: 1px solid #e3e8ec;\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  CountBtn,\r\n  Counter,\r\n  InputGroup,\r\n} from '../../components/Card/CardStyles';\r\nimport { CounterWrap } from './AffineStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  selectAffine,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getData,\r\n} from './affineSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleFirstCountChange = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    getKey({ ...data.key, b: value });\r\n  };\r\n\r\n  const handleSecondCountChange = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    getKey({ ...data.key, a: value });\r\n  };\r\n\r\n  const increaseSlopeCounter = () => {\r\n    dispatch(increaseSlope());\r\n  };\r\n\r\n  const decreaseSlopeCounter = () => {\r\n    dispatch(decreaseSlope());\r\n  };\r\n\r\n  const increaseInterceptCounter = () => {\r\n    dispatch(increaseIntercept());\r\n  };\r\n\r\n  const decreaseInterceptCounter = () => {\r\n    dispatch(decreaseIntercept());\r\n  };\r\n\r\n  return (\r\n    <CounterWrap>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">SLOPE / A</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key.a) === 0 ? true : false}\r\n              onClick={decreaseSlopeCounter}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key.a}\r\n              onChange={handleFirstCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key.a) === 26 ? true : false}\r\n              onClick={increaseSlopeCounter}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">INTERCEPT / B</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key.b) === 0 ? true : false}\r\n              onClick={decreaseInterceptCounter}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key.b}\r\n              onChange={handleSecondCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key.b) === 26 ? true : false}\r\n              onClick={increaseInterceptCounter}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </CounterWrap>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport { Container, Wrap } from '../ceasar/CeasarStyles';\r\nimport { getData, resetData, selectAffine } from './affineSlice';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getCurrentCase, submit } from '../Utils';\r\n\r\nconst Affine = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    const { ciphertext } = await submit('/api/affine/encode', text, key);\r\n    getCiphertext(ciphertext);\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    const { ciphertext } = await submit('/api/affine/decode', text, key);\r\n    getCiphertext(ciphertext);\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Affine Cipher\"\r\n          titleAlign=\"center\"\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          keys={data.key}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Affine\"\r\n        desc={\r\n          'is a type of monoalphabetic substitution cipher, where each letter in an alphabet is mapped to its numeric equivalent, encrypted using a simple mathematical function, and converted back to a letter. Each letter is enciphered with the function (ax + b) mod 26, where b is the magnitude of the shift.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Affine_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Affine;\r\n","import './index.css';\nimport Header from './components/Header';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Ceasar from './feature/ceasar';\nimport Affine from './feature/affine';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Ceasar} />\n          <Route path=\"/affine\" component={Affine} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport ceasar from '../feature/ceasar/ceasarSlice';\r\nimport affine from '../feature/affine/affineSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ceasar: ceasar,\r\n    affine: affine,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}