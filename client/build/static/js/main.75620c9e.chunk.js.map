{"version":3,"sources":["components/Header/HeaderStyles.js","components/Header/index.js","components/Card/CardStyles.js","components/Card/Alphabet.js","components/Card/CardActions.js","components/Card/CardDescription.js","components/Card/CardInput.js","components/Card/loading.gif","components/Card/CardOutput.js","feature/Utils.js","feature/ceasar/ceasarSlice.js","feature/ceasar/ExtraInput.js","feature/ceasar/index.js","feature/affine/affineSlice.js","feature/affine/AffineStyles.js","feature/affine/ExtraInput.js","feature/affine/index.js","feature/reverse/reverseSlice.js","feature/reverse/index.js","feature/transposition/transpositionSlice.js","feature/transposition/ExtraInput.js","feature/transposition/index.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Nav","styled","div","Wrapper","Logo","Link","NavList","ul","NavItem","li","NavLink","Header","to","Container","props","textarea","Title","align","Content","TextareaInput","OutputText","span","Btns","Btn","button","Counter","InputGroup","CountBtn","disabled","AlphabetWrap","TransformOutPut","CaseStrategy","WrapDropdown","DropdownButton","DropdownList","ForeignChars","Brick","Description","Alphabet","CardActions","getForeignChars","encode","decode","plaintext","ciphertext","keys","currentCase","getCaseStategy","caseStrategy","foreignChars","reset","titleAlign","title","extraInput","useState","showCase","setShowCase","handleSelectCase","e","onClick","map","strategy","key","className","active","id","value","target","length","CardDescription","cipher","desc","link","href","rel","CardInput","getPlaintext","placeholder","onChange","CardOutput","loading","src","loadingIcon","alt","replace","toUpperCase","toLowerCase","submit","url","mess","k","a","fetch","method","body","JSON","stringify","text","headers","response","json","result","getCurrentCase","cases","filter","item","Wrap","initialState","loadingOutput","ceasarSlice","createSlice","name","reducers","getData","state","action","payload","resetData","increaseKey","decreaseKey","getLoading","actions","selectCeasar","ceasar","ExtraInput","data","useSelector","dispatch","useDispatch","htmlFor","parseInt","type","min","max","Ceasar","getCiphertext","console","log","getKey","newCases","b","affineSlice","increaseSlope","increaseIntercept","decreaseSlope","decreaseIntercept","selectAffine","affine","CounterWrap","Affine","reverseSlice","selectReverse","reverse","Reverse","transpositionSlice","selectTransposition","transposition","Transposition","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.75620c9e.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Nav = styled.div`\r\n  background-color: #4db6ac;\r\n  font-family: 'Zen Antique Soft', serif;\r\n  height: 6.4rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  line-height: 6.4rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n  color: #fff;\r\n  font-size: 3.2rem;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  display: none;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  padding: 0;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  padding: 0 1.5rem;\r\n  text-transform: capitalize;\r\n`;\r\n","import { Logo, Nav, NavItem, NavLink, NavList, Wrapper } from './HeaderStyles';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Nav>\r\n      <Wrapper>\r\n        <Logo to=\"/\">CipherVip</Logo>\r\n        <NavList>\r\n          <NavItem>\r\n            <NavLink to=\"/\">ceasar</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/affine\">affine</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/reverse\">reverse</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/transposition\">transposition</NavLink>\r\n          </NavItem>\r\n        </NavList>\r\n      </Wrapper>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  box-sizing: border-box;\r\n  height: ${(props) => (props.textarea ? '30rem' : 'auto')};\r\n  max-width: 50rem;\r\n  margin-bottom: 4rem;\r\n  padding: 0 0.75rem;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-bottom: 1rem;\r\n    width: 31.5%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  border-bottom: 1px solid #e3e8ec;\r\n  border-radius: 0 0 0.2rem 0.2rem;\r\n  color: #4db6ac;\r\n  font-size: 2.4rem;\r\n  font-weight: 600;\r\n  line-height: 4.8rem;\r\n  padding: 2rem;\r\n  text-align: ${(props) => (props.align === 'center' ? 'center' : 'left')};\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TextareaInput = styled.textarea`\r\n  border: none;\r\n  color: #797f86;\r\n  display: block;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  outline: none;\r\n  padding: 2rem;\r\n  resize: none;\r\n  transition: all 0.2s ease 0s;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid #26a69a;\r\n    box-shadow: 0 1px 0 0 #26a69a;\r\n  }\r\n`;\r\n\r\nexport const OutputText = styled.span`\r\n  color: #797f86;\r\n  display: flex;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  padding: 2rem;\r\n  width: 100%;\r\n\r\n  img {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  border-bottom: 1px solid #e3e8ec;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 2rem 1rem;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n  }\r\n`;\r\nexport const Btn = styled.button`\r\n  background-color: #26a69a;\r\n  border: none;\r\n  border-radius: 0.2rem;\r\n  color: rgb(232, 230, 227);\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  height: 3.6rem;\r\n  letter-spacing: 0.5px;\r\n  line-height: 3.6rem;\r\n  margin-top: 1rem;\r\n  max-width: 11.6rem;\r\n  padding: 0 3.2rem;\r\n  text-align: center;\r\n  text-decoration-color: initial;\r\n  text-transform: uppercase;\r\n  transition: background-color 0.3s ease 0s;\r\n  vertical-align: middle;\r\n  width: 11.6rem;\r\n\r\n  &:hover {\r\n    background-color: rgb(34, 150, 138);\r\n  }\r\n`;\r\n\r\nexport const Counter = styled(Btns)`\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 1rem 0.2rem;\r\n  div {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    color: #4db6ac;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    padding-left: 1.8rem;\r\n  }\r\n\r\n  ${Btn} {\r\n    margin-top: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1rem 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  input {\r\n    border: none;\r\n    color: #797f86;\r\n    flex-grow: 1;\r\n    font-size: 1.6rem;\r\n    letter-spacing: 1px;\r\n    outline: none;\r\n    text-align: center;\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  input[type='text'] {\r\n    border-bottom: 1px solid transparent;\r\n    margin-left: 1.8rem;\r\n    padding-top: 1rem;\r\n    padding-bottom: 0.5rem;\r\n    text-align: left;\r\n\r\n    &:focus {\r\n      border-color: #4db6ac;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CountBtn = styled(Btn)`\r\n  background-color: transparent;\r\n  color: ${(props) => (props.disabled ? '#797f86' : '#000')};\r\n  cursor: ${(props) => (props.disabled ? 'initial' : 'pointer')};\r\n  font-size: 2.6rem;\r\n  font-weight: 600;\r\n  height: 4.6rem;\r\n  padding: 0;\r\n  width: 4.6rem;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: ${(props) => (props.disabled ? '#797f86' : '#4db6ac')};\r\n    transform: ${(props) => (props.disabled ? 'scale(1)' : 'scale(1.5)')};\r\n  }\r\n`;\r\n\r\nexport const AlphabetWrap = styled(Counter)`\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    color: #797f86;\r\n    font-size: 1.4rem;\r\n    height: 2.6rem;\r\n    line-height: 2.6rem;\r\n    letter-spacing: 1px;\r\n    padding-left: 1.8rem;\r\n    text-align: left;\r\n    vertical-align: middle;\r\n\r\n    &:first-child {\r\n      font-size: 1.2rem;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TransformOutPut = styled(Counter)`\r\n  flex-direction: row;\r\n  padding: 0 0.2rem;\r\n\r\n  & > div {\r\n    height: 100%;\r\n    padding: 2rem 0 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    padding-left: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 0 2rem;\r\n\r\n    & > div {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 0 2rem;\r\n  }\r\n`;\r\n\r\nexport const CaseStrategy = styled.div`\r\n  border-bottom: 1px solid #e3e8ec;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    border-right: 1px solid #e3e8ec;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    button {\r\n      padding-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    button {\r\n      padding-right: 3.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WrapDropdown = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    color: #797f86;\r\n    font-size: 1.8rem;\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 2.5rem;\r\n    pointer-events: none;\r\n  }\r\n\r\n  ul {\r\n    width: calc(100% + 3.8rem);\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    svg {\r\n      right: 0.5rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    svg {\r\n      right: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DropdownButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #797f86;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  outline: none;\r\n  padding: 1.2rem 3.2rem 0 0;\r\n  text-align: left;\r\n  width: 100%;\r\n\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const DropdownList = styled.ul`\r\n  background-color: #fff;\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  border-radius: 0.25rem;\r\n  color: #797f86;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  left: -3.8rem;\r\n  top: 140%;\r\n  z-index: 1008;\r\n  width: 100%;\r\n\r\n  li {\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n    font-weight: 600;\r\n    padding: 1.25rem;\r\n    padding-left: 3.8rem;\r\n    transition: all 0.2s linear 0s;\r\n\r\n    &:hover {\r\n      background-color: rgba(227, 232, 236, 0.4);\r\n      padding-left: 4.2rem;\r\n    }\r\n\r\n    &.active {\r\n      background-color: #e3e8ec;\r\n      color: #26a69a;\r\n    }\r\n\r\n    &:first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ForeignChars = styled.div`\r\n  ${WrapDropdown} {\r\n    padding-top: 1.2rem;\r\n\r\n    button {\r\n      background-color: transparent;\r\n      border: none;\r\n      color: #797f86;\r\n      cursor: pointer;\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      outline: none;\r\n      transition: color 0.2s ease 0s;\r\n\r\n      &:first-letter {\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      &:first-child {\r\n        margin-right: 1rem;\r\n      }\r\n\r\n      &.active {\r\n        color: #26a69a;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Brick = styled.div`\r\n  color: #797f86;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.25rem 1.8rem;\r\n\r\n  svg {\r\n    font-size: 1.6rem;\r\n    font-weight: 600;\r\n    fill: currentColor;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 1.4;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1.25rem 1.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  background-color: #fff;\r\n  padding: 3.6rem 0;\r\n  text-align: center;\r\n\r\n  div {\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1rem;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n  }\r\n\r\n  h1 {\r\n    color: #272727;\r\n    display: block;\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n    padding-bottom: 1.4rem;\r\n    width: 100%;\r\n  }\r\n\r\n  p {\r\n    color: #797f86;\r\n    font-size: 1.4rem;\r\n    font-weight: 590;\r\n    width: 100%;\r\n  }\r\n\r\n  a {\r\n    color: #4db6ac;\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    h1 {\r\n      font-size: 2.1rem;\r\n    }\r\n\r\n    p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    text-align: left;\r\n\r\n    h1,\r\n    p {\r\n      max-width: 70rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    h1,\r\n    p {\r\n      max-width: 80rem;\r\n    }\r\n  }\r\n`;\r\n","import { AlphabetWrap } from './CardStyles';\r\n\r\nconst Alphabet = () => {\r\n  return (\r\n    <AlphabetWrap>\r\n      <label>ALPHABET</label>\r\n      <div>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n      </div>\r\n    </AlphabetWrap>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import { useState } from 'react';\r\nimport { HiArrowNarrowDown } from 'react-icons/hi';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport Alphabet from './Alphabet';\r\nimport {\r\n  Brick,\r\n  Btn,\r\n  Btns,\r\n  CaseStrategy,\r\n  Container,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  ForeignChars,\r\n  Title,\r\n  TransformOutPut,\r\n  WrapDropdown,\r\n} from './CardStyles';\r\n\r\nconst CardActions = ({\r\n  getForeignChars,\r\n  encode,\r\n  decode,\r\n  plaintext,\r\n  ciphertext,\r\n  keys,\r\n  currentCase,\r\n  getCaseStategy,\r\n  caseStrategy,\r\n  foreignChars,\r\n  reset,\r\n  titleAlign,\r\n  title,\r\n  extraInput,\r\n}) => {\r\n  const [showCase, setShowCase] = useState(false);\r\n\r\n  const handleSelectCase = (e) => {\r\n    getCaseStategy(e);\r\n    setShowCase(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <Btns>\r\n          <Btn onClick={() => encode(plaintext, keys)}>encode</Btn>\r\n          <Btn onClick={() => decode(plaintext, keys)}>decode</Btn>\r\n          <Btn onClick={reset}>Reset</Btn>\r\n        </Btns>\r\n\r\n        {extraInput}\r\n\r\n        <Alphabet />\r\n\r\n        <TransformOutPut>\r\n          <CaseStrategy>\r\n            <label>CASE STRATEGY</label>\r\n            <WrapDropdown>\r\n              <DropdownButton onClick={() => setShowCase(!showCase)}>\r\n                {currentCase}\r\n              </DropdownButton>\r\n              {showCase && (\r\n                <DropdownList>\r\n                  {caseStrategy.map((strategy, key) => {\r\n                    return (\r\n                      <li\r\n                        className={strategy.active ? 'active' : ''}\r\n                        key={key}\r\n                        id={strategy.value}\r\n                        onClick={handleSelectCase}\r\n                      >\r\n                        {strategy.value}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </DropdownList>\r\n              )}\r\n              <RiArrowDownSFill />\r\n            </WrapDropdown>\r\n          </CaseStrategy>\r\n\r\n          <ForeignChars>\r\n            <label>FOREIGN CHARS</label>\r\n            <WrapDropdown>\r\n              <button\r\n                className={foreignChars === 'include' ? 'active' : ''}\r\n                id=\"include\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                include\r\n              </button>\r\n              <button\r\n                className={foreignChars === 'ignore' ? 'active' : ''}\r\n                id=\"ignore\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                ignore\r\n              </button>\r\n            </WrapDropdown>\r\n          </ForeignChars>\r\n        </TransformOutPut>\r\n\r\n        <Brick>\r\n          <HiArrowNarrowDown />\r\n          <span>Decoded {ciphertext.length} chars</span>\r\n        </Brick>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import { Description } from './CardStyles';\r\n\r\nconst CardDescription = ({ cipher, desc, link }) => {\r\n  return (\r\n    <Description>\r\n      <div>\r\n        <h1>\r\n          {cipher} cipher: Encode and Decode {cipher} to text\r\n        </h1>\r\n        <p>\r\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {cipher} cipher{' '}\r\n          </a>\r\n          {desc}\r\n        </p>\r\n      </div>\r\n    </Description>\r\n  );\r\n};\r\n\r\nexport default CardDescription;\r\n","import { Container, Title, Content, TextareaInput } from './CardStyles';\r\n\r\nconst CardInput = ({ title, titleAlign, plaintext, getPlaintext }) => {\r\n  const handleChange = (e) => {\r\n    getPlaintext(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <TextareaInput\r\n          placeholder=\"Enter your message...\"\r\n          value={plaintext}\r\n          onChange={handleChange}\r\n        />\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardInput;\r\n","export default __webpack_public_path__ + \"static/media/loading.ba14ef10.gif\";","import { Container, Content, OutputText, Title } from './CardStyles';\r\nimport loadingIcon from './loading.gif';\r\n\r\nconst CardOutput = ({\r\n  title,\r\n  titleAlign,\r\n  currentCase,\r\n  foreignChars,\r\n  ciphertext,\r\n  loading,\r\n}) => {\r\n  const formatOutput = () => {\r\n    if (foreignChars === 'ignore' && currentCase === 'upper case') {\r\n      return ciphertext.replace(/\\s/g, '').toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'lower case') {\r\n      return ciphertext.replace(/\\s/g, '').toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'maintain case') {\r\n      return ciphertext.replace(/\\s/g, '');\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'upper case') {\r\n      return ciphertext.toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'lower case') {\r\n      return ciphertext.toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'maintain case') {\r\n      return ciphertext;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <OutputText>\r\n          {loading ? (\r\n            <img src={loadingIcon} alt=\"loading output\" />\r\n          ) : (\r\n            formatOutput()\r\n          )}\r\n        </OutputText>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardOutput;\r\n","import styled from 'styled-components';\r\n\r\nexport const submit = async (url, mess, k) => {\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      text: mess,\r\n      key: k,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n  const result = await response.json();\r\n  return result;\r\n};\r\n\r\nexport const getCurrentCase = (cases) => {\r\n  return cases.filter((item) => item.active)[0].value;\r\n};\r\n\r\nexport const Container = styled.div`\r\n  background-color: #f2f4f6;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 1.6rem;\r\n  padding-top: 4.8rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'JpwolyCpw',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 7,\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const ceasarSlice = createSlice({\r\n  name: 'ceasar',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseKey(state) {\r\n      state.key += 1;\r\n    },\r\n    decreaseKey(state) {\r\n      state.key -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, increaseKey, decreaseKey, getLoading } =\r\n  ceasarSlice.actions;\r\n\r\nexport const selectCeasar = (state) => state.ceasar;\r\n\r\nexport default ceasarSlice.reducer;\r\n","import {\r\n  CountBtn,\r\n  Counter,\r\n  InputGroup,\r\n} from '../../components/Card/CardStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getData, selectCeasar, decreaseKey, increaseKey } from './ceasarSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const increase = () => {\r\n    dispatch(increaseKey());\r\n  };\r\n\r\n  const decrease = () => {\r\n    dispatch(decreaseKey());\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">KEY</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key) === 0 ? true : false}\r\n              onClick={decrease}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key) === 26 ? true : false}\r\n              onClick={increase}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\nimport { getData, resetData, selectCeasar, getLoading } from './ceasarSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Ceasar = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/ceasar/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/ceasar/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Ceasar Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Ceasar\"\r\n        desc={\r\n          ' is one of the simplest and most widely known encryption techniques. It is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Ceasar;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'RheafsUhe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: { a: 7, b: 3 },\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const affineSlice = createSlice({\r\n  name: 'affine',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseSlope(state) {\r\n      state.key.a += 1;\r\n    },\r\n    increaseIntercept(state) {\r\n      state.key.b += 1;\r\n    },\r\n    decreaseSlope(state) {\r\n      state.key.a -= 1;\r\n    },\r\n    decreaseIntercept(state) {\r\n      state.key.b -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getLoading,\r\n} = affineSlice.actions;\r\n\r\nexport const selectAffine = (state) => state.affine;\r\n\r\nexport default affineSlice.reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const CounterWrap = styled.div`\r\n  display: flex;\r\n\r\n  & > div {\r\n    width: 50%;\r\n\r\n    &:first-child {\r\n      border-right: 1px solid #e3e8ec;\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  CountBtn,\r\n  Counter,\r\n  InputGroup,\r\n} from '../../components/Card/CardStyles';\r\nimport { CounterWrap } from './AffineStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  selectAffine,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getData,\r\n} from './affineSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleFirstCountChange = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    getKey({ ...data.key, b: value });\r\n  };\r\n\r\n  const handleSecondCountChange = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    getKey({ ...data.key, a: value });\r\n  };\r\n\r\n  const increaseSlopeCounter = () => {\r\n    dispatch(increaseSlope());\r\n  };\r\n\r\n  const decreaseSlopeCounter = () => {\r\n    dispatch(decreaseSlope());\r\n  };\r\n\r\n  const increaseInterceptCounter = () => {\r\n    dispatch(increaseIntercept());\r\n  };\r\n\r\n  const decreaseInterceptCounter = () => {\r\n    dispatch(decreaseIntercept());\r\n  };\r\n\r\n  return (\r\n    <CounterWrap>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">SLOPE / A</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key.a) === 0 ? true : false}\r\n              onClick={decreaseSlopeCounter}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key.a}\r\n              onChange={handleFirstCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key.a) === 26 ? true : false}\r\n              onClick={increaseSlopeCounter}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">INTERCEPT / B</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key.b) === 0 ? true : false}\r\n              onClick={decreaseInterceptCounter}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key.b}\r\n              onChange={handleSecondCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key.b) === 26 ? true : false}\r\n              onClick={increaseInterceptCounter}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </CounterWrap>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport { getData, resetData, selectAffine, getLoading } from './affineSlice';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\n\r\nconst Affine = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/affine/encode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/affine/decode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Affine Cipher\"\r\n          titleAlign=\"center\"\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          keys={data.key}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Affine\"\r\n        desc={\r\n          'is a type of monoalphabetic substitution cipher, where each letter in an alphabet is mapped to its numeric equivalent, encrypted using a simple mathematical function, and converted back to a letter. Each letter is enciphered with the function (ax + b) mod 26, where b is the magnitude of the shift.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Affine_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Affine;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'piVrehpiC',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const reverseSlice = createSlice({\r\n  name: 'reverse',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = reverseSlice.actions;\r\n\r\nexport const selectReverse = (state) => state.reverse;\r\n\r\nexport default reverseSlice.reducer;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { Container, getCurrentCase, submit, Wrap } from '../Utils';\r\nimport { getData, resetData, selectReverse, getLoading } from './reverseSlice';\r\n\r\nconst Reverse = () => {\r\n  const data = useSelector(selectReverse);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/encode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const decode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/decode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Reverse Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Reverse\"\r\n        desc={\r\n          ' uses a pattern of reversing the string of plain text to convert as cipher text. The process of encryption and decryption is same. To decrypt cipher text, the user simply needs to reverse the cipher text to get the plain text.'\r\n        }\r\n        link=\"https://www.tutorialspoint.com/cryptography_with_python/cryptography_with_python_reverse_cipher.htm\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Reverse;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'CriVpihpe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '12345',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const transpositionSlice = createSlice({\r\n  name: 'transposition',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = transpositionSlice.actions;\r\n\r\nexport const selectTransposition = (state) => state.transposition;\r\n\r\nexport default transpositionSlice.reducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectTransposition } from './transpositionSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">KEY</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter columns number...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\nimport {\r\n  getData,\r\n  resetData,\r\n  selectTransposition,\r\n  getLoading,\r\n} from './transpositionSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Transposition = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Transposition Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Transposition\"\r\n        desc={\r\n          ' is a method of encryption by which the positions held by units of plaintext (which are commonly characters or groups of characters) are shifted according to a regular system, so that the ciphertext constitutes a permutation of the plaintext.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Transposition_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Transposition;\r\n","import './index.css';\nimport Header from './components/Header';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Ceasar from './feature/ceasar';\nimport Affine from './feature/affine';\nimport Reverse from './feature/reverse';\nimport Transposition from './feature/transposition';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Ceasar} />\n          <Route path=\"/affine\" component={Affine} />\n          <Route path=\"/reverse\" component={Reverse} />\n          <Route path=\"/transposition\" component={Transposition} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport ceasar from '../feature/ceasar/ceasarSlice';\r\nimport affine from '../feature/affine/affineSlice';\r\nimport reverse from '../feature/reverse/reverseSlice';\r\nimport transposition from '../feature/transposition/transpositionSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ceasar: ceasar,\r\n    affine: affine,\r\n    reverse: reverse,\r\n    transposition: transposition,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}