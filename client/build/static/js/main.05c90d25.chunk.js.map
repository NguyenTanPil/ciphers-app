{"version":3,"sources":["components/Sidebar/SidebarStyles.js","components/Sidebar/index.js","components/Header/HeaderStyles.js","components/Header/index.js","components/Card/CardStyles.js","components/Card/Alphabet.js","components/Card/CardActions.js","components/Card/CardDescription.js","components/Card/CardInput.js","components/Card/loading.gif","components/Card/CardOutput.js","feature/Utils.js","feature/ceasar/ceasarSlice.js","feature/ceasar/ExtraInput.js","feature/ceasar/index.js","feature/affine/affineSlice.js","feature/affine/AffineStyles.js","feature/affine/ExtraInput.js","feature/affine/index.js","feature/reverse/reverseSlice.js","feature/reverse/index.js","feature/transposition/transpositionSlice.js","feature/transposition/ExtraInput.js","feature/transposition/index.js","components/Theme/ThemeCustome.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Container","styled","div","Wrap","aside","theme","background","boder","Header","border","text","ListLinks","ul","NavItem","li","NavLink","Link","hover","active","Sidebar","showSidebar","setShowSidebar","className","onClick","e","target","classList","contains","nodeName","exact","to","Nav","Wrapper","Logo","NavList","Bar","button","TrackMode","props","setTheme","useState","useEffect","document","body","style","overflow","textarea","Title","align","Content","TextareaInput","OutputText","span","Btns","Btn","Counter","InputGroup","CountBtn","disabled","AlphabetWrap","TransformOutPut","CaseStrategy","WrapDropdown","DropdownButton","DropdownList","ForeignChars","Brick","Description","title","Alphabet","CardActions","getForeignChars","encode","decode","plaintext","ciphertext","keys","currentCase","getCaseStategy","caseStrategy","foreignChars","reset","titleAlign","extraInput","showCase","setShowCase","handleSelectCase","map","strategy","key","id","value","length","CardDescription","cipher","desc","link","href","rel","CardInput","getPlaintext","placeholder","onChange","CardOutput","loading","src","loadingIcon","alt","replace","toUpperCase","toLowerCase","submit","url","mess","k","a","fetch","method","JSON","stringify","headers","response","json","result","getCurrentCase","cases","filter","item","initialState","loadingOutput","ceasarSlice","createSlice","name","reducers","getData","state","action","payload","resetData","increaseKey","decreaseKey","getLoading","actions","selectCeasar","ceasar","ExtraInput","data","useSelector","dispatch","useDispatch","htmlFor","parseInt","type","min","max","Ceasar","getCiphertext","console","log","getKey","newCases","b","affineSlice","increaseSlope","increaseIntercept","decreaseSlope","decreaseIntercept","selectAffine","affine","CounterWrap","colorDisabled","color","Affine","reverseSlice","selectReverse","reverse","Reverse","transpositionSlice","selectTransposition","transposition","Transposition","lightTheme","darkTheme","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.05c90d25.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  background-color: transparent;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  z-index: 2000;\r\n  transform: translateX(100%);\r\n  transition: transform 600ms ease;\r\n\r\n  &.active {\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const Wrap = styled.aside`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-left: 2px solid ${({ theme }) => theme.boder};\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 80%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    width: 40%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  padding: 1.8rem 3rem;\r\n\r\n  button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    height: 2.5rem;\r\n    outline: none;\r\n\r\n    svg {\r\n      color: ${({ theme }) => theme.text};\r\n      font-size: 2.5rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ListLinks = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: block;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n  padding: 1.25rem 3rem;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.hover};\r\n    padding-left: 3.5rem;\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.active};\r\n    border-left: 3px solid #26a69a;\r\n    color: #26a69a;\r\n  }\r\n`;\r\n","import {\r\n  Container,\r\n  Header,\r\n  ListLinks,\r\n  NavItem,\r\n  NavLink,\r\n  Wrap,\r\n} from './SidebarStyles';\r\nimport { CgPushChevronRight } from 'react-icons/cg';\r\n\r\nconst Sidebar = ({ showSidebar, setShowSidebar }) => {\r\n  const handleShow = (e) => {\r\n    if (e.target.classList.contains('close') || e.target.nodeName === 'A') {\r\n      setShowSidebar(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={showSidebar ? 'active close' : ''}\r\n      onClick={handleShow}\r\n    >\r\n      <Wrap>\r\n        <Header>\r\n          <button onClick={() => setShowSidebar(false)}>\r\n            <CgPushChevronRight />\r\n          </button>\r\n        </Header>\r\n        <ListLinks>\r\n          <NavItem>\r\n            <NavLink exact to=\"/\">\r\n              ceasar\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/affine\">affine</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/reverse\">reverse</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/transposition\">transposition</NavLink>\r\n          </NavItem>\r\n        </ListLinks>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Nav = styled.div`\r\n  background-color: #4db6ac;\r\n  font-family: 'Zen Antique Soft', serif;\r\n  height: 6.4rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  line-height: 6.4rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n  color: #fff;\r\n  font-size: 3.2rem;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0;\r\n  transition: background-color 0.3s;\r\n\r\n  /* &:hover {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  } */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: none;\r\n  font-size: 1.6rem;\r\n  padding: 0 1.5rem;\r\n  text-transform: capitalize;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const Bar = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  outline: none;\r\n\r\n  svg {\r\n    display: block;\r\n    color: #fff;\r\n    font-size: 2.5rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport const TrackMode = styled.div`\r\n  background-color: #4d4d4d;\r\n  border-radius: calc(4.6rem / 4);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 2.4rem;\r\n  margin-right: 1rem;\r\n  position: relative;\r\n  width: 4.6rem;\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    text-align: center;\r\n    width: 2.4rem;\r\n  }\r\n\r\n  & > .ball {\r\n    background-color: #fff;\r\n    border: 0.2rem solid #4d4d4d;\r\n    border-radius: 50%;\r\n    height: 2.3rem;\r\n    position: absolute;\r\n    left: 0;\r\n    transition: all 0.25s ease;\r\n    transform: translateX(\r\n      ${(props) => (props.theme === 'light' ? '0' : '100%')}\r\n    );\r\n    width: 2.3rem;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 2px 3px #ba8fff;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { AiOutlineBars } from 'react-icons/ai';\r\nimport Sidebar from '../Sidebar';\r\nimport {\r\n  Bar,\r\n  Logo,\r\n  Nav,\r\n  NavItem,\r\n  NavList,\r\n  TrackMode,\r\n  Wrapper,\r\n} from './HeaderStyles';\r\n\r\nconst Header = ({ theme, setTheme }) => {\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n  const themeToggle = () => {\r\n    if (theme === 'light') {\r\n      setTheme('dark');\r\n    } else {\r\n      setTheme('light');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showSidebar) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'auto';\r\n    }\r\n  }, [showSidebar]);\r\n\r\n  return (\r\n    <Nav>\r\n      <Wrapper>\r\n        <Logo to=\"/\">CipherVip</Logo>\r\n        <NavList>\r\n          {/* <NavItem>\r\n            <NavLink to=\"/\">ceasar</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/affine\">affine</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/reverse\">reverse</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/transposition\">transposition</NavLink>\r\n          </NavItem> */}\r\n          <NavItem>\r\n            <TrackMode onClick={themeToggle} theme={theme}>\r\n              <span>🌜</span>\r\n              <div className=\"ball\"></div>\r\n              <span>🌞</span>\r\n            </TrackMode>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Bar onClick={() => setShowSidebar(true)}>\r\n              <AiOutlineBars />\r\n            </Bar>\r\n          </NavItem>\r\n        </NavList>\r\n      </Wrapper>\r\n      <Sidebar showSidebar={showSidebar} setShowSidebar={setShowSidebar} />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-radius: 0.2rem;\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  box-sizing: border-box;\r\n  height: ${(props) => (props.textarea ? '30rem' : 'auto')};\r\n  max-width: 50rem;\r\n  margin-bottom: 4rem;\r\n  padding: 0 0.75rem;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-bottom: 1rem;\r\n    width: 31.5%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 0 0 0.2rem 0.2rem;\r\n  color: #4db6ac;\r\n  font-size: 2.4rem;\r\n  font-weight: 600;\r\n  line-height: 4.8rem;\r\n  padding: 2rem;\r\n  text-align: ${(props) => (props.align === 'center' ? 'center' : 'left')};\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TextareaInput = styled.textarea`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  outline: none;\r\n  padding: 2rem;\r\n  resize: none;\r\n  transition: all 0.2s ease 0s;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid ${({ theme }) => theme.border};\r\n    box-shadow: 0 1px 0 0 #26a69a;\r\n  }\r\n`;\r\n\r\nexport const OutputText = styled.span`\r\n  color: #797f86;\r\n  display: flex;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  padding: 2rem;\r\n  width: 100%;\r\n\r\n  img {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 2rem 1rem;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n  }\r\n`;\r\nexport const Btn = styled.button`\r\n  background-color: #26a69a;\r\n  border: none;\r\n  border-radius: 0.2rem;\r\n  color: rgb(232, 230, 227);\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  height: 3.6rem;\r\n  letter-spacing: 0.5px;\r\n  line-height: 3.6rem;\r\n  margin-top: 1rem;\r\n  max-width: 11.6rem;\r\n  padding: 0 3.2rem;\r\n  text-align: center;\r\n  text-decoration-color: initial;\r\n  text-transform: uppercase;\r\n  transition: background-color 0.3s ease 0s;\r\n  vertical-align: middle;\r\n  width: 11.6rem;\r\n\r\n  &:hover {\r\n    background-color: rgb(34, 150, 138);\r\n  }\r\n`;\r\n\r\nexport const Counter = styled(Btns)`\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 1rem 0.2rem;\r\n  div {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    color: #4db6ac;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    padding-left: 1.8rem;\r\n  }\r\n\r\n  ${Btn} {\r\n    margin-top: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1rem 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  input {\r\n    background-color: ${({ theme }) => theme.background};\r\n    border: none;\r\n    color: ${({ theme }) => theme.text};\r\n    flex-grow: 1;\r\n    font-size: 1.6rem;\r\n    letter-spacing: 1px;\r\n    outline: none;\r\n    text-align: center;\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  input[type='text'] {\r\n    border-bottom: 1px solid transparent;\r\n    margin-left: 1.8rem;\r\n    padding-top: 1rem;\r\n    padding-bottom: 0.5rem;\r\n    text-align: left;\r\n\r\n    &:focus {\r\n      border-color: #4db6ac;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CountBtn = styled(Btn)`\r\n  background-color: transparent;\r\n  color: ${(props) => (props.disabled ? '#797f86' : '#988f81')};\r\n  cursor: ${(props) => (props.disabled ? 'initial' : 'pointer')};\r\n  font-size: 2.6rem;\r\n  font-weight: 600;\r\n  height: 4.6rem;\r\n  padding: 0;\r\n  width: 4.6rem;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: ${(props) => (props.disabled ? '#797f86' : '#4db6ac')};\r\n    transform: ${(props) => (props.disabled ? 'scale(1)' : 'scale(1.5)')};\r\n  }\r\n`;\r\n\r\nexport const AlphabetWrap = styled(Counter)`\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    height: 2.6rem;\r\n    line-height: 2.6rem;\r\n    letter-spacing: 1px;\r\n    padding-left: 1.8rem;\r\n    text-align: left;\r\n    vertical-align: middle;\r\n\r\n    &:first-child {\r\n      font-size: 1.2rem;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TransformOutPut = styled(Counter)`\r\n  flex-direction: row;\r\n  padding: 0 0.2rem;\r\n\r\n  & > div {\r\n    height: 100%;\r\n    padding: 2rem 0 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    padding-left: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 0 2rem;\r\n\r\n    & > div {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 0 2rem;\r\n  }\r\n`;\r\n\r\nexport const CaseStrategy = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    border-bottom: none;\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    button {\r\n      padding-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    button {\r\n      padding-right: 3.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WrapDropdown = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.8rem;\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 2.5rem;\r\n    pointer-events: none;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    svg {\r\n      right: 0.5rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    svg {\r\n      right: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DropdownButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  outline: none;\r\n  padding: 1.2rem 3.2rem 0 0;\r\n  text-align: left;\r\n  width: 100%;\r\n\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const DropdownList = styled.ul`\r\n  background-color: ${({ theme }) => theme.background};\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  border-radius: 0.25rem;\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  left: -1.8rem;\r\n  top: 140%;\r\n  z-index: 1008;\r\n  width: calc(100% + 1.8rem);\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    left: -3.8rem;\r\n    width: calc(100% + 3.8rem);\r\n  }\r\n\r\n  li {\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n    font-weight: 600;\r\n    padding: 1.25rem;\r\n    padding-left: 3.8rem;\r\n    transition: all 0.2s linear 0s;\r\n\r\n    &:hover {\r\n      background-color: ${({ theme }) => theme.hover};\r\n      padding-left: 4.2rem;\r\n    }\r\n\r\n    &.active {\r\n      background-color: ${({ theme }) => theme.active};\r\n      color: #26a69a;\r\n    }\r\n\r\n    &:first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ForeignChars = styled.div`\r\n  ${WrapDropdown} {\r\n    padding-top: 1.2rem;\r\n\r\n    button {\r\n      background-color: transparent;\r\n      border: none;\r\n      color: ${({ theme }) => theme.text};\r\n      cursor: pointer;\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      outline: none;\r\n      transition: color 0.2s ease 0s;\r\n\r\n      &:first-letter {\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      &:first-child {\r\n        margin-right: 1rem;\r\n      }\r\n\r\n      &.active {\r\n        color: #26a69a;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Brick = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.25rem 1.8rem;\r\n\r\n  svg {\r\n    font-size: 1.6rem;\r\n    font-weight: 600;\r\n    fill: currentColor;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 1.4;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1.25rem 1.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  padding: 3.6rem 0;\r\n  text-align: center;\r\n\r\n  div {\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1rem;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n  }\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.title};\r\n    display: block;\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n    padding-bottom: 1.4rem;\r\n    width: 100%;\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    font-weight: 590;\r\n    width: 100%;\r\n  }\r\n\r\n  a {\r\n    color: #4db6ac;\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    h1 {\r\n      font-size: 2.1rem;\r\n    }\r\n\r\n    p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    text-align: left;\r\n\r\n    h1,\r\n    p {\r\n      max-width: 70rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-top: 2rem;\r\n\r\n    h1,\r\n    p {\r\n      max-width: 80rem;\r\n    }\r\n  }\r\n`;\r\n","import { AlphabetWrap } from './CardStyles';\r\n\r\nconst Alphabet = () => {\r\n  return (\r\n    <AlphabetWrap>\r\n      <label>ALPHABET</label>\r\n      <div>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n      </div>\r\n    </AlphabetWrap>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import { useState } from 'react';\r\nimport { HiArrowNarrowDown } from 'react-icons/hi';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport Alphabet from './Alphabet';\r\nimport {\r\n  Brick,\r\n  Btn,\r\n  Btns,\r\n  CaseStrategy,\r\n  Container,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  ForeignChars,\r\n  Title,\r\n  TransformOutPut,\r\n  WrapDropdown,\r\n} from './CardStyles';\r\n\r\nconst CardActions = ({\r\n  getForeignChars,\r\n  encode,\r\n  decode,\r\n  plaintext,\r\n  ciphertext,\r\n  keys,\r\n  currentCase,\r\n  getCaseStategy,\r\n  caseStrategy,\r\n  foreignChars,\r\n  reset,\r\n  titleAlign,\r\n  title,\r\n  extraInput,\r\n}) => {\r\n  const [showCase, setShowCase] = useState(false);\r\n\r\n  const handleSelectCase = (e) => {\r\n    getCaseStategy(e);\r\n    setShowCase(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <Btns>\r\n          <Btn onClick={() => encode(plaintext, keys)}>encode</Btn>\r\n          <Btn onClick={() => decode(plaintext, keys)}>decode</Btn>\r\n          <Btn onClick={reset}>Reset</Btn>\r\n        </Btns>\r\n\r\n        {extraInput}\r\n\r\n        <Alphabet />\r\n\r\n        <TransformOutPut>\r\n          <CaseStrategy>\r\n            <label>CASE STRATEGY</label>\r\n            <WrapDropdown>\r\n              <DropdownButton onClick={() => setShowCase(!showCase)}>\r\n                {currentCase}\r\n              </DropdownButton>\r\n              {showCase && (\r\n                <DropdownList>\r\n                  {caseStrategy.map((strategy, key) => {\r\n                    return (\r\n                      <li\r\n                        className={strategy.active ? 'active' : ''}\r\n                        key={key}\r\n                        id={strategy.value}\r\n                        onClick={handleSelectCase}\r\n                      >\r\n                        {strategy.value}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </DropdownList>\r\n              )}\r\n              <RiArrowDownSFill />\r\n            </WrapDropdown>\r\n          </CaseStrategy>\r\n\r\n          <ForeignChars>\r\n            <label>FOREIGN CHARS</label>\r\n            <WrapDropdown>\r\n              <button\r\n                className={foreignChars === 'include' ? 'active' : ''}\r\n                id=\"include\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                include\r\n              </button>\r\n              <button\r\n                className={foreignChars === 'ignore' ? 'active' : ''}\r\n                id=\"ignore\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                ignore\r\n              </button>\r\n            </WrapDropdown>\r\n          </ForeignChars>\r\n        </TransformOutPut>\r\n\r\n        <Brick>\r\n          <HiArrowNarrowDown />\r\n          <span>Decoded {ciphertext.length} chars</span>\r\n        </Brick>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import { Description } from './CardStyles';\r\n\r\nconst CardDescription = ({ cipher, desc, link }) => {\r\n  return (\r\n    <Description>\r\n      <div>\r\n        <h1>\r\n          {cipher} cipher: Encode and Decode {cipher} to text\r\n        </h1>\r\n        <p>\r\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {cipher} cipher{' '}\r\n          </a>\r\n          {desc}\r\n        </p>\r\n      </div>\r\n    </Description>\r\n  );\r\n};\r\n\r\nexport default CardDescription;\r\n","import { Container, Title, Content, TextareaInput } from './CardStyles';\r\n\r\nconst CardInput = ({ title, titleAlign, plaintext, getPlaintext }) => {\r\n  const handleChange = (e) => {\r\n    getPlaintext(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <TextareaInput\r\n          placeholder=\"Enter your message...\"\r\n          value={plaintext}\r\n          onChange={handleChange}\r\n        />\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardInput;\r\n","export default __webpack_public_path__ + \"static/media/loading.ba14ef10.gif\";","import { Container, Content, OutputText, Title } from './CardStyles';\r\nimport loadingIcon from './loading.gif';\r\n\r\nconst CardOutput = ({\r\n  title,\r\n  titleAlign,\r\n  currentCase,\r\n  foreignChars,\r\n  ciphertext,\r\n  loading,\r\n}) => {\r\n  const formatOutput = () => {\r\n    if (foreignChars === 'ignore' && currentCase === 'upper case') {\r\n      return ciphertext.replace(/\\s/g, '').toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'lower case') {\r\n      return ciphertext.replace(/\\s/g, '').toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'maintain case') {\r\n      return ciphertext.replace(/\\s/g, '');\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'upper case') {\r\n      return ciphertext.toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'lower case') {\r\n      return ciphertext.toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'maintain case') {\r\n      return ciphertext;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <OutputText>\r\n          {loading ? (\r\n            <img src={loadingIcon} alt=\"loading output\" />\r\n          ) : (\r\n            formatOutput()\r\n          )}\r\n        </OutputText>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardOutput;\r\n","import styled from 'styled-components';\r\n\r\nexport const submit = async (url, mess, k) => {\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      text: mess,\r\n      key: k,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n  const result = await response.json();\r\n  return result;\r\n};\r\n\r\nexport const getCurrentCase = (cases) => {\r\n  return cases.filter((item) => item.active)[0].value;\r\n};\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.body};\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 1.6rem;\r\n  padding-top: 4.8rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'JpwolyCpw',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 7,\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const ceasarSlice = createSlice({\r\n  name: 'ceasar',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseKey(state) {\r\n      state.key += 1;\r\n    },\r\n    decreaseKey(state) {\r\n      state.key -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, increaseKey, decreaseKey, getLoading } =\r\n  ceasarSlice.actions;\r\n\r\nexport const selectCeasar = (state) => state.ceasar;\r\n\r\nexport default ceasarSlice.reducer;\r\n","import {\r\n  CountBtn,\r\n  Counter,\r\n  InputGroup,\r\n} from '../../components/Card/CardStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getData, selectCeasar, decreaseKey, increaseKey } from './ceasarSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const increase = () => {\r\n    dispatch(increaseKey());\r\n  };\r\n\r\n  const decrease = () => {\r\n    dispatch(decreaseKey());\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">KEY</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key) === 0 ? true : false}\r\n              onClick={decrease}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key) === 26 ? true : false}\r\n              onClick={increase}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\nimport { getData, resetData, selectCeasar, getLoading } from './ceasarSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Ceasar = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/ceasar/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/ceasar/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Ceasar Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Ceasar\"\r\n        desc={\r\n          ' is one of the simplest and most widely known encryption techniques. It is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Ceasar;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'RheafsUhe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: { a: 7, b: 3 },\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const affineSlice = createSlice({\r\n  name: 'affine',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseSlope(state) {\r\n      state.key.a += 1;\r\n    },\r\n    increaseIntercept(state) {\r\n      state.key.b += 1;\r\n    },\r\n    decreaseSlope(state) {\r\n      state.key.a -= 1;\r\n    },\r\n    decreaseIntercept(state) {\r\n      state.key.b -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getLoading,\r\n} = affineSlice.actions;\r\n\r\nexport const selectAffine = (state) => state.affine;\r\n\r\nexport default affineSlice.reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const CounterWrap = styled.div`\r\n  display: flex;\r\n\r\n  & > div {\r\n    width: 50%;\r\n\r\n    &:first-child {\r\n      border-right: 1px solid ${({ theme }) => theme.border};\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  CountBtn,\r\n  Counter,\r\n  InputGroup,\r\n} from '../../components/Card/CardStyles';\r\nimport { CounterWrap } from './AffineStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  selectAffine,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getData,\r\n} from './affineSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleFirstCountChange = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    getKey({ ...data.key, b: value });\r\n  };\r\n\r\n  const handleSecondCountChange = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    getKey({ ...data.key, a: value });\r\n  };\r\n\r\n  const increaseSlopeCounter = () => {\r\n    dispatch(increaseSlope());\r\n  };\r\n\r\n  const decreaseSlopeCounter = () => {\r\n    dispatch(decreaseSlope());\r\n  };\r\n\r\n  const increaseInterceptCounter = () => {\r\n    dispatch(increaseIntercept());\r\n  };\r\n\r\n  const decreaseInterceptCounter = () => {\r\n    dispatch(decreaseIntercept());\r\n  };\r\n\r\n  return (\r\n    <CounterWrap>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">SLOPE / A</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key.a) === 0 ? true : false}\r\n              colorDisabled={(theme) => theme.color}\r\n              onClick={decreaseSlopeCounter}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key.a}\r\n              onChange={handleFirstCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key.a) === 26 ? true : false}\r\n              colorDisabled={(theme) => theme.color}\r\n              onClick={increaseSlopeCounter}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">INTERCEPT / B</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key.b) === 0 ? true : false}\r\n              onClick={decreaseInterceptCounter}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key.b}\r\n              onChange={handleSecondCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key.b) === 26 ? true : false}\r\n              onClick={increaseInterceptCounter}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </CounterWrap>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport { getData, resetData, selectAffine, getLoading } from './affineSlice';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\n\r\nconst Affine = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/affine/encode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/affine/decode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Affine Cipher\"\r\n          titleAlign=\"center\"\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          keys={data.key}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Affine\"\r\n        desc={\r\n          'is a type of monoalphabetic substitution cipher, where each letter in an alphabet is mapped to its numeric equivalent, encrypted using a simple mathematical function, and converted back to a letter. Each letter is enciphered with the function (ax + b) mod 26, where b is the magnitude of the shift.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Affine_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Affine;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'piVrehpiC',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const reverseSlice = createSlice({\r\n  name: 'reverse',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = reverseSlice.actions;\r\n\r\nexport const selectReverse = (state) => state.reverse;\r\n\r\nexport default reverseSlice.reducer;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { Container, getCurrentCase, submit, Wrap } from '../Utils';\r\nimport { getData, resetData, selectReverse, getLoading } from './reverseSlice';\r\n\r\nconst Reverse = () => {\r\n  const data = useSelector(selectReverse);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/encode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const decode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/decode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Reverse Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Reverse\"\r\n        desc={\r\n          ' uses a pattern of reversing the string of plain text to convert as cipher text. The process of encryption and decryption is same. To decrypt cipher text, the user simply needs to reverse the cipher text to get the plain text.'\r\n        }\r\n        link=\"https://www.tutorialspoint.com/cryptography_with_python/cryptography_with_python_reverse_cipher.htm\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Reverse;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'CriVpihpe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '12345',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const transpositionSlice = createSlice({\r\n  name: 'transposition',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = transpositionSlice.actions;\r\n\r\nexport const selectTransposition = (state) => state.transposition;\r\n\r\nexport default transpositionSlice.reducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectTransposition } from './transpositionSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">KEY</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter columns number...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\nimport {\r\n  getData,\r\n  resetData,\r\n  selectTransposition,\r\n  getLoading,\r\n} from './transpositionSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Transposition = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Transposition Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Transposition\"\r\n        desc={\r\n          ' is a method of encryption by which the positions held by units of plaintext (which are commonly characters or groups of characters) are shifted according to a regular system, so that the ciphertext constitutes a permutation of the plaintext.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Transposition_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Transposition;\r\n","export const lightTheme = {\r\n  body: '#f2f4f6',\r\n  text: '#797f86',\r\n  background: '#fff',\r\n  title: '#272727',\r\n  active: '#e3e8ec',\r\n  hover: '#e3e8ec66',\r\n  border: '#e3e8ec',\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: '#1e2122',\r\n  text: '#988f81',\r\n  background: '#181a1b',\r\n  title: '#cfcbc5',\r\n  active: '#25282a',\r\n  hover: '#25282a66',\r\n  border: '#373b3d',\r\n};\r\n","import './index.css';\nimport Header from './components/Header';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Ceasar from './feature/ceasar';\nimport Affine from './feature/affine';\nimport Reverse from './feature/reverse';\nimport Transposition from './feature/transposition';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from '../src/components/Theme/ThemeCustome';\nimport { useState } from 'react';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <div className=\"App\">\n        <Router>\n          <Header theme={theme} setTheme={setTheme} />\n          <Switch>\n            <Route exact path=\"/\" component={Ceasar} />\n            <Route path=\"/affine\" component={Affine} />\n            <Route path=\"/reverse\" component={Reverse} />\n            <Route path=\"/transposition\" component={Transposition} />\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport ceasar from '../feature/ceasar/ceasarSlice';\r\nimport affine from '../feature/affine/affineSlice';\r\nimport reverse from '../feature/reverse/reverseSlice';\r\nimport transposition from '../feature/transposition/transpositionSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ceasar: ceasar,\r\n    affine: affine,\r\n    reverse: reverse,\r\n    transposition: transposition,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}