{"version":3,"sources":["components/Theme/ThemeCustome.js","components/Sidebar/SidebarStyles.js","components/Sidebar/index.js","components/Header/HeaderStyles.js","components/Header/index.js","components/Card/CardStyles.js","components/Card/Alphabet.js","components/Card/CardActions.js","components/Card/CardInput.js","components/Card/loading.gif","components/Card/CardOutput.js","components/Card/CardDescription.js","feature/affine/affineSlice.js","feature/affine/AffineStyles.js","feature/affine/ExtraInput.js","feature/Utils.js","feature/affine/index.js","feature/ceasar/ceasarSlice.js","feature/ceasar/ExtraInput.js","feature/ceasar/index.js","feature/reverse/reverseSlice.js","feature/reverse/index.js","feature/modulo/ModuloStyles.js","feature/modulo/index.js","feature/transposition/transpositionSlice.js","feature/transposition/ExtraInput.js","feature/transposition/index.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["lightTheme","body","text","background","title","active","hover","border","shadow","darkTheme","Container","styled","div","Wrap","aside","theme","Header","ListLinks","ul","NavItem","li","NavLink","Link","Sidebar","showSidebar","setShowSidebar","className","onClick","e","target","classList","contains","nodeName","exact","to","Nav","Wrapper","Logo","NavList","bounce","keyframes","Bar","button","TrackMode","props","setTheme","useState","useEffect","document","style","overflow","position","top","width","removeAttribute","textarea","Title","align","Content","TextareaInput","OutputText","span","Btns","Btn","Counter","InputGroup","CountBtn","disabled","AlphabetWrap","TransformOutPut","CaseStrategy","WrapDropdown","DropdownButton","DropdownList","ForeignChars","Brick","Description","Alphabet","CardActions","getForeignChars","encode","decode","plaintext","ciphertext","keys","currentCase","getCaseStategy","caseStrategy","foreignChars","reset","titleAlign","extraInput","showCase","setShowCase","handleSelectCase","map","strategy","key","id","value","length","CardInput","getPlaintext","placeholder","onChange","CardOutput","loading","src","loadingIcon","alt","replace","toUpperCase","toLowerCase","CardDescription","cipher","desc","link","utils","more","href","rel","initialState","a","b","loadingOutput","affineSlice","createSlice","name","reducers","getData","state","action","payload","resetData","increaseSlope","increaseIntercept","decreaseSlope","decreaseIntercept","getLoading","actions","selectAffine","affine","CounterWrap","ExtraInput","data","useSelector","dispatch","useDispatch","getKey","htmlFor","parseInt","colorDisabled","color","type","min","max","submit","url","mess","k","fetch","method","JSON","stringify","headers","response","json","result","getCurrentCase","cases","filter","item","Affine","getCiphertext","console","log","newCases","ceasarSlice","increaseKey","decreaseKey","selectCeasar","ceasar","Ceasar","reverseSlice","selectReverse","reverse","Reverse","WrapBtns","BtnLarge","TransformInput","ReverseKey","setActions","currentAction","showActions","setShowActions","output","setOutput","base","power","modulo","input","setInput","handleSelectAction","getModulo","number","mod","i","handleCountChange","field","num","height","Math","pow","transpositionSlice","selectTransposition","transposition","Transposition","App","path","component","Modulo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"wSAAaA,EAAa,CACxBC,KAAM,UACNC,KAAM,UACNC,WAAY,OACZC,MAAO,UACPC,OAAQ,UACRC,MAAO,YACPC,OAAQ,UACRC,OAAO,6EAIIC,EAAY,CACvBR,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,OAAQ,UACRC,MAAO,YACPC,OAAQ,UACRC,OAAO,8C,iBCjBIE,GAAYC,IAAOC,IAAV,mWAkBTC,GAAOF,IAAOG,MAAV,odACK,qBAAGC,MAAkBZ,cAChB,qBAAGY,MAAkBR,UAChC,qBAAGQ,MAAkBP,UAwBxBQ,GAASL,IAAOC,IAAV,0TACU,qBAAGG,MAAkBR,UAWnC,qBAAGQ,MAAkBb,QAOvBe,GAAYN,IAAOO,GAAV,0EAKTC,GAAUR,IAAOS,GAAV,gDAIPC,GAAUV,YAAOW,IAAPX,CAAH,mZACS,qBAAGI,MAAkBR,UACvC,qBAAGQ,MAAkBb,QASR,qBAAGa,MAAkBT,SAKrB,qBAAGS,MAAkBV,U,iBCxC9BkB,GA1CC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAO9B,OACE,eAACf,GAAD,CACEgB,UAAWF,EAAc,eAAiB,GAC1CG,QATe,SAACC,IACdA,EAAEC,OAAOC,UAAUC,SAAS,UAAkC,MAAtBH,EAAEC,OAAOG,WACnDP,GAAe,IAKjB,SAIE,gBAACZ,GAAD,WACE,eAAC,GAAD,UACE,yBAAQc,QAAS,kBAAMF,GAAe,IAAtC,SACE,eAAC,KAAD,QAGJ,gBAACR,GAAD,WACE,eAACE,GAAD,UACE,eAACE,GAAD,CAASY,OAAK,EAACC,GAAG,IAAlB,sBAIF,eAACf,GAAD,UACE,eAACE,GAAD,CAASa,GAAG,UAAZ,sBAEF,eAACf,GAAD,UACE,eAACE,GAAD,CAASa,GAAG,WAAZ,uBAEF,eAACf,GAAD,UACE,eAACE,GAAD,CAASa,GAAG,iBAAZ,6BAEF,eAACf,GAAD,UACE,eAACE,GAAD,CAASa,GAAG,UAAZ,wCCzCCC,GAAMxB,IAAOC,IAAV,yHAMHwB,GAAUzB,IAAOC,IAAV,2OAaPyB,GAAO1B,YAAOW,IAAPX,CAAH,mEAKJ2B,GAAU3B,IAAOO,GAAV,uEAKPC,GAAUR,IAAOS,GAAV,iMAuBdmB,IAZiB5B,YAAOW,IAAPX,CAAH,qNAYL6B,YAAH,wJAYCC,GAAM9B,IAAO+B,OAAV,sWAUCH,IASJI,GAAYhC,IAAOC,IAAV,yqBA2Bd,SAACgC,GAAD,MAA4B,UAAhBA,EAAM7B,MAAoB,IAAM,UCvDrCC,GA7CA,SAAC,GAAyB,IAAvBD,EAAsB,EAAtBA,MAAO8B,EAAe,EAAfA,SACvB,EAAsCC,oBAAS,GAA/C,mBAAOtB,EAAP,KAAoBC,EAApB,KAoBA,OAXAsB,qBAAU,WACJvB,GACFwB,SAAS/C,KAAKgD,MAAMC,SAAW,SAC/BF,SAAS/C,KAAKgD,MAAME,SAAW,QAC/BH,SAAS/C,KAAKgD,MAAMG,IAAM,IAC1BJ,SAAS/C,KAAKgD,MAAMI,MAAQ,uBAE5BL,SAAS/C,KAAKqD,gBAAgB,WAE/B,CAAC9B,IAGF,gBAACW,GAAD,WACE,gBAACC,GAAD,WACE,eAACC,GAAD,CAAMH,GAAG,IAAT,uBACA,gBAACI,GAAD,WACE,eAAC,GAAD,UACE,gBAACK,GAAD,CAAWhB,QAzBD,WAEhBkB,EADY,UAAV9B,EACO,OAEA,UAqB8BA,MAAOA,EAAxC,UACE,iDACA,sBAAKW,UAAU,SACf,sDAGJ,eAAC,GAAD,UACE,eAACe,GAAD,CAAKd,QAAS,kBAAMF,GAAe,IAAnC,SACE,eAAC,KAAD,cAKR,eAAC,GAAD,CAASD,YAAaA,EAAaC,eAAgBA,Q,6DCnD5Cf,GAAYC,IAAOC,IAAV,+VACA,qBAAGG,MAAkBZ,cAE3B,qBAAGY,MAAkBP,UAEzB,SAACoC,GAAD,OAAYA,EAAMW,SAAW,QAAU,UAatCC,GAAQ7C,IAAOC,IAAV,8PACW,qBAAGG,MAAkBR,UAOlC,SAACqC,GAAD,MAA4B,WAAhBA,EAAMa,MAAqB,SAAW,UAIrDC,GAAU/C,IAAOC,IAAV,gEAKP+C,GAAgBhD,IAAO4C,SAAV,kfACJ,qBAAGxC,MAAkBZ,cAEhC,qBAAGY,MAAkBb,QAiBD,qBAAGa,MAAkBR,UAKvCqD,GAAajD,IAAOkD,KAAV,8UAmBVC,GAAOnD,IAAOC,IAAV,oWACY,qBAAGG,MAAkBR,UAiBrCwD,GAAMpD,IAAO+B,OAAV,siBAyBHsB,GAAUrD,YAAOmD,GAAPnD,CAAH,yjBAgBhBoD,IAiBSE,GAAatD,IAAOC,IAAV,4uBAMC,qBAAGG,MAAkBZ,cAEhC,qBAAGY,MAAkBb,QA+BrBgE,GAAWvD,YAAOoD,GAAPpD,CAAH,2RAEV,SAACiC,GAAD,OAAYA,EAAMuB,SAAW,UAAY,aACxC,SAACvB,GAAD,OAAYA,EAAMuB,SAAW,UAAY,aASxC,SAACvB,GAAD,OAAYA,EAAMuB,SAAW,UAAY,aACrC,SAACvB,GAAD,OAAYA,EAAMuB,SAAW,WAAa,gBAI9CC,GAAezD,YAAOqD,GAAPrD,CAAH,iaAQZ,qBAAGI,MAAkBb,QAgBrBmE,GAAkB1D,YAAOqD,GAAPrD,CAAH,ieA+Bf2D,GAAe3D,IAAOC,IAAV,4aACI,qBAAGG,MAAkBR,UAMpB,qBAAGQ,MAAkBR,UAgBtCgE,GAAe5D,IAAOC,IAAV,qYAIZ,qBAAGG,MAAkBb,QAqBrBsE,GAAiB7D,IAAO+B,OAAV,+SAGhB,qBAAG3B,MAAkBb,QAcnBuE,GAAe9D,IAAOO,GAAV,w0BACH,qBAAGH,MAAkBZ,cAIhC,qBAAGY,MAAkBb,QAuBN,qBAAGa,MAAkBT,SAKrB,qBAAGS,MAAkBV,UAUlCqE,GAAe/D,IAAOC,IAAV,6eACrB2D,IAMW,qBAAGxD,MAAkBb,QAsBvByE,GAAQhE,IAAOC,IAAV,6jBACP,qBAAGG,MAAkBb,QA+BnB0E,GAAcjE,IAAOC,IAAV,q6BACF,qBAAGG,MAAkBZ,cAY9B,qBAAGY,MAAkBX,SASrB,qBAAGW,MAAkBb,QC7bnB2E,GAZE,WACf,OACE,gBAACT,GAAD,WACE,8CACA,iCACE,+DACA,sECwGOU,GA7FK,SAAC,GAed,IAdLC,EAcI,EAdJA,gBACAC,EAaI,EAbJA,OACAC,EAYI,EAZJA,OACAC,EAWI,EAXJA,UACAC,EAUI,EAVJA,WACAC,EASI,EATJA,KACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,aACAC,EAKI,EALJA,aACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,WACAtF,EAEI,EAFJA,MACAuF,EACI,EADJA,WAEA,EAAgC7C,oBAAS,GAAzC,mBAAO8C,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,SAAClE,GACxB0D,EAAe1D,GACfiE,GAAY,IAEd,OACE,gBAAC,GAAD,WACE,eAACrC,GAAD,CAAOC,MAAOiC,EAAd,SAA2BtF,IAC3B,gBAACsD,GAAD,WACE,gBAACI,GAAD,WACE,eAACC,GAAD,CAAKpC,QAAS,kBAAMqD,EAAOE,EAAWE,IAAtC,oBACA,eAACrB,GAAD,CAAKpC,QAAS,kBAAMsD,EAAOC,EAAWE,IAAtC,oBACA,eAACrB,GAAD,CAAKpC,QAAS8D,EAAd,sBAGDE,EAED,eAAC,GAAD,IAEA,gBAACtB,GAAD,WACE,gBAACC,GAAD,WACE,mDACA,gBAACC,GAAD,WACE,eAACC,GAAD,CAAgB7C,QAAS,kBAAMkE,GAAaD,IAA5C,SACGP,IAEFO,GACC,eAACnB,GAAD,UACGc,EAAaQ,KAAI,SAACC,EAAUC,GAC3B,OACE,qBACEvE,UAAWsE,EAAS3F,OAAS,SAAW,GAExC6F,GAAIF,EAASG,MACbxE,QAASmE,EAJX,SAMGE,EAASG,OAJLF,QAUf,eAAC,KAAD,UAIJ,gBAACvB,GAAD,WACE,mDACA,gBAACH,GAAD,WACE,yBACE7C,UAA4B,YAAjB8D,EAA6B,SAAW,GACnDU,GAAG,UACHvE,QAAS,SAACC,GAAD,OAAOmD,EAAgBnD,EAAEC,OAAOqE,KAH3C,qBAOA,yBACExE,UAA4B,WAAjB8D,EAA4B,SAAW,GAClDU,GAAG,SACHvE,QAAS,SAACC,GAAD,OAAOmD,EAAgBnD,EAAEC,OAAOqE,KAH3C,6BAWN,gBAACvB,GAAD,WACE,eAAC,KAAD,IACA,6CAAeQ,EAAWiB,OAA1B,sBCpFKC,GAnBG,SAAC,GAAoD,IAAlDjG,EAAiD,EAAjDA,MAAOsF,EAA0C,EAA1CA,WAAYR,EAA8B,EAA9BA,UAAWoB,EAAmB,EAAnBA,aAKjD,OACE,gBAAC,GAAD,CAAW/C,UAAU,EAArB,UACE,eAACC,GAAD,CAAOC,MAAOiC,EAAd,SAA2BtF,IAC3B,eAACsD,GAAD,UACE,eAACC,GAAD,CACE4C,YAAY,wBACZJ,MAAOjB,EACPsB,SAXa,SAAC5E,GACpB0E,EAAa1E,EAAEC,OAAOsE,gBCJX,OAA0B,oCCqD1BM,GAlDI,SAAC,GAOb,IANLrG,EAMI,EANJA,MACAsF,EAKI,EALJA,WACAL,EAII,EAJJA,YACAG,EAGI,EAHJA,aACAL,EAEI,EAFJA,WACAuB,EACI,EADJA,QA4BA,OACE,gBAAC,GAAD,CAAWnD,UAAU,EAArB,UACE,eAACC,GAAD,CAAOC,MAAOiC,EAAd,SAA2BtF,IAC3B,eAACsD,GAAD,UACE,eAACE,GAAD,UACG8C,EACC,sBAAKC,IAAKC,GAAaC,IAAI,mBA/Bd,WAAjBrB,GAA6C,eAAhBH,EACxBF,EAAW2B,QAAQ,MAAO,IAAIC,cAGlB,WAAjBvB,GAA6C,eAAhBH,EACxBF,EAAW2B,QAAQ,MAAO,IAAIE,cAGlB,WAAjBxB,GAA6C,kBAAhBH,EACxBF,EAAW2B,QAAQ,MAAO,IAGd,YAAjBtB,GAA8C,eAAhBH,EACzBF,EAAW4B,cAGC,YAAjBvB,GAA8C,eAAhBH,EACzBF,EAAW6B,cAGC,YAAjBxB,GAA8C,kBAAhBH,EACzBF,OADT,UCTW8B,GArBS,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACpD,OACE,eAAC1C,GAAD,UACE,iCACE,gCACGsC,EADH,IACYG,EAAQ,GAAK,SADzB,IACoC,IACjCA,EAAQ,aAAe,oBAF1B,IAEgDH,EAAQ,IACrDG,EAAQ,kBAAoB,aAE/B,+BACE,qBAAGE,KAAMH,EAAMvF,OAAO,SAAS2F,IAAI,sBAAnC,UACGN,EADH,IACYG,EAAQ,GAAK,SAAU,OAElCF,KAEFG,GAAQ,6BAAIA,U,SCffG,GAAe,CACnBvC,UAAW,YACXC,WAAY,YACZI,aAAc,CACZ,CAAEY,MAAO,gBAAiB9F,QAAQ,GAClC,CAAE8F,MAAO,aAAc9F,QAAQ,GAC/B,CAAE8F,MAAO,aAAc9F,QAAQ,IAEjCmF,aAAc,UACdS,IAAK,CAAEyB,EAAG,EAAGC,EAAG,GAChBC,eAAe,GAGJC,GAAcC,aAAY,CACrCC,KAAM,SACNN,gBACAO,SAAU,CACRC,QADQ,SACAC,EAAOC,GACbD,EAAMhD,UAAYiD,EAAOC,QAAQlD,UACjCgD,EAAM/C,WAAagD,EAAOC,QAAQjD,WAClC+C,EAAM3C,aAAe4C,EAAOC,QAAQ7C,aACpC2C,EAAM1C,aAAe2C,EAAOC,QAAQ5C,aACpC0C,EAAMjC,IAAMkC,EAAOC,QAAQnC,KAE7BoC,UARQ,SAQEH,GACRA,EAAMhD,UAAYuC,GAAavC,UAC/BgD,EAAM/C,WAAasC,GAAatC,WAChC+C,EAAM3C,aAAekC,GAAalC,aAClC2C,EAAM1C,aAAeiC,GAAajC,aAClC0C,EAAMjC,IAAMwB,GAAaxB,KAE3BqC,cAfQ,SAeMJ,GACZA,EAAMjC,IAAIyB,GAAK,GAEjBa,kBAlBQ,SAkBUL,GAChBA,EAAMjC,IAAI0B,GAAK,GAEjBa,cArBQ,SAqBMN,GACZA,EAAMjC,IAAIyB,GAAK,GAEjBe,kBAxBQ,SAwBUP,GAChBA,EAAMjC,IAAI0B,GAAK,GAEjBe,WA3BQ,SA2BGR,EAAOC,GAChBD,EAAMN,cAAgBO,EAAOC,QAAQR,kBAKpC,GAQHC,GAAYc,QAPdV,GADK,GACLA,QACAI,GAFK,GAELA,UACAC,GAHK,GAGLA,cACAE,GAJK,GAILA,cACAD,GALK,GAKLA,kBACAE,GANK,GAMLA,kBACAC,GAPK,GAOLA,WAGWE,GAAe,SAACV,GAAD,OAAWA,EAAMW,QAE9BhB,MAAf,QC7DaiB,GAAcnI,IAAOC,IAAV,sJAOQ,qBAAGG,MAAkBR,UC8HtCwI,GAvHI,WACjB,IAAMC,EAAOC,aAAYL,IACnBM,EAAWC,eAEXC,EAAS,SAACjD,GACd+C,EACEjB,GAAQ,6BACHe,GADE,IAEL/C,IAAKE,OA+CX,OACE,gBAAC2C,GAAD,WACE,eAAC9E,GAAD,UACE,iCACE,wBAAOqF,QAAQ,MAAf,uBACA,gBAACpF,GAAD,WACE,gBAACC,GAAD,CACEC,SAAmC,IAAzBmF,SAASN,EAAK/C,IAAIyB,GAC5B6B,cAAe,SAACxI,GAAD,OAAWA,EAAMyI,OAChC7H,QArBiB,WAC3BuH,EAASV,OAiBD,UAKG,IALH,IAMI,OAEJ,wBACEiB,KAAK,SACLC,IAAK,EACLC,IAAK,GACLxD,MAAO6C,EAAK/C,IAAIyB,EAChBlB,SA7DmB,SAAC5E,GAC9B,IAAMuE,EAAQmD,SAAS1H,EAAEC,OAAOsE,OAG5BiD,EAFAjD,EACEA,EAAQ,GACH,6BAAK6C,EAAK/C,KAAX,IAAgByB,EAAG,KAElB,6BAAKsB,EAAK/C,KAAX,IAAgByB,EAAGvB,IAGpB,6BAAK6C,EAAK/C,KAAX,IAAgByB,EAAG,QAsDnB,gBAACxD,GAAD,CACEC,SAAmC,KAAzBmF,SAASN,EAAK/C,IAAIyB,GAC5B6B,cAAe,SAACxI,GAAD,OAAWA,EAAMyI,OAChC7H,QAxCiB,WAC3BuH,EAASZ,OAoCD,UAKG,IALH,IAMI,eAKV,eAACtE,GAAD,UACE,iCACE,wBAAOqF,QAAQ,MAAf,2BACA,gBAACpF,GAAD,WACE,gBAACC,GAAD,CACEC,SAAmC,IAAzBmF,SAASN,EAAK/C,IAAI0B,GAC5BhG,QA1CqB,WAC/BuH,EAAST,OAuCD,UAIG,IAJH,IAKI,OAEJ,wBACEgB,KAAK,SACLC,IAAK,EACLC,IAAK,GACLxD,MAAO6C,EAAK/C,IAAI0B,EAChBnB,SA7EoB,SAAC5E,GAC/B,IAAMuE,EAAQmD,SAAS1H,EAAEC,OAAOsE,OAG5BiD,EAFAjD,EACEA,EAAQ,GACH,6BAAK6C,EAAK/C,KAAX,IAAgB0B,EAAG,KAElB,6BAAKqB,EAAK/C,KAAX,IAAgB0B,EAAGxB,IAGpB,6BAAK6C,EAAK/C,KAAX,IAAgB0B,EAAG,QAsEnB,gBAACzD,GAAD,CACEC,SAAmC,KAAzBmF,SAASN,EAAK/C,IAAI0B,GAC5BhG,QA5DqB,WAC/BuH,EAASX,OAyDD,UAIG,IAJH,IAKI,mBC5HHqB,GAAM,yCAAG,WAAOC,EAAKC,EAAMC,GAAlB,kBAAArC,EAAA,sEACGsC,MAAMH,EAAK,CAChCI,OAAQ,OACRhK,KAAMiK,KAAKC,UAAU,CACnBjK,KAAM4J,EACN7D,IAAK8D,IAEPK,QAAS,CACP,eAAgB,qCARA,cACdC,EADc,gBAWCA,EAASC,OAXV,cAWdC,EAXc,yBAYbA,GAZa,2CAAH,0DAeNC,GAAiB,SAACC,GAC7B,OAAOA,EAAMC,QAAO,SAACC,GAAD,OAAUA,EAAKtK,UAAQ,GAAG8F,OAGnCzF,GAAYC,IAAOC,IAAV,uEACA,qBAAGG,MAAkBd,QAI9BY,GAAOF,IAAOC,IAAV,uVCkHFgK,GAlIA,WACb,IAAM5B,EAAOC,aAAYL,IACnBM,EAAWC,eACX9D,EAAcmF,GAAexB,EAAKzD,cAWlCsF,EAAgB,SAAC1E,GACrB+C,EACEjB,GAAQ,6BACHe,GADE,IAEL7D,WAAYgB,OAuBZnB,EAAM,yCAAG,WAAO9E,EAAM+F,GAAb,kBAAAyB,EAAA,sEAEXwB,EAASR,GAAW,CAAEd,eAAe,KAF1B,SAGkBgC,GAAO,qBAAsB1J,EAAM+F,GAHrD,gBAGHd,EAHG,EAGHA,WACR0F,EAAc1F,GACd+D,EAASR,GAAW,CAAEd,eAAe,KAL1B,kDAOXkD,QAAQC,IAAR,MAPW,0DAAH,wDAWN9F,EAAM,yCAAG,WAAO/E,EAAM+F,GAAb,kBAAAyB,EAAA,sEAEXwB,EAASR,GAAW,CAAEd,eAAe,KAF1B,SAGkBgC,GAAO,qBAAsB1J,EAAM+F,GAHrD,gBAGHd,EAHG,EAGHA,WACR0F,EAAc1F,GACd+D,EAASR,GAAW,CAAEd,eAAe,KAL1B,kDAOXkD,QAAQC,IAAR,MAPW,0DAAH,wDAiCZ,OACE,gBAAC,GAAD,WACE,gBAAC,GAAD,WACE,eAAC,GAAD,CACE3K,MAAM,aACNsF,YAAY,EACZR,UAAW8D,EAAK9D,UAChBoB,aAvFa,SAACH,GACpB+C,EACEjB,GAAQ,6BACHe,GADE,IAEL9D,UAAWiB,SAqFX,eAAC,GAAD,CACE/F,MAAM,gBACNsF,WAAW,SACX0D,OA1EO,SAACjD,GACd+C,EACEjB,GAAQ,6BACHe,GADE,IAEL/C,IAAKE,OAuEHpB,gBAlEgB,SAACoB,GACvB+C,EACEjB,GAAQ,6BACHe,GADE,IAELxD,aAAcW,OA+DZnB,OAAQA,EACRC,OAAQA,EACRC,UAAW8D,EAAK9D,UAChBC,WAAY6D,EAAK7D,WACjBC,KAAM4D,EAAK/C,IACXZ,YAAaA,EACbC,eA1Ce,SAAC1D,GACtB,IAAMuE,EAAQvE,EAAEC,OAAOqE,GACjB8E,EAAWhC,EAAKzD,aAAaQ,KAAI,SAAC4E,GACtC,OAAIA,EAAKxE,QAAUA,EACV,6BAAKwE,GAAZ,IAAkBtK,QAAQ,IAEnB,6BAAKsK,GAAZ,IAAkBtK,QAAQ,OAI9B6I,EACEjB,GAAQ,6BACHe,GADE,IAELzD,aAAcyF,OA8BZzF,aAAcyD,EAAKzD,aACnBC,aAAcwD,EAAKxD,aACnBC,MA3BM,WACZyD,EAASb,OA2BH1C,WAAY,eAAC,GAAD,MAEd,eAAC,GAAD,CACEvF,MAAM,cACNiF,YAAaA,EACbG,aAAcwD,EAAKxD,aACnBL,WAAY6D,EAAK7D,WACjBuB,QAASsC,EAAKpB,mBAGlB,eAAC,GAAD,CACEV,OAAO,SACPC,KACE,6SAEFC,KAAK,oDCpIPK,GAAe,CACnBvC,UAAW,YACXC,WAAY,YACZI,aAAc,CACZ,CAAEY,MAAO,gBAAiB9F,QAAQ,GAClC,CAAE8F,MAAO,aAAc9F,QAAQ,GAC/B,CAAE8F,MAAO,aAAc9F,QAAQ,IAEjCmF,aAAc,UACdS,IAAK,EACL2B,eAAe,GAGJqD,GAAcnD,aAAY,CACrCC,KAAM,SACNN,gBACAO,SAAU,CACRC,QADQ,SACAC,EAAOC,GACbD,EAAMhD,UAAYiD,EAAOC,QAAQlD,UACjCgD,EAAM/C,WAAagD,EAAOC,QAAQjD,WAClC+C,EAAM3C,aAAe4C,EAAOC,QAAQ7C,aACpC2C,EAAM1C,aAAe2C,EAAOC,QAAQ5C,aACpC0C,EAAMjC,IAAMkC,EAAOC,QAAQnC,KAE7BoC,UARQ,SAQEH,GACRA,EAAMhD,UAAYuC,GAAavC,UAC/BgD,EAAM/C,WAAasC,GAAatC,WAChC+C,EAAM3C,aAAekC,GAAalC,aAClC2C,EAAM1C,aAAeiC,GAAajC,aAClC0C,EAAMjC,IAAMwB,GAAaxB,KAE3BiF,YAfQ,SAeIhD,GACVA,EAAMjC,KAAO,GAEfkF,YAlBQ,SAkBIjD,GACVA,EAAMjC,KAAO,GAEfyC,WArBQ,SAqBGR,EAAOC,GAChBD,EAAMN,cAAgBO,EAAOC,QAAQR,kBAKpC,GACLqD,GAAYtC,QADCV,GAAR,GAAQA,QAASI,GAAjB,GAAiBA,UAAW6C,GAA5B,GAA4BA,YAAaC,GAAzC,GAAyCA,YAAazC,GAAtD,GAAsDA,WAGhD0C,GAAe,SAAClD,GAAD,OAAWA,EAAMmD,QAE9BJ,MAAf,QC2BelC,GArEI,WACjB,IAAMC,EAAOC,aAAYmC,IACnBlC,EAAWC,eAEXC,EAAS,SAACjD,GACd+C,EACEjB,GAAQ,6BACHe,GADE,IAEL/C,IAAKE,OA2BX,OACE,qCACE,eAACnC,GAAD,UACE,iCACE,wBAAOqF,QAAQ,MAAf,iBACA,gBAACpF,GAAD,WACE,gBAACC,GAAD,CACEC,SAAiC,IAAvBmF,SAASN,EAAK/C,KACxBtE,QA1BK,WACfuH,EAASiC,OAuBD,UAIG,IAJH,IAKI,OAEJ,wBACE1B,KAAK,SACLC,IAAK,EACLC,IAAK,GACLxD,MAAO6C,EAAK/C,IACZO,SAhCc,SAAC5E,GACzB,IAAMuE,EAAQmD,SAAS1H,EAAEC,OAAOsE,OAC5BA,EACEA,EAAQ,IACV2E,QAAQC,IAAI5E,GACZiD,EAAO,KAEPA,EAAOjD,GAGTiD,EAAO,MAwBD,gBAAClF,GAAD,CACEC,SAAiC,KAAvBmF,SAASN,EAAK/C,KACxBtE,QA5CK,WACfuH,EAASgC,OAyCD,UAIG,IAJH,IAKI,kBCgFDI,GA1IA,WACb,IAAMtC,EAAOC,aAAYmC,IACnBlC,EAAWC,eACX9D,EAAcmF,GAAexB,EAAKzD,cAWlCsF,EAAgB,SAAC1E,GACrB+C,EACEjB,GAAQ,6BACHe,GADE,IAEL7D,WAAYgB,OAuBZnB,EAAM,yCAAG,WAAO9E,EAAM+F,GAAb,kBAAAyB,EAAA,sEAEXwB,EAASR,GAAW,CAAEd,eAAe,KAF1B,SAGkBgC,GAC3B,qBACA1J,EACAoJ,SAASrD,IANA,gBAGHd,EAHG,EAGHA,WAKR0F,EAAc1F,GACd+D,EAASR,GAAW,CAAEd,eAAe,KAT1B,kDAWXkD,QAAQC,IAAR,MAXW,0DAAH,wDAeN9F,EAAM,yCAAG,WAAO/E,EAAM+F,GAAb,kBAAAyB,EAAA,sEAEXwB,EAASR,GAAW,CAAEd,eAAe,KAF1B,SAGkBgC,GAC3B,qBACA1J,EACAoJ,SAASrD,IANA,gBAGHd,EAHG,EAGHA,WAKR0F,EAAc1F,GACd+D,EAASR,GAAW,CAAEd,eAAe,KAT1B,kDAWXkD,QAAQC,IAAR,MAXW,0DAAH,wDAqCZ,OACE,gBAAC,GAAD,WACE,gBAAC,GAAD,WACE,eAAC,GAAD,CACE3K,MAAM,aACNsF,YAAY,EACZR,UAAW8D,EAAK9D,UAChBoB,aA/Fa,SAACH,GACpB+C,EACEjB,GAAQ,6BACHe,GADE,IAEL9D,UAAWiB,SA6FX,eAAC,GAAD,CACE/F,MAAM,gBACNsF,WAAW,SACXN,KAAM4D,EAAK/C,IACXmD,OAnFO,SAACjD,GACd+C,EACEjB,GAAQ,6BACHe,GADE,IAEL/C,IAAKE,OAgFHpB,gBA3EgB,SAACoB,GACvB+C,EACEjB,GAAQ,6BACHe,GADE,IAELxD,aAAcW,OAwEZnB,OAAQA,EACRC,OAAQA,EACRC,UAAW8D,EAAK9D,UAChBC,WAAY6D,EAAK7D,WACjBE,YAAaA,EACbC,eA1Ce,SAAC1D,GACtB,IAAMuE,EAAQvE,EAAEC,OAAOqE,GACjB8E,EAAWhC,EAAKzD,aAAaQ,KAAI,SAAC4E,GACtC,OAAIA,EAAKxE,QAAUA,EACV,6BAAKwE,GAAZ,IAAkBtK,QAAQ,IAEnB,6BAAKsK,GAAZ,IAAkBtK,QAAQ,OAI9B6I,EACEjB,GAAQ,6BACHe,GADE,IAELzD,aAAcyF,OA8BZzF,aAAcyD,EAAKzD,aACnBC,aAAcwD,EAAKxD,aACnBC,MA3BM,WACZyD,EAASb,OA2BH1C,WAAY,eAAC,GAAD,MAEd,eAAC,GAAD,CACEvF,MAAM,cACNiF,YAAaA,EACbG,aAAcwD,EAAKxD,aACnBL,WAAY6D,EAAK7D,WACjBuB,QAASsC,EAAKpB,mBAGlB,eAAC,GAAD,CACEV,OAAO,SACPC,KACE,2NAEFC,KAAK,oDC5IPK,GAAe,CACnBvC,UAAW,YACXC,WAAY,YACZI,aAAc,CACZ,CAAEY,MAAO,gBAAiB9F,QAAQ,GAClC,CAAE8F,MAAO,aAAc9F,QAAQ,GAC/B,CAAE8F,MAAO,aAAc9F,QAAQ,IAEjCmF,aAAc,UACdoC,eAAe,GAGJ2D,GAAezD,aAAY,CACtCC,KAAM,UACNN,gBACAO,SAAU,CACRC,QADQ,SACAC,EAAOC,GACbD,EAAMhD,UAAYiD,EAAOC,QAAQlD,UACjCgD,EAAM/C,WAAagD,EAAOC,QAAQjD,WAClC+C,EAAM3C,aAAe4C,EAAOC,QAAQ7C,aACpC2C,EAAM1C,aAAe2C,EAAOC,QAAQ5C,cAEtC6C,UAPQ,SAOEH,GACRA,EAAMhD,UAAY,GAClBgD,EAAM/C,WAAa,GACnB+C,EAAM3C,aAAekC,GAAalC,aAClC2C,EAAM1C,aAAeiC,GAAajC,cAEpCkD,WAbQ,SAaGR,EAAOC,GAChBD,EAAMN,cAAgBO,EAAOC,QAAQR,kBAKpC,GAA2C2D,GAAa5C,QAAhDV,GAAR,GAAQA,QAASI,GAAjB,GAAiBA,UAAWK,GAA5B,GAA4BA,WAEtB8C,GAAgB,SAACtD,GAAD,OAAWA,EAAMuD,SAE/BF,MAAf,QCuFeG,GAtHC,WACd,IAAM1C,EAAOC,aAAYuC,IACnBtC,EAAWC,eACX9D,EAAcmF,GAAexB,EAAKzD,cAWlCsF,EAAgB,SAAC1E,GACrB+C,EACEjB,GAAQ,6BACHe,GADE,IAEL7D,WAAYgB,OAcZnB,EAAM,yCAAG,WAAO9E,GAAP,kBAAAwH,EAAA,sEAEXwB,EAASR,GAAW,CAAEd,eAAe,KAF1B,SAGkBgC,GAAO,sBAAuB1J,GAHhD,gBAGHiF,EAHG,EAGHA,WACR0F,EAAc1F,GACd+D,EAASR,GAAW,CAAEd,eAAe,KAL1B,kDAOXkD,QAAQC,IAAR,MAPW,0DAAH,sDAUN9F,EAAM,yCAAG,WAAO/E,GAAP,kBAAAwH,EAAA,sEAEXwB,EAASR,GAAW,CAAEd,eAAe,KAF1B,SAGkBgC,GAAO,sBAAuB1J,GAHhD,gBAGHiF,EAHG,EAGHA,WACR0F,EAAc1F,GACd+D,EAASR,GAAW,CAAEd,eAAe,KAL1B,kDAOXkD,QAAQC,IAAR,MAPW,0DAAH,sDAiCZ,OACE,gBAAC,GAAD,WACE,gBAAC,GAAD,WACE,eAAC,GAAD,CACE3K,MAAM,aACNsF,YAAY,EACZR,UAAW8D,EAAK9D,UAChBoB,aA7Ea,SAACH,GACpB+C,EACEjB,GAAQ,6BACHe,GADE,IAEL9D,UAAWiB,SA2EX,eAAC,GAAD,CACE/F,MAAM,iBACNsF,WAAW,SACXN,KAAM4D,EAAK/C,IACXlB,gBAjEgB,SAACoB,GACvB+C,EACEjB,GAAQ,6BACHe,GADE,IAELxD,aAAcW,OA8DZnB,OAAQA,EACRC,OAAQA,EACRC,UAAW8D,EAAK9D,UAChBC,WAAY6D,EAAK7D,WACjBE,YAAaA,EACbC,eAzCe,SAAC1D,GACtB,IAAMuE,EAAQvE,EAAEC,OAAOqE,GACjB8E,EAAWhC,EAAKzD,aAAaQ,KAAI,SAAC4E,GACtC,OAAIA,EAAKxE,QAAUA,EACV,6BAAKwE,GAAZ,IAAkBtK,QAAQ,IAEnB,6BAAKsK,GAAZ,IAAkBtK,QAAQ,OAI9B6I,EACEjB,GAAQ,6BACHe,GADE,IAELzD,aAAcyF,OA6BZzF,aAAcyD,EAAKzD,aACnBC,aAAcwD,EAAKxD,aACnBC,MA1BM,WACZyD,EAASb,SA2BL,eAAC,GAAD,CACEjI,MAAM,cACNiF,YAAaA,EACbG,aAAcwD,EAAKxD,aACnBL,WAAY6D,EAAK7D,WACjBuB,QAASsC,EAAKpB,mBAGlB,eAAC,GAAD,CACEV,OAAO,UACPC,KACE,qOAEFC,KAAK,4G,SCtHA0B,GAAcnI,IAAOC,IAAV,uOAaX+K,GAAWhL,YAAOmD,GAAPnD,CAAH,sGAMRiL,GAAWjL,YAAOoD,GAAPpD,CAAH,wLAWRkL,GAAiBlL,YAAO0D,GAAP1D,CAAH,weC+NZmL,GAxOI,WACjB,MAA8BhJ,mBAAS,CACrC,CAAEqD,MAAO,SAAU9F,QAAQ,GAC3B,CAAE8F,MAAO,QAAS9F,QAAQ,KAF5B,mBAAOsI,EAAP,KAAgBoD,EAAhB,KAIMC,EAAgBxB,GAAe7B,GACrC,EAAsC7F,oBAAS,GAA/C,mBAAOmJ,EAAP,KAAoBC,EAApB,KACA,EAA4BpJ,mBAAS,IAArC,mBAAOqJ,EAAP,KAAeC,EAAf,KACA,EAA0BtJ,mBAAS,CACjCuJ,KAAM,EACNC,MAAO,EACPC,OAAQ,KAHV,mBAAOC,EAAP,KAAcC,EAAd,KAMMC,EAAqB,SAAC9K,GAC1BsK,GAAe,GACf,IAAM/F,EAAQvE,EAAEC,OAAOqE,GACvB6F,GAAW,SAACpD,GACV,OAAOA,EAAQ5C,KAAI,SAACoC,GAClB,OAAIA,EAAOhC,QAAUA,EACZ,6BAAKgC,GAAZ,IAAoB9H,QAAQ,IAErB,6BAAK8H,GAAZ,IAAoB9H,QAAQ,WAM9BsM,EAAY,SAACC,EAAQC,GACzB,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAKC,IACxB,GAAKA,EAAIF,EAAUC,IAAQ,EACzB,OAAOC,EAIX,MAAO,aAaHC,EAAoB,SAACC,EAAO7G,GAAoB,IAAb8G,EAAY,uDAAN,EAE3CR,EADEtG,EACO,6BAAKqG,GAAN,mBAAcQ,EAAQ1D,SAASnD,GAAS8G,IAEvC,6BAAKT,GAAN,mBAAcQ,EAAQ7G,MAalC,OACE,gBAAC,GAAD,WACE,gBAAC,GAAD,WACE,gBAAC,GAAD,WACE,eAAC3C,GAAD,yBACA,eAACE,GAAD,UACE,gBAAC,GAAD,WACE,eAACM,GAAD,UACE,iCACE,wBAAOqF,QAAQ,MAAf,SACqB,WAAlB2C,EAA6B,SAAW,SAE3C,gBAAC/H,GAAD,WACE,gBAACC,GAAD,CACEqF,cAAe,SAACxI,GAAD,OAAWA,EAAMyI,OAChC7H,QAAS,kBAAMoL,EAAkB,OAAQP,EAAMH,MAAO,IAFxD,UAIG,IAJH,IAKI,OAEJ,wBACE5C,KAAK,SACLtD,MAAOqG,EAAMH,KACb7F,SAAU,SAAC5E,GAAD,OACRmL,EAAkB,OAAQnL,EAAEC,OAAOsE,UAGvC,gBAACjC,GAAD,CACEqF,cAAe,SAACxI,GAAD,OAAWA,EAAMyI,OAChC7H,QAAS,kBAAMoL,EAAkB,OAAQP,EAAMH,KAAM,IAFvD,UAIG,IAJH,IAKI,eAKS,UAAlBL,GACC,eAAChI,GAAD,UACE,iCACE,wBAAOqF,QAAQ,MAAf,mBACA,gBAACpF,GAAD,WACE,gBAACC,GAAD,CACEqF,cAAe,SAACxI,GAAD,OAAWA,EAAMyI,OAChC7H,QAAS,kBACPoL,EAAkB,QAASP,EAAMF,OAAQ,IAH7C,UAMG,IANH,IAOI,OAEJ,wBACE7C,KAAK,SACLtD,MAAOqG,EAAMF,MACb9F,SAAU,SAAC5E,GAAD,OACRmL,EAAkB,QAASnL,EAAEC,OAAOsE,UAGxC,gBAACjC,GAAD,CACEqF,cAAe,SAACxI,GAAD,OAAWA,EAAMyI,OAChC7H,QAAS,kBACPoL,EAAkB,QAASP,EAAMF,MAAO,IAH5C,UAMG,IANH,IAOI,eAMZ,eAACtI,GAAD,UACE,iCACE,wBAAOqF,QAAQ,MAAf,oBACA,gBAACpF,GAAD,WACE,gBAACC,GAAD,CACEqF,cAAe,SAACxI,GAAD,OAAWA,EAAMyI,OAChC7H,QAAS,kBACPoL,EAAkB,SAAUP,EAAMD,QAAS,IAH/C,UAMG,IANH,IAOI,OAEJ,wBACE9C,KAAK,SACLtD,MAAOqG,EAAMD,OACb/F,SAAU,SAAC5E,GAAD,OACRmL,EAAkB,SAAUnL,EAAEC,OAAOsE,UAGzC,gBAACjC,GAAD,CACEqF,cAAe,SAACxI,GAAD,OAAWA,EAAMyI,OAChC7H,QAAS,kBACPoL,EAAkB,SAAUP,EAAMD,OAAQ,IAH9C,UAMG,IANH,IAOI,uBAShB,gBAAC,GAAD,CAAetJ,MAAO,CAAEiK,OAAQ,WAAhC,UACE,eAAC1J,GAAD,qBACA,gBAACE,GAAD,WACE,gBAACiI,GAAD,WACE,eAACC,GAAD,CAAUjK,QA1IJ,WAChB,IAAI4I,EAAS,EAEXA,EAASoC,EADW,WAAlBX,EACiBQ,EAAMH,KAENc,KAAKC,IAAIZ,EAAMH,KAAMG,EAAMF,OAFfE,EAAMD,QAIvCH,EAAU7B,IAmIA,uBACA,eAACqB,GAAD,CAAUjK,QAzHR,WACZ8K,EAAS,CACPJ,KAAM,EACNC,MAAO,EACPC,OAAQ,KAEVH,EAAU,KAmHA,sBAGF,eAACP,GAAD,UACE,gBAACvH,GAAD,WACE,gDACA,gBAACC,GAAD,WACE,eAACC,GAAD,CAAgB7C,QAAS,kBAAMuK,GAAgBD,IAA/C,SACGD,IAEFC,GACC,eAACxH,GAAD,UACGkE,EAAQ5C,KAAI,SAACC,EAAUC,GACtB,OACE,qBACEvE,UAAWsE,EAAS3F,OAAS,SAAW,GAExC6F,GAAIF,EAASG,MACbxE,QAAS+K,EAJX,SAMG1G,EAASG,OAJLF,QAUf,eAAC,KAAD,kBAOV,gBAAC,GAAD,WACE,eAACzC,GAAD,0BACA,eAACE,GAAD,UACE,eAACE,GAAD,UAAauI,YAInB,eAAC,GAAD,CACEjF,OAAO,mBACPC,KACE,ubAEFC,KAAK,iDACLC,OAAO,EACPC,KACE,4QCvPJG,GAAe,CACnBvC,UAAW,YACXC,WAAY,YACZI,aAAc,CACZ,CAAEY,MAAO,gBAAiB9F,QAAQ,GAClC,CAAE8F,MAAO,aAAc9F,QAAQ,GAC/B,CAAE8F,MAAO,aAAc9F,QAAQ,IAEjCmF,aAAc,UACdS,IAAK,QACL2B,eAAe,GAGJyF,GAAqBvF,aAAY,CAC5CC,KAAM,gBACNN,gBACAO,SAAU,CACRC,QADQ,SACAC,EAAOC,GACbD,EAAMhD,UAAYiD,EAAOC,QAAQlD,UACjCgD,EAAM/C,WAAagD,EAAOC,QAAQjD,WAClC+C,EAAM3C,aAAe4C,EAAOC,QAAQ7C,aACpC2C,EAAM1C,aAAe2C,EAAOC,QAAQ5C,aACpC0C,EAAMjC,IAAMkC,EAAOC,QAAQnC,KAE7BoC,UARQ,SAQEH,GACRA,EAAMhD,UAAYuC,GAAavC,UAC/BgD,EAAM/C,WAAasC,GAAatC,WAChC+C,EAAM3C,aAAekC,GAAalC,aAClC2C,EAAM1C,aAAeiC,GAAajC,aAClC0C,EAAMjC,IAAMwB,GAAaxB,KAE3ByC,WAfQ,SAeGR,EAAOC,GAChBD,EAAMN,cAAgBO,EAAOC,QAAQR,kBAKpC,GAA2CyF,GAAmB1E,QAAtDV,GAAR,GAAQA,QAASI,GAAjB,GAAiBA,UAAWK,GAA5B,GAA4BA,WAEtB4E,GAAsB,SAACpF,GAAD,OAAWA,EAAMqF,eAErCF,MAAf,QCHetE,GApCI,WACjB,IAAMC,EAAOC,aAAYqE,IACnBpE,EAAWC,eAejB,OACE,qCACE,eAACnF,GAAD,UACE,iCACE,wBAAOqF,QAAQ,MAAf,iBACA,eAACpF,GAAD,UACE,wBACEwF,KAAK,OACLtD,MAAO6C,EAAK/C,IACZO,SAbc,SAAC5E,GATZ,IAACuE,IAUPvE,EAAEC,OAAOsE,MAThB+C,EACEjB,GAAQ,6BACHe,GADE,IAEL/C,IAAKE,OAmBCI,YAAY,sCC0HXiH,GA1IO,WACpB,IAAMxE,EAAOC,aAAYqE,IACnBpE,EAAWC,eACX9D,EAAcmF,GAAexB,EAAKzD,cAWlCsF,EAAgB,SAAC1E,GACrB+C,EACEjB,GAAQ,6BACHe,GADE,IAEL7D,WAAYgB,OAuBZnB,EAAM,yCAAG,WAAO9E,EAAM+F,GAAb,kBAAAyB,EAAA,sEAEXwB,EAASR,GAAW,CAAEd,eAAe,KAF1B,SAGkBgC,GAC3B,4BACA1J,EACA+F,GANS,gBAGHd,EAHG,EAGHA,WAKR0F,EAAc1F,GACd+D,EAASR,GAAW,CAAEd,eAAe,KAT1B,kDAWXkD,QAAQC,IAAR,MAXW,0DAAH,wDAeN9F,EAAM,yCAAG,WAAO/E,EAAM+F,GAAb,kBAAAyB,EAAA,sEAEXwB,EAASR,GAAW,CAAEd,eAAe,KAF1B,SAGkBgC,GAC3B,4BACA1J,EACA+F,GANS,gBAGHd,EAHG,EAGHA,WAKR0F,EAAc1F,GACd+D,EAASR,GAAW,CAAEd,eAAe,KAT1B,kDAWXkD,QAAQC,IAAR,MAXW,0DAAH,wDAqCZ,OACE,gBAAC,GAAD,WACE,gBAAC,GAAD,WACE,eAAC,GAAD,CACE3K,MAAM,aACNsF,YAAY,EACZR,UAAW8D,EAAK9D,UAChBoB,aA/Fa,SAACH,GACpB+C,EACEjB,GAAQ,6BACHe,GADE,IAEL9D,UAAWiB,SA6FX,eAAC,GAAD,CACE/F,MAAM,uBACNsF,WAAW,SACXN,KAAM4D,EAAK/C,IACXmD,OAnFO,SAACjD,GACd+C,EACEjB,GAAQ,6BACHe,GADE,IAEL/C,IAAKE,OAgFHpB,gBA3EgB,SAACoB,GACvB+C,EACEjB,GAAQ,6BACHe,GADE,IAELxD,aAAcW,OAwEZnB,OAAQA,EACRC,OAAQA,EACRC,UAAW8D,EAAK9D,UAChBC,WAAY6D,EAAK7D,WACjBE,YAAaA,EACbC,eA1Ce,SAAC1D,GACtB,IAAMuE,EAAQvE,EAAEC,OAAOqE,GACjB8E,EAAWhC,EAAKzD,aAAaQ,KAAI,SAAC4E,GACtC,OAAIA,EAAKxE,QAAUA,EACV,6BAAKwE,GAAZ,IAAkBtK,QAAQ,IAEnB,6BAAKsK,GAAZ,IAAkBtK,QAAQ,OAI9B6I,EACEjB,GAAQ,6BACHe,GADE,IAELzD,aAAcyF,OA8BZzF,aAAcyD,EAAKzD,aACnBC,aAAcwD,EAAKxD,aACnBC,MA3BM,WACZyD,EAASb,OA2BH1C,WAAY,eAAC,GAAD,MAEd,eAAC,GAAD,CACEvF,MAAM,cACNiF,YAAaA,EACbG,aAAcwD,EAAKxD,aACnBL,WAAY6D,EAAK7D,WACjBuB,QAASsC,EAAKpB,mBAGlB,eAAC,GAAD,CACEV,OAAO,gBACPC,KACE,qPAEFC,KAAK,2DClHEqG,OArBf,WACE,MAA0B3K,mBAAS,SAAnC,mBAAO/B,EAAP,KAAc8B,EAAd,KAEA,OACE,eAAC,IAAD,CAAe9B,MAAiB,UAAVA,EAAoBf,EAAaS,EAAvD,SACE,sBAAKiB,UAAU,MAAf,SACE,gBAAC,IAAD,WACE,eAAC,GAAD,CAAQX,MAAOA,EAAO8B,SAAUA,IAChC,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOZ,OAAK,EAACyL,KAAK,IAAIC,UAAWrC,KACjC,eAAC,IAAD,CAAOoC,KAAK,UAAUC,UAAW/C,KACjC,eAAC,IAAD,CAAO8C,KAAK,WAAWC,UAAWjC,KAClC,eAAC,IAAD,CAAOgC,KAAK,iBAAiBC,UAAWH,KACxC,eAAC,IAAD,CAAOE,KAAK,UAAUC,UAAWC,gBCb9BC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDCQ,gBAAe,CAC5BC,QAAS,CACPlD,OAAQA,GACRxC,OAAQA,GACR4C,QAASA,GACT8B,cAAeA,MCHnBiB,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,KAAD,CAAUC,MAAOA,GAAjB,SACE,eAAC,GAAD,QAGJ3L,SAAS4L,eAAe,SAM1Bf,O","file":"static/js/main.5148a7a0.chunk.js","sourcesContent":["export const lightTheme = {\r\n  body: '#f2f4f6',\r\n  text: '#797f86',\r\n  background: '#fff',\r\n  title: '#272727',\r\n  active: '#e3e8ec',\r\n  hover: '#e3e8ec66',\r\n  border: '#e3e8ec',\r\n  shadow: `0 0.2rem 2.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 3rem 0 rgb(0 0 0 / 12%)`,\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: '#1e2122',\r\n  text: '#988f81',\r\n  background: '#181a1b',\r\n  title: '#cfcbc5',\r\n  active: '#25282a',\r\n  hover: '#25282a66',\r\n  border: '#373b3d',\r\n  shadow: ` rgba(100, 100, 111, 0.2) 0px 7px 29px 0px`,\r\n};\r\n","import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  background-color: transparent;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  z-index: 2000;\r\n  transform: translateX(100%);\r\n  transition: transform 600ms ease;\r\n  padding-right: 1.6rem;\r\n\r\n  &.active {\r\n    /* background-color: rgba(0, 0, 0, 0.2); */\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const Wrap = styled.aside`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-left: 2px solid ${({ theme }) => theme.border};\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 80%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    width: 40%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  padding: 1.8rem 3rem;\r\n\r\n  button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    height: 2.5rem;\r\n    outline: none;\r\n\r\n    svg {\r\n      color: ${({ theme }) => theme.text};\r\n      font-size: 2.5rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ListLinks = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: block;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n  padding: 1.25rem 3rem;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.hover};\r\n    padding-left: 3.5rem;\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.active};\r\n    border-left: 3px solid #26a69a;\r\n    color: #26a69a;\r\n  }\r\n`;\r\n","import {\r\n  Container,\r\n  Header,\r\n  ListLinks,\r\n  NavItem,\r\n  NavLink,\r\n  Wrap,\r\n} from './SidebarStyles';\r\nimport { CgPushChevronRight } from 'react-icons/cg';\r\n\r\nconst Sidebar = ({ showSidebar, setShowSidebar }) => {\r\n  const handleShow = (e) => {\r\n    if (e.target.classList.contains('close') || e.target.nodeName === 'A') {\r\n      setShowSidebar(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={showSidebar ? 'active close' : ''}\r\n      onClick={handleShow}\r\n    >\r\n      <Wrap>\r\n        <Header>\r\n          <button onClick={() => setShowSidebar(false)}>\r\n            <CgPushChevronRight />\r\n          </button>\r\n        </Header>\r\n        <ListLinks>\r\n          <NavItem>\r\n            <NavLink exact to=\"/\">\r\n              ceasar\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/affine\">affine</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/reverse\">reverse</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/transposition\">transposition</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/modulo\">modulo operator</NavLink>\r\n          </NavItem>\r\n        </ListLinks>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Nav = styled.div`\r\n  background-color: #4db6ac;\r\n  font-family: 'Zen Antique Soft', serif;\r\n  height: 6.4rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  line-height: 6.4rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n  color: #fff;\r\n  font-size: 3.2rem;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0;\r\n  transition: background-color 0.3s;\r\n\r\n  /* &:hover {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  } */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: none;\r\n  font-size: 1.6rem;\r\n  padding: 0 1.5rem;\r\n  text-transform: capitalize;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst bounce = keyframes`\r\n  0 {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.25);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const Bar = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  outline: none;\r\n\r\n  svg {\r\n    animation: ${bounce} 2s ease infinite;\r\n    display: block;\r\n    color: #fff;\r\n    font-size: 3rem;\r\n    font-weight: 600;\r\n    /* transition: transform 0.3s ease; */\r\n  }\r\n`;\r\n\r\nexport const TrackMode = styled.div`\r\n  background-color: #4d4d4d;\r\n  border-radius: calc(4.6rem / 4);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 2.4rem;\r\n  margin-right: 1rem;\r\n  position: relative;\r\n  width: 4.6rem;\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 2.4rem;\r\n    text-align: center;\r\n    width: 2.4rem;\r\n  }\r\n\r\n  & > .ball {\r\n    background-color: #fff;\r\n    border: 0.2rem solid #4d4d4d;\r\n    border-radius: 50%;\r\n    height: 2.3rem;\r\n    position: absolute;\r\n    left: 0;\r\n    transition: all 0.25s ease;\r\n    transform: translateX(\r\n      ${(props) => (props.theme === 'light' ? '0' : '100%')}\r\n    );\r\n    width: 2.3rem;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 2px 3px #ba8fff;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { AiOutlineBars } from 'react-icons/ai';\r\nimport Sidebar from '../Sidebar';\r\nimport {\r\n  Bar,\r\n  Logo,\r\n  Nav,\r\n  NavItem,\r\n  NavList,\r\n  TrackMode,\r\n  Wrapper,\r\n} from './HeaderStyles';\r\n\r\nconst Header = ({ theme, setTheme }) => {\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n  const themeToggle = () => {\r\n    if (theme === 'light') {\r\n      setTheme('dark');\r\n    } else {\r\n      setTheme('light');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showSidebar) {\r\n      document.body.style.overflow = 'hidden';\r\n      document.body.style.position = 'fixed';\r\n      document.body.style.top = '0';\r\n      document.body.style.width = 'calc(100% - 1.7rem)';\r\n    } else {\r\n      document.body.removeAttribute('style');\r\n    }\r\n  }, [showSidebar]);\r\n\r\n  return (\r\n    <Nav>\r\n      <Wrapper>\r\n        <Logo to=\"/\">CipherVip</Logo>\r\n        <NavList>\r\n          <NavItem>\r\n            <TrackMode onClick={themeToggle} theme={theme}>\r\n              <span>🌜</span>\r\n              <div className=\"ball\"></div>\r\n              <span>🌞</span>\r\n            </TrackMode>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Bar onClick={() => setShowSidebar(true)}>\r\n              <AiOutlineBars />\r\n            </Bar>\r\n          </NavItem>\r\n        </NavList>\r\n      </Wrapper>\r\n      <Sidebar showSidebar={showSidebar} setShowSidebar={setShowSidebar} />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-radius: 0.2rem;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  box-sizing: border-box;\r\n  height: ${(props) => (props.textarea ? '30rem' : 'auto')};\r\n  max-width: 50rem;\r\n  margin-bottom: 4rem;\r\n  padding: 0 0.75rem;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-bottom: 1rem;\r\n    width: 31.5%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 0 0 0.2rem 0.2rem;\r\n  color: #4db6ac;\r\n  font-size: 2.4rem;\r\n  font-weight: 600;\r\n  line-height: 4.8rem;\r\n  padding: 2rem;\r\n  text-align: ${(props) => (props.align === 'center' ? 'center' : 'left')};\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TextareaInput = styled.textarea`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  outline: none;\r\n  padding: 2rem;\r\n  resize: none;\r\n  transition: all 0.2s ease 0s;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid ${({ theme }) => theme.border};\r\n    box-shadow: 0 1px 0 0 #26a69a;\r\n  }\r\n`;\r\n\r\nexport const OutputText = styled.span`\r\n  color: #797f86;\r\n  display: flex;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  padding: 2rem;\r\n  width: 100%;\r\n\r\n  img {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 2rem 1rem;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n  }\r\n`;\r\nexport const Btn = styled.button`\r\n  background-color: #26a69a;\r\n  border: none;\r\n  border-radius: 0.2rem;\r\n  color: rgb(232, 230, 227);\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  height: 3.6rem;\r\n  letter-spacing: 0.5px;\r\n  line-height: 3.6rem;\r\n  margin-top: 1rem;\r\n  max-width: 11.6rem;\r\n  padding: 0 3.2rem;\r\n  text-align: center;\r\n  text-decoration-color: initial;\r\n  text-transform: uppercase;\r\n  transition: background-color 0.3s ease 0s;\r\n  vertical-align: middle;\r\n  width: 11.6rem;\r\n\r\n  &:hover {\r\n    background-color: rgb(34, 150, 138);\r\n  }\r\n`;\r\n\r\nexport const Counter = styled(Btns)`\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 1rem 0.2rem;\r\n  div {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    color: #4db6ac;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    padding-left: 1.8rem;\r\n  }\r\n\r\n  ${Btn} {\r\n    margin-top: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1rem 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  input {\r\n    background-color: ${({ theme }) => theme.background};\r\n    border: none;\r\n    color: ${({ theme }) => theme.text};\r\n    flex-grow: 1;\r\n    font-size: 1.6rem;\r\n    letter-spacing: 1px;\r\n    outline: none;\r\n    text-align: center;\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  input[type='text'] {\r\n    border-bottom: 1px solid transparent;\r\n    margin-left: 1.8rem;\r\n    padding-top: 1rem;\r\n    padding-bottom: 0.5rem;\r\n    text-align: left;\r\n\r\n    &:focus {\r\n      border-color: #4db6ac;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CountBtn = styled(Btn)`\r\n  background-color: transparent;\r\n  color: ${(props) => (props.disabled ? '#797f86' : '#988f81')};\r\n  cursor: ${(props) => (props.disabled ? 'initial' : 'pointer')};\r\n  font-size: 2.6rem;\r\n  font-weight: 600;\r\n  height: 4.6rem;\r\n  padding: 0;\r\n  width: 4.6rem;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: ${(props) => (props.disabled ? '#797f86' : '#4db6ac')};\r\n    transform: ${(props) => (props.disabled ? 'scale(1)' : 'scale(1.5)')};\r\n  }\r\n`;\r\n\r\nexport const AlphabetWrap = styled(Counter)`\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    height: 2.6rem;\r\n    line-height: 2.6rem;\r\n    letter-spacing: 1px;\r\n    padding-left: 1.8rem;\r\n    text-align: left;\r\n    vertical-align: middle;\r\n\r\n    &:first-child {\r\n      font-size: 1.2rem;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TransformOutPut = styled(Counter)`\r\n  flex-direction: row;\r\n  padding: 0 0.2rem;\r\n\r\n  & > div {\r\n    height: 100%;\r\n    padding: 2rem 0 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    padding-left: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 0 2rem;\r\n\r\n    & > div {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 0 2rem;\r\n  }\r\n`;\r\n\r\nexport const CaseStrategy = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    border-bottom: none;\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    button {\r\n      padding-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    button {\r\n      padding-right: 3.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WrapDropdown = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.8rem;\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 2.5rem;\r\n    pointer-events: none;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    svg {\r\n      right: 0.5rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    svg {\r\n      right: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DropdownButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  outline: none;\r\n  padding: 1.2rem 3.2rem 0 0;\r\n  text-align: left;\r\n  width: 100%;\r\n\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const DropdownList = styled.ul`\r\n  background-color: ${({ theme }) => theme.background};\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  border-radius: 0.25rem;\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  left: -1.8rem;\r\n  top: 140%;\r\n  z-index: 1008;\r\n  width: calc(100% + 1.8rem);\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    left: -3.8rem;\r\n    width: calc(100% + 3.8rem);\r\n  }\r\n\r\n  li {\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n    font-weight: 600;\r\n    padding: 1.25rem;\r\n    padding-left: 3.8rem;\r\n    transition: all 0.2s linear 0s;\r\n\r\n    &:hover {\r\n      background-color: ${({ theme }) => theme.hover};\r\n      padding-left: 4.2rem;\r\n    }\r\n\r\n    &.active {\r\n      background-color: ${({ theme }) => theme.active};\r\n      color: #26a69a;\r\n    }\r\n\r\n    &:first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ForeignChars = styled.div`\r\n  ${WrapDropdown} {\r\n    padding-top: 1.2rem;\r\n\r\n    button {\r\n      background-color: transparent;\r\n      border: none;\r\n      color: ${({ theme }) => theme.text};\r\n      cursor: pointer;\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      outline: none;\r\n      transition: color 0.2s ease 0s;\r\n\r\n      &:first-letter {\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      &:first-child {\r\n        margin-right: 1rem;\r\n      }\r\n\r\n      &.active {\r\n        color: #26a69a;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Brick = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.25rem 1.8rem;\r\n\r\n  svg {\r\n    font-size: 1.6rem;\r\n    font-weight: 600;\r\n    fill: currentColor;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 1.4;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1.25rem 1.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  padding: 3.6rem 0;\r\n  text-align: center;\r\n\r\n  div {\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1rem;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n  }\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.title};\r\n    display: block;\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n    padding-bottom: 1.4rem;\r\n    width: 100%;\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    font-weight: 590;\r\n    margin-bottom: 1rem;\r\n    width: 100%;\r\n  }\r\n\r\n  a {\r\n    color: #4db6ac;\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    h1 {\r\n      font-size: 2.1rem;\r\n    }\r\n\r\n    p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    text-align: left;\r\n\r\n    h1,\r\n    p {\r\n      max-width: 70rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-top: 2rem;\r\n\r\n    h1,\r\n    p {\r\n      max-width: 80rem;\r\n    }\r\n  }\r\n`;\r\n","import { AlphabetWrap } from './CardStyles';\r\n\r\nconst Alphabet = () => {\r\n  return (\r\n    <AlphabetWrap>\r\n      <label>ALPHABET</label>\r\n      <div>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n      </div>\r\n    </AlphabetWrap>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import { useState } from 'react';\r\nimport { HiArrowNarrowDown } from 'react-icons/hi';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport Alphabet from './Alphabet';\r\nimport {\r\n  Brick,\r\n  Btn,\r\n  Btns,\r\n  CaseStrategy,\r\n  Container,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  ForeignChars,\r\n  Title,\r\n  TransformOutPut,\r\n  WrapDropdown,\r\n} from './CardStyles';\r\n\r\nconst CardActions = ({\r\n  getForeignChars,\r\n  encode,\r\n  decode,\r\n  plaintext,\r\n  ciphertext,\r\n  keys,\r\n  currentCase,\r\n  getCaseStategy,\r\n  caseStrategy,\r\n  foreignChars,\r\n  reset,\r\n  titleAlign,\r\n  title,\r\n  extraInput,\r\n}) => {\r\n  const [showCase, setShowCase] = useState(false);\r\n\r\n  const handleSelectCase = (e) => {\r\n    getCaseStategy(e);\r\n    setShowCase(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <Btns>\r\n          <Btn onClick={() => encode(plaintext, keys)}>encode</Btn>\r\n          <Btn onClick={() => decode(plaintext, keys)}>decode</Btn>\r\n          <Btn onClick={reset}>Reset</Btn>\r\n        </Btns>\r\n\r\n        {extraInput}\r\n\r\n        <Alphabet />\r\n\r\n        <TransformOutPut>\r\n          <CaseStrategy>\r\n            <label>CASE STRATEGY</label>\r\n            <WrapDropdown>\r\n              <DropdownButton onClick={() => setShowCase(!showCase)}>\r\n                {currentCase}\r\n              </DropdownButton>\r\n              {showCase && (\r\n                <DropdownList>\r\n                  {caseStrategy.map((strategy, key) => {\r\n                    return (\r\n                      <li\r\n                        className={strategy.active ? 'active' : ''}\r\n                        key={key}\r\n                        id={strategy.value}\r\n                        onClick={handleSelectCase}\r\n                      >\r\n                        {strategy.value}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </DropdownList>\r\n              )}\r\n              <RiArrowDownSFill />\r\n            </WrapDropdown>\r\n          </CaseStrategy>\r\n\r\n          <ForeignChars>\r\n            <label>FOREIGN CHARS</label>\r\n            <WrapDropdown>\r\n              <button\r\n                className={foreignChars === 'include' ? 'active' : ''}\r\n                id=\"include\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                include\r\n              </button>\r\n              <button\r\n                className={foreignChars === 'ignore' ? 'active' : ''}\r\n                id=\"ignore\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                ignore\r\n              </button>\r\n            </WrapDropdown>\r\n          </ForeignChars>\r\n        </TransformOutPut>\r\n\r\n        <Brick>\r\n          <HiArrowNarrowDown />\r\n          <span>Decoded {ciphertext.length} chars</span>\r\n        </Brick>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import { Container, Title, Content, TextareaInput } from './CardStyles';\r\n\r\nconst CardInput = ({ title, titleAlign, plaintext, getPlaintext }) => {\r\n  const handleChange = (e) => {\r\n    getPlaintext(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <TextareaInput\r\n          placeholder=\"Enter your message...\"\r\n          value={plaintext}\r\n          onChange={handleChange}\r\n        />\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardInput;\r\n","export default __webpack_public_path__ + \"static/media/loading.4ccf66d6.gif\";","import { Container, Content, OutputText, Title } from './CardStyles';\r\nimport loadingIcon from './loading.gif';\r\n\r\nconst CardOutput = ({\r\n  title,\r\n  titleAlign,\r\n  currentCase,\r\n  foreignChars,\r\n  ciphertext,\r\n  loading,\r\n}) => {\r\n  const formatOutput = () => {\r\n    if (foreignChars === 'ignore' && currentCase === 'upper case') {\r\n      return ciphertext.replace(/\\s/g, '').toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'lower case') {\r\n      return ciphertext.replace(/\\s/g, '').toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'maintain case') {\r\n      return ciphertext.replace(/\\s/g, '');\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'upper case') {\r\n      return ciphertext.toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'lower case') {\r\n      return ciphertext.toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'maintain case') {\r\n      return ciphertext;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <OutputText>\r\n          {loading ? (\r\n            <img src={loadingIcon} alt=\"loading output\" />\r\n          ) : (\r\n            formatOutput()\r\n          )}\r\n        </OutputText>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardOutput;\r\n","import { Description } from './CardStyles';\r\n\r\nconst CardDescription = ({ cipher, desc, link, utils, more }) => {\r\n  return (\r\n    <Description>\r\n      <div>\r\n        <h1>\r\n          {cipher} {utils ? '' : 'cipher'}:{' '}\r\n          {utils ? 'Calculate ' : 'Encode and Decode'} {cipher}{' '}\r\n          {utils ? 'of two integers' : 'to text'}\r\n        </h1>\r\n        <p>\r\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {cipher} {utils ? '' : 'cipher'}{' '}\r\n          </a>\r\n          {desc}\r\n        </p>\r\n        {more && <p>{more}</p>}\r\n      </div>\r\n    </Description>\r\n  );\r\n};\r\n\r\nexport default CardDescription;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'RheafsUhe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: { a: 7, b: 3 },\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const affineSlice = createSlice({\r\n  name: 'affine',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseSlope(state) {\r\n      state.key.a += 1;\r\n    },\r\n    increaseIntercept(state) {\r\n      state.key.b += 1;\r\n    },\r\n    decreaseSlope(state) {\r\n      state.key.a -= 1;\r\n    },\r\n    decreaseIntercept(state) {\r\n      state.key.b -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getLoading,\r\n} = affineSlice.actions;\r\n\r\nexport const selectAffine = (state) => state.affine;\r\n\r\nexport default affineSlice.reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const CounterWrap = styled.div`\r\n  display: flex;\r\n\r\n  & > div {\r\n    width: 50%;\r\n\r\n    &:first-child {\r\n      border-right: 1px solid ${({ theme }) => theme.border};\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  CountBtn,\r\n  Counter,\r\n  InputGroup,\r\n} from '../../components/Card/CardStyles';\r\nimport { CounterWrap } from './AffineStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  selectAffine,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getData,\r\n} from './affineSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleFirstCountChange = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    if (value) {\r\n      if (value > 26) {\r\n        getKey({ ...data.key, a: 26 });\r\n      } else {\r\n        getKey({ ...data.key, a: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.key, a: 0 });\r\n    }\r\n  };\r\n\r\n  const handleSecondCountChange = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    if (value) {\r\n      if (value > 26) {\r\n        getKey({ ...data.key, b: 26 });\r\n      } else {\r\n        getKey({ ...data.key, b: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.key, b: 0 });\r\n    }\r\n  };\r\n\r\n  const increaseSlopeCounter = () => {\r\n    dispatch(increaseSlope());\r\n  };\r\n\r\n  const decreaseSlopeCounter = () => {\r\n    dispatch(decreaseSlope());\r\n  };\r\n\r\n  const increaseInterceptCounter = () => {\r\n    dispatch(increaseIntercept());\r\n  };\r\n\r\n  const decreaseInterceptCounter = () => {\r\n    dispatch(decreaseIntercept());\r\n  };\r\n\r\n  return (\r\n    <CounterWrap>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">SLOPE / A</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key.a) === 0 ? true : false}\r\n              colorDisabled={(theme) => theme.color}\r\n              onClick={decreaseSlopeCounter}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key.a}\r\n              onChange={handleFirstCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key.a) === 26 ? true : false}\r\n              colorDisabled={(theme) => theme.color}\r\n              onClick={increaseSlopeCounter}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">INTERCEPT / B</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key.b) === 0 ? true : false}\r\n              onClick={decreaseInterceptCounter}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key.b}\r\n              onChange={handleSecondCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key.b) === 26 ? true : false}\r\n              onClick={increaseInterceptCounter}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </CounterWrap>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const submit = async (url, mess, k) => {\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      text: mess,\r\n      key: k,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n  const result = await response.json();\r\n  return result;\r\n};\r\n\r\nexport const getCurrentCase = (cases) => {\r\n  return cases.filter((item) => item.active)[0].value;\r\n};\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.body};\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 1.6rem;\r\n  padding-top: 4.8rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport { getData, resetData, selectAffine, getLoading } from './affineSlice';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\n\r\nconst Affine = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/affine/encode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/affine/decode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Affine Cipher\"\r\n          titleAlign=\"center\"\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          keys={data.key}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Affine\"\r\n        desc={\r\n          'is a type of monoalphabetic substitution cipher, where each letter in an alphabet is mapped to its numeric equivalent, encrypted using a simple mathematical function, and converted back to a letter. Each letter is enciphered with the function (ax + b) mod 26, where b is the magnitude of the shift.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Affine_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Affine;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'JpwolyCpw',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 7,\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const ceasarSlice = createSlice({\r\n  name: 'ceasar',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseKey(state) {\r\n      state.key += 1;\r\n    },\r\n    decreaseKey(state) {\r\n      state.key -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, increaseKey, decreaseKey, getLoading } =\r\n  ceasarSlice.actions;\r\n\r\nexport const selectCeasar = (state) => state.ceasar;\r\n\r\nexport default ceasarSlice.reducer;\r\n","import {\r\n  CountBtn,\r\n  Counter,\r\n  InputGroup,\r\n} from '../../components/Card/CardStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getData, selectCeasar, decreaseKey, increaseKey } from './ceasarSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const increase = () => {\r\n    dispatch(increaseKey());\r\n  };\r\n\r\n  const decrease = () => {\r\n    dispatch(decreaseKey());\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    const value = parseInt(e.target.value);\r\n    if (value) {\r\n      if (value > 26) {\r\n        console.log(value);\r\n        getKey(26);\r\n      } else {\r\n        getKey(value);\r\n      }\r\n    } else {\r\n      getKey(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">KEY</label>\r\n          <InputGroup>\r\n            <CountBtn\r\n              disabled={parseInt(data.key) === 0 ? true : false}\r\n              onClick={decrease}\r\n            >\r\n              {' '}\r\n              -{' '}\r\n            </CountBtn>\r\n            <input\r\n              type=\"number\"\r\n              min={0}\r\n              max={26}\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n            />\r\n            <CountBtn\r\n              disabled={parseInt(data.key) === 26 ? true : false}\r\n              onClick={increase}\r\n            >\r\n              {' '}\r\n              +{' '}\r\n            </CountBtn>\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\nimport { getData, resetData, selectCeasar, getLoading } from './ceasarSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Ceasar = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/ceasar/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/ceasar/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Ceasar Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Ceasar\"\r\n        desc={\r\n          ' is one of the simplest and most widely known encryption techniques. It is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Ceasar;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'piVrehpiC',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const reverseSlice = createSlice({\r\n  name: 'reverse',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = reverseSlice.actions;\r\n\r\nexport const selectReverse = (state) => state.reverse;\r\n\r\nexport default reverseSlice.reducer;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { Container, getCurrentCase, submit, Wrap } from '../Utils';\r\nimport { getData, resetData, selectReverse, getLoading } from './reverseSlice';\r\n\r\nconst Reverse = () => {\r\n  const data = useSelector(selectReverse);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/encode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const decode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/decode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Reverse Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Reverse\"\r\n        desc={\r\n          ' uses a pattern of reversing the string of plain text to convert as cipher text. The process of encryption and decryption is same. To decrypt cipher text, the user simply needs to reverse the cipher text to get the plain text.'\r\n        }\r\n        link=\"https://www.tutorialspoint.com/cryptography_with_python/cryptography_with_python_reverse_cipher.htm\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Reverse;\r\n","import styled from 'styled-components';\r\nimport { Btn, TransformOutPut, Btns } from '../../components/Card/CardStyles';\r\n\r\nexport const CounterWrap = styled.div`\r\n  padding-bottom: 2rem;\r\n  & > div {\r\n    padding-bottom: 0.4rem;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n\r\n    @media only screen and (min-width: 1200px) {\r\n      padding-top: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WrapBtns = styled(Btns)`\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 2rem;\r\n  }\r\n`;\r\n\r\nexport const BtnLarge = styled(Btn)`\r\n  max-width: 12.6rem;\r\n  padding: 0 2rem;\r\n  width: 12.6rem;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0;\r\n    width: 11.6rem;\r\n  }\r\n`;\r\n\r\nexport const TransformInput = styled(TransformOutPut)`\r\n  & > div {\r\n    border-right: none;\r\n    padding: 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    & > div {\r\n      padding: 2rem 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    & > div {\r\n      padding: 2rem 1.8rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & > div {\r\n      padding: 2rem 0;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    left: -2rem;\r\n    width: calc(100% + 4rem);\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport {\r\n  Container as CardContainer,\r\n  Content,\r\n  CountBtn,\r\n  Counter,\r\n  DropdownButton,\r\n  DropdownList,\r\n  InputGroup,\r\n  OutputText,\r\n  Title,\r\n  WrapDropdown,\r\n  CaseStrategy,\r\n} from '../../components/Card/CardStyles';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport { Container, getCurrentCase, Wrap } from '../Utils';\r\nimport {\r\n  BtnLarge,\r\n  TransformInput,\r\n  CounterWrap,\r\n  WrapBtns,\r\n} from './ModuloStyles';\r\n\r\nconst ReverseKey = () => {\r\n  const [actions, setActions] = useState([\r\n    { value: 'number', active: true },\r\n    { value: 'power', active: false },\r\n  ]);\r\n  const currentAction = getCurrentCase(actions);\r\n  const [showActions, setShowActions] = useState(false);\r\n  const [output, setOutput] = useState('');\r\n  const [input, setInput] = useState({\r\n    base: 5,\r\n    power: 1,\r\n    modulo: 11,\r\n  });\r\n\r\n  const handleSelectAction = (e) => {\r\n    setShowActions(false);\r\n    const value = e.target.id;\r\n    setActions((actions) => {\r\n      return actions.map((action) => {\r\n        if (action.value === value) {\r\n          return { ...action, active: true };\r\n        } else {\r\n          return { ...action, active: false };\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const getModulo = (number, mod) => {\r\n    for (let i = 1; i <= mod; i++) {\r\n      if ((i * number) % mod === 1) {\r\n        return i;\r\n      }\r\n    }\r\n\r\n    return 'Not found';\r\n  };\r\n\r\n  const calculate = () => {\r\n    let result = 0;\r\n    if (currentAction === 'number') {\r\n      result = getModulo(input.base, input.modulo);\r\n    } else {\r\n      result = getModulo(Math.pow(input.base, input.power), input.modulo);\r\n    }\r\n    setOutput(result);\r\n  };\r\n\r\n  const handleCountChange = (field, value, num = 0) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: parseInt(value) + num });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setInput({\r\n      base: 5,\r\n      power: 1,\r\n      modulo: 11,\r\n    });\r\n    setOutput('');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardContainer>\r\n          <Title>Text Input</Title>\r\n          <Content>\r\n            <CounterWrap>\r\n              <Counter>\r\n                <div>\r\n                  <label htmlFor=\"key\">\r\n                    {currentAction === 'number' ? 'NUMBER' : 'BASE'}\r\n                  </label>\r\n                  <InputGroup>\r\n                    <CountBtn\r\n                      colorDisabled={(theme) => theme.color}\r\n                      onClick={() => handleCountChange('base', input.base, -1)}\r\n                    >\r\n                      {' '}\r\n                      -{' '}\r\n                    </CountBtn>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={input.base}\r\n                      onChange={(e) =>\r\n                        handleCountChange('base', e.target.value)\r\n                      }\r\n                    />\r\n                    <CountBtn\r\n                      colorDisabled={(theme) => theme.color}\r\n                      onClick={() => handleCountChange('base', input.base, 1)}\r\n                    >\r\n                      {' '}\r\n                      +{' '}\r\n                    </CountBtn>\r\n                  </InputGroup>\r\n                </div>\r\n              </Counter>\r\n              {currentAction === 'power' && (\r\n                <Counter>\r\n                  <div>\r\n                    <label htmlFor=\"key\">POWER</label>\r\n                    <InputGroup>\r\n                      <CountBtn\r\n                        colorDisabled={(theme) => theme.color}\r\n                        onClick={() =>\r\n                          handleCountChange('power', input.power, -1)\r\n                        }\r\n                      >\r\n                        {' '}\r\n                        -{' '}\r\n                      </CountBtn>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={input.power}\r\n                        onChange={(e) =>\r\n                          handleCountChange('power', e.target.value)\r\n                        }\r\n                      />\r\n                      <CountBtn\r\n                        colorDisabled={(theme) => theme.color}\r\n                        onClick={() =>\r\n                          handleCountChange('power', input.power, 1)\r\n                        }\r\n                      >\r\n                        {' '}\r\n                        +{' '}\r\n                      </CountBtn>\r\n                    </InputGroup>\r\n                  </div>\r\n                </Counter>\r\n              )}\r\n              <Counter>\r\n                <div>\r\n                  <label htmlFor=\"key\">MODULO</label>\r\n                  <InputGroup>\r\n                    <CountBtn\r\n                      colorDisabled={(theme) => theme.color}\r\n                      onClick={() =>\r\n                        handleCountChange('modulo', input.modulo, -1)\r\n                      }\r\n                    >\r\n                      {' '}\r\n                      -{' '}\r\n                    </CountBtn>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={input.modulo}\r\n                      onChange={(e) =>\r\n                        handleCountChange('modulo', e.target.value)\r\n                      }\r\n                    />\r\n                    <CountBtn\r\n                      colorDisabled={(theme) => theme.color}\r\n                      onClick={() =>\r\n                        handleCountChange('modulo', input.modulo, 1)\r\n                      }\r\n                    >\r\n                      {' '}\r\n                      +{' '}\r\n                    </CountBtn>\r\n                  </InputGroup>\r\n                </div>\r\n              </Counter>\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer style={{ height: '29.5rem' }}>\r\n          <Title>Action</Title>\r\n          <Content>\r\n            <WrapBtns>\r\n              <BtnLarge onClick={calculate}>calculate</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </WrapBtns>\r\n\r\n            <TransformInput>\r\n              <CaseStrategy>\r\n                <label>TYPE INPUT</label>\r\n                <WrapDropdown>\r\n                  <DropdownButton onClick={() => setShowActions(!showActions)}>\r\n                    {currentAction}\r\n                  </DropdownButton>\r\n                  {showActions && (\r\n                    <DropdownList>\r\n                      {actions.map((strategy, key) => {\r\n                        return (\r\n                          <li\r\n                            className={strategy.active ? 'active' : ''}\r\n                            key={key}\r\n                            id={strategy.value}\r\n                            onClick={handleSelectAction}\r\n                          >\r\n                            {strategy.value}\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </DropdownList>\r\n                  )}\r\n                  <RiArrowDownSFill />\r\n                </WrapDropdown>\r\n              </CaseStrategy>\r\n            </TransformInput>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>Text Output</Title>\r\n          <Content>\r\n            <OutputText>{output}</OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Modulo operation\"\r\n        desc={\r\n          ' returns the remainder or signed remainder of a division, after one number is divided by another (called the modulus of the operation). Given two positive numbers a and n, a modulo n (abbreviated as a mod n) is the remainder of the Euclidean division of a by n, where a is the dividend and n is the divisor. The modulo operation is to be distinguished from the symbol mod, which refers to the modulus (or divisor) one is operating from.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Modulo_operation\"\r\n        utils={true}\r\n        more={\r\n          'Some calculators have a mod() function button, and many programming languages have a similar function, expressed as mod(a, n), for example. Some also support expressions that use \"%\", \"mod\", or \"Mod\" as a modulo or remainder operator, such as a % n or a mod n'\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReverseKey;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'CriVpihpe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '12345',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const transpositionSlice = createSlice({\r\n  name: 'transposition',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = transpositionSlice.actions;\r\n\r\nexport const selectTransposition = (state) => state.transposition;\r\n\r\nexport default transpositionSlice.reducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectTransposition } from './transpositionSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">KEY</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter columns number...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\nimport {\r\n  getData,\r\n  resetData,\r\n  selectTransposition,\r\n  getLoading,\r\n} from './transpositionSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Transposition = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Transposition Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Transposition\"\r\n        desc={\r\n          ' is a method of encryption by which the positions held by units of plaintext (which are commonly characters or groups of characters) are shifted according to a regular system, so that the ciphertext constitutes a permutation of the plaintext.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Transposition_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Transposition;\r\n","import { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from '../src/components/Theme/ThemeCustome';\nimport Header from './components/Header';\nimport Affine from './feature/affine';\nimport Ceasar from './feature/ceasar';\nimport Reverse from './feature/reverse';\nimport Modulo from './feature/modulo';\nimport Transposition from './feature/transposition';\nimport './index.css';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <div className=\"App\">\n        <Router>\n          <Header theme={theme} setTheme={setTheme} />\n          <Switch>\n            <Route exact path=\"/\" component={Ceasar} />\n            <Route path=\"/affine\" component={Affine} />\n            <Route path=\"/reverse\" component={Reverse} />\n            <Route path=\"/transposition\" component={Transposition} />\n            <Route path=\"/modulo\" component={Modulo} />\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport ceasar from '../feature/ceasar/ceasarSlice';\r\nimport affine from '../feature/affine/affineSlice';\r\nimport reverse from '../feature/reverse/reverseSlice';\r\nimport transposition from '../feature/transposition/transpositionSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ceasar: ceasar,\r\n    affine: affine,\r\n    reverse: reverse,\r\n    transposition: transposition,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}