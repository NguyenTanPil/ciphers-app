{"version":3,"sources":["components/Theme/ThemeCustome.js","components/Sidebar/SidebarStyles.js","components/Sidebar/index.js","components/Header/HeaderStyles.js","components/Header/index.js","components/Card/CardStyles.js","components/Card/Alphabet.js","components/Card/CardActions.js","components/Card/CardInput.js","components/Card/loading.gif","components/Card/CardOutput.js","components/Card/CardDescription.js","feature/affine/affineSlice.js","components/Card/CardCounter.js","feature/affine/AffineStyles.js","feature/affine/ExtraInput.js","feature/Utils.js","feature/affine/index.js","feature/ceasar/ceasarSlice.js","feature/ceasar/ExtraInput.js","feature/ceasar/index.js","feature/reverse/reverseSlice.js","feature/reverse/index.js","feature/modulo/ModuloStyles.js","feature/modulo/index.js","feature/modularInverse/index.js","feature/transposition/transpositionSlice.js","feature/transposition/ExtraInput.js","feature/transposition/index.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["lightTheme","body","text","background","title","active","hover","border","shadow","darkTheme","Container","styled","div","Wrap","aside","theme","Header","ListLinks","ul","NavItem","li","NavLink","Link","Sidebar","showSidebar","setShowSidebar","className","onClick","e","target","classList","contains","nodeName","exact","to","Nav","Wrapper","Logo","NavList","bounce","keyframes","Bar","button","TrackMode","props","setTheme","useState","useEffect","document","style","overflow","position","top","width","removeAttribute","textarea","Title","align","Content","TextareaInput","OutputText","span","Btns","Btn","Counter","InputGroup","CountBtn","disabled","AlphabetWrap","TransformOutPut","CaseStrategy","WrapDropdown","DropdownButton","DropdownList","ForeignChars","Brick","Description","Alphabet","CardActions","getForeignChars","encode","decode","plaintext","ciphertext","keys","currentCase","getCaseStategy","caseStrategy","foreignChars","reset","titleAlign","extraInput","showCase","setShowCase","handleSelectCase","map","strategy","key","id","value","length","CardInput","getPlaintext","placeholder","onChange","CardOutput","loading","src","loadingIcon","alt","replace","toUpperCase","toLowerCase","CardDescription","cipher","desc","link","utils","more","href","rel","initialState","a","b","loadingOutput","affineSlice","createSlice","name","reducers","getData","state","action","payload","resetData","increaseSlope","increaseIntercept","decreaseSlope","decreaseIntercept","getLoading","actions","selectAffine","affine","CardCounter","label","inputValue","handleCountChange","increase","decrease","min","max","htmlFor","colorDisabled","color","parseInt","type","CounterWrap","ExtraInput","data","useSelector","dispatch","useDispatch","getKey","submit","url","mess","k","fetch","method","JSON","stringify","headers","response","json","result","getCurrentCase","cases","filter","item","Affine","getCiphertext","console","log","newCases","ceasarSlice","increaseKey","decreaseKey","selectCeasar","ceasar","Ceasar","reverseSlice","selectReverse","reverse","Reverse","BtnLarge","TransformInput","Modulo","setActions","currentAction","showActions","setShowActions","output","setOutput","base","exponent","modulo","input","setInput","handleSelectAction","field","inOrDecrease","number","height","power","mod","powerOfBin","index","values","push","binOfPower","toString","split","join","i","getModulo","ModularInverse","getModularInverse","transpositionSlice","selectTransposition","transposition","Transposition","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.ef59f8da.chunk.js","sourcesContent":["export const lightTheme = {\r\n  body: '#f2f4f6',\r\n  text: '#797f86',\r\n  background: '#fff',\r\n  title: '#272727',\r\n  active: '#e3e8ec',\r\n  hover: '#e3e8ec66',\r\n  border: '#e3e8ec',\r\n  shadow: `0 0.2rem 2.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 3rem 0 rgb(0 0 0 / 12%)`,\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: '#1e2122',\r\n  text: '#988f81',\r\n  background: '#181a1b',\r\n  title: '#cfcbc5',\r\n  active: '#25282a',\r\n  hover: '#25282a66',\r\n  border: '#373b3d',\r\n  shadow: ` rgba(100, 100, 111, 0.2) 0px 7px 29px 0px`,\r\n};\r\n","import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  background-color: transparent;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  z-index: 2000;\r\n  transform: translateX(100%);\r\n  transition: transform 600ms ease;\r\n  padding-right: 1.6rem;\r\n\r\n  &.active {\r\n    /* background-color: rgba(0, 0, 0, 0.2); */\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const Wrap = styled.aside`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-left: 2px solid ${({ theme }) => theme.border};\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 80%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    width: 40%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  padding: 1.8rem 3rem;\r\n\r\n  button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    height: 2.5rem;\r\n    outline: none;\r\n\r\n    svg {\r\n      color: ${({ theme }) => theme.text};\r\n      font-size: 2.5rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ListLinks = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: block;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n  padding: 1.25rem 3rem;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.hover};\r\n    padding-left: 3.5rem;\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.active};\r\n    border-left: 3px solid #26a69a;\r\n    color: #26a69a;\r\n  }\r\n`;\r\n","import {\r\n  Container,\r\n  Header,\r\n  ListLinks,\r\n  NavItem,\r\n  NavLink,\r\n  Wrap,\r\n} from './SidebarStyles';\r\nimport { CgPushChevronRight } from 'react-icons/cg';\r\n\r\nconst Sidebar = ({ showSidebar, setShowSidebar }) => {\r\n  const handleShow = (e) => {\r\n    if (e.target.classList.contains('close') || e.target.nodeName === 'A') {\r\n      setShowSidebar(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={showSidebar ? 'active close' : ''}\r\n      onClick={handleShow}\r\n    >\r\n      <Wrap>\r\n        <Header>\r\n          <button onClick={() => setShowSidebar(false)}>\r\n            <CgPushChevronRight />\r\n          </button>\r\n        </Header>\r\n        <ListLinks>\r\n          <NavItem>\r\n            <NavLink exact to=\"/\">\r\n              ceasar\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/affine\">affine</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/reverse\">reverse</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/transposition\">transposition</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/modulo\">modulo operator</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/modular-inverse\">modular inverse</NavLink>\r\n          </NavItem>\r\n        </ListLinks>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Nav = styled.div`\r\n  background-color: #4db6ac;\r\n  font-family: 'Zen Antique Soft', serif;\r\n  height: 6.4rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  line-height: 6.4rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n  color: #fff;\r\n  font-size: 3.2rem;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0;\r\n  transition: background-color 0.3s;\r\n\r\n  /* &:hover {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  } */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: none;\r\n  font-size: 1.6rem;\r\n  padding: 0 1.5rem;\r\n  text-transform: capitalize;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst bounce = keyframes`\r\n  0 {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.25);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const Bar = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  outline: none;\r\n\r\n  svg {\r\n    animation: ${bounce} 2s ease infinite;\r\n    display: block;\r\n    color: #fff;\r\n    font-size: 3rem;\r\n    font-weight: 600;\r\n    /* transition: transform 0.3s ease; */\r\n  }\r\n`;\r\n\r\nexport const TrackMode = styled.div`\r\n  background-color: #4d4d4d;\r\n  border-radius: calc(4.6rem / 4);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 2.4rem;\r\n  margin-right: 1rem;\r\n  position: relative;\r\n  width: 4.6rem;\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 2.4rem;\r\n    text-align: center;\r\n    width: 2.4rem;\r\n  }\r\n\r\n  & > .ball {\r\n    background-color: #fff;\r\n    border: 0.2rem solid #4d4d4d;\r\n    border-radius: 50%;\r\n    height: 2.3rem;\r\n    position: absolute;\r\n    left: 0;\r\n    transition: all 0.25s ease;\r\n    transform: translateX(\r\n      ${(props) => (props.theme === 'light' ? '0' : '100%')}\r\n    );\r\n    width: 2.3rem;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 2px 3px #ba8fff;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { AiOutlineBars } from 'react-icons/ai';\r\nimport Sidebar from '../Sidebar';\r\nimport {\r\n  Bar,\r\n  Logo,\r\n  Nav,\r\n  NavItem,\r\n  NavList,\r\n  TrackMode,\r\n  Wrapper,\r\n} from './HeaderStyles';\r\n\r\nconst Header = ({ theme, setTheme }) => {\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n  const themeToggle = () => {\r\n    if (theme === 'light') {\r\n      setTheme('dark');\r\n    } else {\r\n      setTheme('light');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showSidebar) {\r\n      document.body.style.overflow = 'hidden';\r\n      document.body.style.position = 'fixed';\r\n      document.body.style.top = '0';\r\n      document.body.style.width = 'calc(100% - 1.7rem)';\r\n    } else {\r\n      document.body.removeAttribute('style');\r\n    }\r\n  }, [showSidebar]);\r\n\r\n  return (\r\n    <Nav>\r\n      <Wrapper>\r\n        <Logo to=\"/\">CipherVip</Logo>\r\n        <NavList>\r\n          <NavItem>\r\n            <TrackMode onClick={themeToggle} theme={theme}>\r\n              <span>🌜</span>\r\n              <div className=\"ball\"></div>\r\n              <span>🌞</span>\r\n            </TrackMode>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Bar onClick={() => setShowSidebar(true)}>\r\n              <AiOutlineBars />\r\n            </Bar>\r\n          </NavItem>\r\n        </NavList>\r\n      </Wrapper>\r\n      <Sidebar showSidebar={showSidebar} setShowSidebar={setShowSidebar} />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-radius: 0.2rem;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  box-sizing: border-box;\r\n  height: ${(props) => (props.textarea ? '30rem' : 'auto')};\r\n  max-width: 50rem;\r\n  margin-bottom: 4rem;\r\n  padding: 0 0.75rem;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-bottom: 1rem;\r\n    width: 31.5%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 0 0 0.2rem 0.2rem;\r\n  color: #4db6ac;\r\n  font-size: 2.4rem;\r\n  font-weight: 600;\r\n  line-height: 4.8rem;\r\n  padding: 2rem;\r\n  text-align: ${(props) => (props.align === 'center' ? 'center' : 'left')};\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TextareaInput = styled.textarea`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  outline: none;\r\n  padding: 2rem;\r\n  resize: none;\r\n  transition: all 0.2s ease 0s;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid ${({ theme }) => theme.border};\r\n    box-shadow: 0 1px 0 0 #26a69a;\r\n  }\r\n`;\r\n\r\nexport const OutputText = styled.span`\r\n  color: #797f86;\r\n  display: flex;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  padding: 2rem;\r\n  width: 100%;\r\n\r\n  img {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 2rem 1rem;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n  }\r\n`;\r\nexport const Btn = styled.button`\r\n  background-color: #26a69a;\r\n  border: none;\r\n  border-radius: 0.2rem;\r\n  color: rgb(232, 230, 227);\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  height: 3.6rem;\r\n  letter-spacing: 0.5px;\r\n  line-height: 3.6rem;\r\n  margin-top: 1rem;\r\n  max-width: 11.6rem;\r\n  padding: 0 3.2rem;\r\n  text-align: center;\r\n  text-decoration-color: initial;\r\n  text-transform: uppercase;\r\n  transition: background-color 0.3s ease 0s;\r\n  vertical-align: middle;\r\n  width: 11.6rem;\r\n\r\n  &:hover {\r\n    background-color: rgb(34, 150, 138);\r\n  }\r\n`;\r\n\r\nexport const Counter = styled(Btns)`\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 1rem 0.2rem;\r\n  div {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    color: #4db6ac;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    padding-left: 1.8rem;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  ${Btn} {\r\n    margin-top: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1rem 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  input {\r\n    background-color: ${({ theme }) => theme.background};\r\n    border: none;\r\n    color: ${({ theme }) => theme.text};\r\n    flex-grow: 1;\r\n    font-size: 1.6rem;\r\n    letter-spacing: 1px;\r\n    outline: none;\r\n    text-align: center;\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  input[type='text'] {\r\n    border-bottom: 1px solid transparent;\r\n    margin-left: 1.8rem;\r\n    padding-top: 1rem;\r\n    padding-bottom: 0.5rem;\r\n    text-align: left;\r\n\r\n    &:focus {\r\n      border-color: #4db6ac;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CountBtn = styled(Btn)`\r\n  background-color: transparent;\r\n  color: ${(props) => (props.disabled ? '#797f86' : '#988f81')};\r\n  cursor: ${(props) => (props.disabled ? 'initial' : 'pointer')};\r\n  font-size: 2.6rem;\r\n  font-weight: 600;\r\n  height: 4.6rem;\r\n  padding: 0;\r\n  width: 4.6rem;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: ${(props) => (props.disabled ? '#797f86' : '#4db6ac')};\r\n    transform: ${(props) => (props.disabled ? 'scale(1)' : 'scale(1.5)')};\r\n  }\r\n`;\r\n\r\nexport const AlphabetWrap = styled(Counter)`\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    height: 2.6rem;\r\n    line-height: 2.6rem;\r\n    letter-spacing: 1px;\r\n    padding-left: 1.8rem;\r\n    text-align: left;\r\n    vertical-align: middle;\r\n\r\n    &:first-child {\r\n      font-size: 1.2rem;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TransformOutPut = styled(Counter)`\r\n  flex-direction: row;\r\n  padding: 0 0.2rem;\r\n\r\n  & > div {\r\n    height: 100%;\r\n    padding: 2rem 0 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    padding-left: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 0 2rem;\r\n\r\n    & > div {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 0 2rem;\r\n  }\r\n`;\r\n\r\nexport const CaseStrategy = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    border-bottom: none;\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    button {\r\n      padding-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    button {\r\n      padding-right: 3.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WrapDropdown = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.8rem;\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 2.5rem;\r\n    pointer-events: none;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    svg {\r\n      right: 0.5rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    svg {\r\n      right: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DropdownButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  outline: none;\r\n  padding: 1.2rem 3.2rem 0 0;\r\n  text-align: left;\r\n  width: 100%;\r\n\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const DropdownList = styled.ul`\r\n  background-color: ${({ theme }) => theme.background};\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  border-radius: 0.25rem;\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  left: -1.8rem;\r\n  top: 140%;\r\n  z-index: 1008;\r\n  width: calc(100% + 1.8rem);\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    left: -3.8rem;\r\n    width: calc(100% + 3.8rem);\r\n  }\r\n\r\n  li {\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n    font-weight: 600;\r\n    padding: 1.25rem;\r\n    padding-left: 3.8rem;\r\n    transition: all 0.2s linear 0s;\r\n\r\n    &:hover {\r\n      background-color: ${({ theme }) => theme.hover};\r\n      padding-left: 4.2rem;\r\n    }\r\n\r\n    &.active {\r\n      background-color: ${({ theme }) => theme.active};\r\n      color: #26a69a;\r\n    }\r\n\r\n    &:first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ForeignChars = styled.div`\r\n  ${WrapDropdown} {\r\n    padding-top: 1.2rem;\r\n\r\n    button {\r\n      background-color: transparent;\r\n      border: none;\r\n      color: ${({ theme }) => theme.text};\r\n      cursor: pointer;\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      outline: none;\r\n      transition: color 0.2s ease 0s;\r\n\r\n      &:first-letter {\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      &:first-child {\r\n        margin-right: 1rem;\r\n      }\r\n\r\n      &.active {\r\n        color: #26a69a;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Brick = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.25rem 1.8rem;\r\n\r\n  svg {\r\n    font-size: 1.6rem;\r\n    font-weight: 600;\r\n    fill: currentColor;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 1.4;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1.25rem 1.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  padding: 3.6rem 0;\r\n  text-align: center;\r\n\r\n  div {\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1rem;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n  }\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.title};\r\n    display: block;\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n    padding-bottom: 1.4rem;\r\n    width: 100%;\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    font-weight: 590;\r\n    margin-bottom: 1rem;\r\n    width: 100%;\r\n  }\r\n\r\n  a {\r\n    color: #4db6ac;\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    h1 {\r\n      font-size: 2.1rem;\r\n    }\r\n\r\n    p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    text-align: left;\r\n\r\n    h1,\r\n    p {\r\n      max-width: 70rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-top: 2rem;\r\n\r\n    h1,\r\n    p {\r\n      max-width: 80rem;\r\n    }\r\n  }\r\n`;\r\n","import { AlphabetWrap } from './CardStyles';\r\n\r\nconst Alphabet = () => {\r\n  return (\r\n    <AlphabetWrap>\r\n      <label>ALPHABET</label>\r\n      <div>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n      </div>\r\n    </AlphabetWrap>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import { useState } from 'react';\r\nimport { HiArrowNarrowDown } from 'react-icons/hi';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport Alphabet from './Alphabet';\r\nimport {\r\n  Brick,\r\n  Btn,\r\n  Btns,\r\n  CaseStrategy,\r\n  Container,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  ForeignChars,\r\n  Title,\r\n  TransformOutPut,\r\n  WrapDropdown,\r\n} from './CardStyles';\r\n\r\nconst CardActions = ({\r\n  getForeignChars,\r\n  encode,\r\n  decode,\r\n  plaintext,\r\n  ciphertext,\r\n  keys,\r\n  currentCase,\r\n  getCaseStategy,\r\n  caseStrategy,\r\n  foreignChars,\r\n  reset,\r\n  titleAlign,\r\n  title,\r\n  extraInput,\r\n}) => {\r\n  const [showCase, setShowCase] = useState(false);\r\n\r\n  const handleSelectCase = (e) => {\r\n    getCaseStategy(e);\r\n    setShowCase(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <Btns>\r\n          <Btn onClick={() => encode(plaintext, keys)}>encode</Btn>\r\n          <Btn onClick={() => decode(plaintext, keys)}>decode</Btn>\r\n          <Btn onClick={reset}>Reset</Btn>\r\n        </Btns>\r\n\r\n        {extraInput}\r\n\r\n        <Alphabet />\r\n\r\n        <TransformOutPut>\r\n          <CaseStrategy>\r\n            <label>CASE STRATEGY</label>\r\n            <WrapDropdown>\r\n              <DropdownButton onClick={() => setShowCase(!showCase)}>\r\n                {currentCase}\r\n              </DropdownButton>\r\n              {showCase && (\r\n                <DropdownList>\r\n                  {caseStrategy.map((strategy, key) => {\r\n                    return (\r\n                      <li\r\n                        className={strategy.active ? 'active' : ''}\r\n                        key={key}\r\n                        id={strategy.value}\r\n                        onClick={handleSelectCase}\r\n                      >\r\n                        {strategy.value}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </DropdownList>\r\n              )}\r\n              <RiArrowDownSFill />\r\n            </WrapDropdown>\r\n          </CaseStrategy>\r\n\r\n          <ForeignChars>\r\n            <label>FOREIGN CHARS</label>\r\n            <WrapDropdown>\r\n              <button\r\n                className={foreignChars === 'include' ? 'active' : ''}\r\n                id=\"include\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                include\r\n              </button>\r\n              <button\r\n                className={foreignChars === 'ignore' ? 'active' : ''}\r\n                id=\"ignore\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                ignore\r\n              </button>\r\n            </WrapDropdown>\r\n          </ForeignChars>\r\n        </TransformOutPut>\r\n\r\n        <Brick>\r\n          <HiArrowNarrowDown />\r\n          <span>Decoded {ciphertext.length} chars</span>\r\n        </Brick>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import { Container, Title, Content, TextareaInput } from './CardStyles';\r\n\r\nconst CardInput = ({ title, titleAlign, plaintext, getPlaintext }) => {\r\n  const handleChange = (e) => {\r\n    getPlaintext(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <TextareaInput\r\n          placeholder=\"Enter your message...\"\r\n          value={plaintext}\r\n          onChange={handleChange}\r\n        />\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardInput;\r\n","export default __webpack_public_path__ + \"static/media/loading.4ccf66d6.gif\";","import { Container, Content, OutputText, Title } from './CardStyles';\r\nimport loadingIcon from './loading.gif';\r\n\r\nconst CardOutput = ({\r\n  title,\r\n  titleAlign,\r\n  currentCase,\r\n  foreignChars,\r\n  ciphertext,\r\n  loading,\r\n}) => {\r\n  const formatOutput = () => {\r\n    if (foreignChars === 'ignore' && currentCase === 'upper case') {\r\n      return ciphertext.replace(/\\s/g, '').toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'lower case') {\r\n      return ciphertext.replace(/\\s/g, '').toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'maintain case') {\r\n      return ciphertext.replace(/\\s/g, '');\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'upper case') {\r\n      return ciphertext.toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'lower case') {\r\n      return ciphertext.toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'maintain case') {\r\n      return ciphertext;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <OutputText>\r\n          {loading ? (\r\n            <img src={loadingIcon} alt=\"loading output\" />\r\n          ) : (\r\n            formatOutput()\r\n          )}\r\n        </OutputText>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardOutput;\r\n","import { Description } from './CardStyles';\r\n\r\nconst CardDescription = ({ cipher, desc, link, utils, more }) => {\r\n  return (\r\n    <Description>\r\n      <div>\r\n        <h1>\r\n          {cipher} {utils ? '' : 'cipher'}:{' '}\r\n          {utils ? 'Calculate ' : 'Encode and Decode'} {cipher}{' '}\r\n          {utils ? 'of two integers' : 'to text'}\r\n        </h1>\r\n        <p>\r\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {cipher} {utils ? '' : 'cipher'}{' '}\r\n          </a>\r\n          {desc}\r\n        </p>\r\n        {more && <p>{more}</p>}\r\n      </div>\r\n    </Description>\r\n  );\r\n};\r\n\r\nexport default CardDescription;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'RheafsUhe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: { a: 7, b: 3 },\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const affineSlice = createSlice({\r\n  name: 'affine',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseSlope(state) {\r\n      state.key.a += 1;\r\n    },\r\n    increaseIntercept(state) {\r\n      state.key.b += 1;\r\n    },\r\n    decreaseSlope(state) {\r\n      state.key.a -= 1;\r\n    },\r\n    decreaseIntercept(state) {\r\n      state.key.b -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getLoading,\r\n} = affineSlice.actions;\r\n\r\nexport const selectAffine = (state) => state.affine;\r\n\r\nexport default affineSlice.reducer;\r\n","import { CountBtn, Counter, InputGroup } from './CardStyles';\r\n\r\nconst CardCounter = ({\r\n  label,\r\n  inputValue,\r\n  handleCountChange,\r\n  increase,\r\n  decrease,\r\n  min,\r\n  max,\r\n}) => {\r\n  return (\r\n    <Counter>\r\n      <div>\r\n        <label htmlFor={label}>{label}</label>\r\n        <InputGroup>\r\n          <CountBtn\r\n            colorDisabled={(theme) => theme.color}\r\n            disabled={parseInt(inputValue) === 0 && min === 0 ? true : false}\r\n            onClick={decrease}\r\n          >\r\n            {' '}\r\n            -{' '}\r\n          </CountBtn>\r\n          <input\r\n            type=\"number\"\r\n            min={min}\r\n            max={max}\r\n            value={inputValue}\r\n            onChange={handleCountChange}\r\n          />\r\n          <CountBtn\r\n            colorDisabled={(theme) => theme.color}\r\n            disabled={parseInt(inputValue) === max && max ? true : false}\r\n            onClick={increase}\r\n          >\r\n            {' '}\r\n            +{' '}\r\n          </CountBtn>\r\n        </InputGroup>\r\n      </div>\r\n    </Counter>\r\n  );\r\n};\r\n\r\nexport default CardCounter;\r\n","import styled from 'styled-components';\r\n\r\nexport const CounterWrap = styled.div`\r\n  display: flex;\r\n\r\n  & > div {\r\n    width: 50%;\r\n\r\n    &:first-child {\r\n      border-right: 1px solid ${({ theme }) => theme.border};\r\n    }\r\n  }\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport {\r\n  decreaseIntercept,\r\n  decreaseSlope,\r\n  getData,\r\n  increaseIntercept,\r\n  increaseSlope,\r\n  selectAffine,\r\n} from './affineSlice';\r\nimport { CounterWrap } from './AffineStyles';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleSlopeCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 26) {\r\n        getKey({ ...data.key, a: 26 });\r\n      } else {\r\n        getKey({ ...data.key, a: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.key, a: '' });\r\n    }\r\n  };\r\n\r\n  const handleInterceptCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 26) {\r\n        getKey({ ...data.key, b: 26 });\r\n      } else {\r\n        getKey({ ...data.key, b: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.key, b: '' });\r\n    }\r\n  };\r\n\r\n  const increaseSlopeCounter = () => {\r\n    dispatch(increaseSlope());\r\n  };\r\n\r\n  const decreaseSlopeCounter = () => {\r\n    dispatch(decreaseSlope());\r\n  };\r\n\r\n  const increaseInterceptCounter = () => {\r\n    dispatch(increaseIntercept());\r\n  };\r\n\r\n  const decreaseInterceptCounter = () => {\r\n    dispatch(decreaseIntercept());\r\n  };\r\n\r\n  return (\r\n    <CounterWrap>\r\n      <CardCounter\r\n        label=\"SLOPE / A\"\r\n        inputValue={data.key.a}\r\n        handleCountChange={handleSlopeCountChange}\r\n        increase={increaseSlopeCounter}\r\n        decrease={decreaseSlopeCounter}\r\n        min={0}\r\n        max={26}\r\n      />\r\n      <CardCounter\r\n        label=\"INTERCEPT / B\"\r\n        inputValue={data.key.b}\r\n        handleCountChange={handleInterceptCountChange}\r\n        increase={increaseInterceptCounter}\r\n        decrease={decreaseInterceptCounter}\r\n        min={0}\r\n        max={26}\r\n      />\r\n    </CounterWrap>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const submit = async (url, mess, k) => {\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      text: mess,\r\n      key: k,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n  const result = await response.json();\r\n  return result;\r\n};\r\n\r\nexport const getCurrentCase = (cases) => {\r\n  return cases.filter((item) => item.active)[0].value;\r\n};\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.body};\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 1.6rem;\r\n  padding-top: 4.8rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport { getData, resetData, selectAffine, getLoading } from './affineSlice';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\n\r\nconst Affine = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/affine/encode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/affine/decode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Affine Cipher\"\r\n          titleAlign=\"center\"\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          keys={data.key}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Affine\"\r\n        desc={\r\n          'is a type of monoalphabetic substitution cipher, where each letter in an alphabet is mapped to its numeric equivalent, encrypted using a simple mathematical function, and converted back to a letter. Each letter is enciphered with the function (ax + b) mod 26, where b is the magnitude of the shift.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Affine_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Affine;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'JpwolyCpw',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 7,\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const ceasarSlice = createSlice({\r\n  name: 'ceasar',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseKey(state) {\r\n      state.key += 1;\r\n    },\r\n    decreaseKey(state) {\r\n      state.key -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, increaseKey, decreaseKey, getLoading } =\r\n  ceasarSlice.actions;\r\n\r\nexport const selectCeasar = (state) => state.ceasar;\r\n\r\nexport default ceasarSlice.reducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport { decreaseKey, getData, increaseKey, selectCeasar } from './ceasarSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const increase = () => {\r\n    dispatch(increaseKey());\r\n  };\r\n\r\n  const decrease = () => {\r\n    dispatch(decreaseKey());\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 26) {\r\n        console.log(value);\r\n        getKey(26);\r\n      } else {\r\n        getKey(value);\r\n      }\r\n    } else {\r\n      getKey('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardCounter\r\n      label=\"Key\"\r\n      inputValue={data.key}\r\n      handleCountChange={handleCountChange}\r\n      increase={increase}\r\n      decrease={decrease}\r\n      min={0}\r\n      max={26}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\nimport { getData, resetData, selectCeasar, getLoading } from './ceasarSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Ceasar = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/ceasar/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/ceasar/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Ceasar Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Ceasar\"\r\n        desc={\r\n          ' is one of the simplest and most widely known encryption techniques. It is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Ceasar;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'piVrehpiC',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const reverseSlice = createSlice({\r\n  name: 'reverse',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = reverseSlice.actions;\r\n\r\nexport const selectReverse = (state) => state.reverse;\r\n\r\nexport default reverseSlice.reducer;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { Container, getCurrentCase, submit, Wrap } from '../Utils';\r\nimport { getData, resetData, selectReverse, getLoading } from './reverseSlice';\r\n\r\nconst Reverse = () => {\r\n  const data = useSelector(selectReverse);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/encode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const decode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/decode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Reverse Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Reverse\"\r\n        desc={\r\n          ' uses a pattern of reversing the string of plain text to convert as cipher text. The process of encryption and decryption is same. To decrypt cipher text, the user simply needs to reverse the cipher text to get the plain text.'\r\n        }\r\n        link=\"https://www.tutorialspoint.com/cryptography_with_python/cryptography_with_python_reverse_cipher.htm\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Reverse;\r\n","import styled from 'styled-components';\r\nimport { Btn, TransformOutPut, Btns } from '../../components/Card/CardStyles';\r\n\r\nexport const CounterWrap = styled.div`\r\n  padding-bottom: 2rem;\r\n  & > div {\r\n    padding-bottom: 0.4rem;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n\r\n    @media only screen and (min-width: 1200px) {\r\n      padding-top: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BtnLarge = styled(Btn)`\r\n  max-width: 12.6rem;\r\n  padding: 0 2rem;\r\n  width: 12.6rem;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0;\r\n    width: 11.6rem;\r\n  }\r\n`;\r\n\r\nexport const TransformInput = styled(TransformOutPut)`\r\n  & > div {\r\n    border-right: none;\r\n    padding: 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  ul {\r\n    left: -1.8rem;\r\n    width: calc(100% + 3.6rem);\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    & > div {\r\n      padding: 2rem 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    & > div {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n\r\n    ul {\r\n      left: -3.8rem;\r\n      width: calc(100% + 7.6rem);\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & > div {\r\n      padding: 2rem 1.8rem;\r\n    }\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport {\r\n  CaseStrategy,\r\n  Container as CardContainer,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  OutputText,\r\n  Title,\r\n  WrapDropdown,\r\n  Btns,\r\n} from '../../components/Card/CardStyles';\r\nimport { Container, getCurrentCase, Wrap } from '../Utils';\r\nimport { BtnLarge, CounterWrap, TransformInput } from './ModuloStyles';\r\n\r\nconst Modulo = () => {\r\n  const [actions, setActions] = useState([\r\n    { value: 'number', active: true },\r\n    { value: 'power', active: false },\r\n  ]);\r\n  const currentAction = getCurrentCase(actions);\r\n  const [showActions, setShowActions] = useState(false);\r\n  const [output, setOutput] = useState(5);\r\n  const [input, setInput] = useState({\r\n    base: 5,\r\n    exponent: 1,\r\n    modulo: 11,\r\n  });\r\n\r\n  const handleSelectAction = (e) => {\r\n    setShowActions(false);\r\n    const value = e.target.id;\r\n    setActions((actions) => {\r\n      return actions.map((action) => {\r\n        if (action.value === value) {\r\n          return { ...action, active: true };\r\n        } else {\r\n          return { ...action, active: false };\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const getModulo = (base, power, mod) => {\r\n    let powerOfBin = 1;\r\n    let index = 1;\r\n    const values = [base];\r\n\r\n    while (powerOfBin < power) {\r\n      values.push((values[index - 1] * values[index - 1]) % mod);\r\n      powerOfBin *= 2;\r\n      index += 1;\r\n    }\r\n\r\n    let result = 1;\r\n    const binOfPower = power.toString(2).split('').reverse().join('');\r\n\r\n    for (let i = 0; i < binOfPower.length; i++) {\r\n      if (binOfPower[i] === '1') {\r\n        result *= values[i];\r\n      }\r\n    }\r\n    return result % mod;\r\n  };\r\n\r\n  const calculate = () => {\r\n    let result = 0;\r\n    if (currentAction === 'number') {\r\n      result = input.base % input.modulo;\r\n    } else {\r\n      result = getModulo(input.base, input.exponent, input.modulo);\r\n    }\r\n    setOutput(result);\r\n  };\r\n\r\n  const handleCountChange = (value, field) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: parseInt(value) });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const inOrDecrease = (value, field, number) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: value + number });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    handleCountChange(e.target.value, 'base');\r\n  };\r\n\r\n  const increaseNumber = () => {\r\n    const value = input.base;\r\n    inOrDecrease(value, 'base', 1);\r\n  };\r\n\r\n  const decreaseNumber = () => {\r\n    const value = input.base;\r\n    inOrDecrease(value, 'base', -1);\r\n  };\r\n\r\n  const handlePowerChange = (e) => {\r\n    handleCountChange(e.target.value, 'exponent');\r\n  };\r\n\r\n  const increasePower = () => {\r\n    const value = input.exponent;\r\n    inOrDecrease(value, 'exponent', 1);\r\n  };\r\n\r\n  const decreasePower = () => {\r\n    const value = input.exponent;\r\n    inOrDecrease(value, 'exponent', -1);\r\n  };\r\n\r\n  const handleModuloChange = (e) => {\r\n    handleCountChange(e.target.value, 'modulo');\r\n  };\r\n\r\n  const increaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', 1);\r\n  };\r\n\r\n  const decreaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', -1);\r\n  };\r\n\r\n  const reset = () => {\r\n    setInput({\r\n      base: 5,\r\n      exponent: 1,\r\n      modulo: 11,\r\n    });\r\n    setOutput(5);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardContainer>\r\n          <Title>Numbers Input</Title>\r\n          <Content>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label={currentAction === 'number' ? 'NUMBER' : 'BASE'}\r\n                inputValue={input.base}\r\n                handleCountChange={handleNumberChange}\r\n                increase={increaseNumber}\r\n                decrease={decreaseNumber}\r\n              />\r\n              {currentAction === 'power' && (\r\n                <CardCounter\r\n                  label=\"exponent\"\r\n                  inputValue={input.exponent}\r\n                  handleCountChange={handlePowerChange}\r\n                  increase={increasePower}\r\n                  decrease={decreasePower}\r\n                  min={0}\r\n                />\r\n              )}\r\n              <CardCounter\r\n                label=\"modulo\"\r\n                inputValue={input.modulo}\r\n                handleCountChange={handleModuloChange}\r\n                increase={increaseModulo}\r\n                decrease={decreaseModulo}\r\n              />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer style={{ height: '29.5rem' }}>\r\n          <Title align=\"center\">Calculate Modulo</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>calculate</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n\r\n            <TransformInput>\r\n              <CaseStrategy>\r\n                <label>TYPE INPUT</label>\r\n                <WrapDropdown>\r\n                  <DropdownButton onClick={() => setShowActions(!showActions)}>\r\n                    {currentAction}\r\n                  </DropdownButton>\r\n                  {showActions && (\r\n                    <DropdownList>\r\n                      {actions.map((strategy, key) => {\r\n                        return (\r\n                          <li\r\n                            className={strategy.active ? 'active' : ''}\r\n                            key={key}\r\n                            id={strategy.value}\r\n                            onClick={handleSelectAction}\r\n                          >\r\n                            {strategy.value}\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </DropdownList>\r\n                  )}\r\n                  <RiArrowDownSFill />\r\n                </WrapDropdown>\r\n              </CaseStrategy>\r\n            </TransformInput>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>Number Output</Title>\r\n          <Content>\r\n            <OutputText>{output}</OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Modulo operation\"\r\n        desc={\r\n          ' returns the remainder or signed remainder of a division, after one number is divided by another (called the modulus of the operation). Given two positive numbers a and n, a modulo n (abbreviated as a mod n) is the remainder of the Euclidean division of a by n, where a is the dividend and n is the divisor. The modulo operation is to be distinguished from the symbol mod, which refers to the modulus (or divisor) one is operating from.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Modulo_operation\"\r\n        utils={true}\r\n        more={\r\n          'Some calculators have a mod() function button, and many programming languages have a similar function, expressed as mod(a, n), for example. Some also support expressions that use \"%\", \"mod\", or \"Mod\" as a modulo or remainder operator, such as a % n or a mod n.'\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Modulo;\r\n","import { useState } from 'react';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport {\r\n  Container as CardContainer,\r\n  Content,\r\n  OutputText,\r\n  Title,\r\n  Btns,\r\n} from '../../components/Card/CardStyles';\r\nimport { Container, Wrap } from '../Utils';\r\nimport { CounterWrap, BtnLarge } from '../modulo/ModuloStyles';\r\n\r\nconst ModularInverse = () => {\r\n  const [output, setOutput] = useState(9);\r\n  const [input, setInput] = useState({\r\n    number: 5,\r\n    modulo: 11,\r\n  });\r\n\r\n  const getModularInverse = () => {\r\n    for (let i = 0; i < input.modulo; i++) {\r\n      if ((input.number * i) % input.modulo === 1) {\r\n        return i;\r\n      }\r\n    }\r\n    return 'Not Found. Please Check Your Input!';\r\n  };\r\n\r\n  const calculate = () => {\r\n    setOutput(getModularInverse());\r\n  };\r\n\r\n  const handleCountChange = (value, field) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: parseInt(value) });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const inOrDecrease = (value, field, number) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: value + number });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    handleCountChange(e.target.value, 'number');\r\n  };\r\n\r\n  const increaseNumber = () => {\r\n    const value = input.number;\r\n    inOrDecrease(value, 'number', 1);\r\n  };\r\n\r\n  const decreaseNumber = () => {\r\n    const value = input.number;\r\n    inOrDecrease(value, 'number', -1);\r\n  };\r\n\r\n  const handleModuloChange = (e) => {\r\n    handleCountChange(e.target.value, 'modulo');\r\n  };\r\n\r\n  const increaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', 1);\r\n  };\r\n\r\n  const decreaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', -1);\r\n  };\r\n\r\n  const reset = () => {\r\n    setInput({\r\n      number: 5,\r\n      modulo: 11,\r\n    });\r\n    setOutput(9);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardContainer>\r\n          <Title>Numbers Input</Title>\r\n          <Content>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label={'NUMBER'}\r\n                inputValue={input.number}\r\n                handleCountChange={handleNumberChange}\r\n                increase={increaseNumber}\r\n                decrease={decreaseNumber}\r\n              />\r\n              <CardCounter\r\n                label=\"modulo\"\r\n                inputValue={input.modulo}\r\n                handleCountChange={handleModuloChange}\r\n                increase={increaseModulo}\r\n                decrease={decreaseModulo}\r\n              />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer style={{ height: '29.5rem' }}>\r\n          <Title align=\"center\">Modular Inverse</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>calculate</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>Number Output</Title>\r\n          <Content>\r\n            <OutputText>{output}</OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Modular multiplicative inverse\"\r\n        desc={\r\n          '  of an integer a is an integer x such that the product ax is congruent to 1 with respect to the modulus m. In the standard notation of modular arithmetic this congruence is written as ax ≡ 1 (mod m ), which is the shorthand way of writing the statement that m divides (evenly) the quantity ax − 1, or, put another way, the remainder after dividing ax by the integer m is 1.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Modular_multiplicative_inverse\"\r\n        utils={true}\r\n        more={\r\n          'Finding modular multiplicative inverses also has practical applications in the field of cryptography, i.e. public-key cryptography and the RSA Algorithm. A benefit for the computer implementation of these applications is that there exists a very fast algorithm (the extended Euclidean algorithm) that can be used for the calculation of modular multiplicative inverses.'\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ModularInverse;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'CriVpihpe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '12345',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const transpositionSlice = createSlice({\r\n  name: 'transposition',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = initialState.plaintext;\r\n      state.ciphertext = initialState.ciphertext;\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = transpositionSlice.actions;\r\n\r\nexport const selectTransposition = (state) => state.transposition;\r\n\r\nexport default transpositionSlice.reducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectTransposition } from './transpositionSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">KEY</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter columns number...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport { getCurrentCase, submit, Container, Wrap } from '../Utils';\r\nimport {\r\n  getData,\r\n  resetData,\r\n  selectTransposition,\r\n  getLoading,\r\n} from './transpositionSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Transposition = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n\r\n  const getPlaintext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title=\"Text Input\"\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title=\"Transposition Cipher\"\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentCase={currentCase}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title=\"Text Output\"\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher=\"Transposition\"\r\n        desc={\r\n          ' is a method of encryption by which the positions held by units of plaintext (which are commonly characters or groups of characters) are shifted according to a regular system, so that the ciphertext constitutes a permutation of the plaintext.'\r\n        }\r\n        link=\"https://en.wikipedia.org/wiki/Transposition_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Transposition;\r\n","import { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from '../src/components/Theme/ThemeCustome';\nimport Header from './components/Header';\nimport Affine from './feature/affine';\nimport Ceasar from './feature/ceasar';\nimport Reverse from './feature/reverse';\nimport Modulo from './feature/modulo';\nimport ModularInverse from './feature/modularInverse';\nimport Transposition from './feature/transposition';\nimport './index.css';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <div className=\"App\">\n        <Router>\n          <Header theme={theme} setTheme={setTheme} />\n          <Switch>\n            <Route exact path=\"/\" component={Ceasar} />\n            <Route path=\"/affine\" component={Affine} />\n            <Route path=\"/reverse\" component={Reverse} />\n            <Route path=\"/transposition\" component={Transposition} />\n            <Route path=\"/modulo\" component={Modulo} />\n            <Route path=\"/modular-inverse\" component={ModularInverse} />\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport ceasar from '../feature/ceasar/ceasarSlice';\r\nimport affine from '../feature/affine/affineSlice';\r\nimport reverse from '../feature/reverse/reverseSlice';\r\nimport transposition from '../feature/transposition/transpositionSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ceasar: ceasar,\r\n    affine: affine,\r\n    reverse: reverse,\r\n    transposition: transposition,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}