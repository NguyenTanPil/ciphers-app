{"version":3,"sources":["components/Theme/ThemeCustome.js","components/Footer/FooterStyles.js","components/Footer/index.js","components/Sidebar/SidebarStyles.js","components/Sidebar/index.js","components/Header/HeaderStyles.js","components/Header/index.js","components/Card/CardStyles.js","components/Card/Alphabet.js","components/Card/CardActions.js","components/Card/CardDescription.js","components/Card/CardInput.js","components/Card/loading.gif","components/Card/CardOutput.js","feature/Utils.js","feature/affine/affineSlice.js","components/Card/CardCounter.js","feature/affine/AffineStyles.js","feature/affine/ExtraInput.js","feature/affine/Detail.js","feature/affine/index.js","feature/base64/base64Slice.js","feature/base64/index.js","feature/ceasar/Detail.js","feature/ceasar/ceasarSlice.js","feature/ceasar/ExtraInput.js","feature/ceasar/index.js","feature/des/desSlice.js","feature/des/ExtraInput.js","feature/des/index.js","feature/modulo/ModuloStyles.js","feature/elgamal/Detail.js","feature/elgamal/elgamalSlice.js","feature/elgamal/elgamalSlytes.js","feature/elgamal/index.js","feature/hill/Detail.js","feature/hill/hillSlice.js","feature/hill/ExtraInput.js","feature/hill/index.js","feature/modularInverse/index.js","feature/modulo/index.js","feature/multiplicative/multiplicativeSlice.js","feature/multiplicative/ExtraInput.js","feature/multiplicative/index.js","feature/reverse/reverseSlice.js","feature/reverse/index.js","components/RadioBox/RadioBoxStyles.js","components/RadioBox/index.js","feature/rot13/rot13Slice.js","feature/rot13/Rot13Styles.js","feature/rot13/ExtraInput.js","feature/rot13/index.js","feature/rsa/Detail.js","feature/rsa/rsaSlytes.js","feature/rsa/rsaSlice.js","feature/rsa/ExtraInput.js","feature/rsa/index.js","feature/simpleSubstitution/simpleSubstitutionSlice.js","feature/simpleSubstitution/ExtraInput.js","feature/simpleSubstitution/index.js","feature/transposition/transpositionSlice.js","feature/transposition/ExtraInput.js","feature/transposition/index.js","feature/vigenere/Detail.js","feature/vigenere/vigenereSlice.js","feature/vigenere/ExtraInput.js","feature/vigenere/index.js","feature/xor/xorSlice.js","feature/xor/ExtraInput.js","feature/xor/index.js","App.js","reportWebVitals.js","app/store.js","i18n.js","index.js"],"names":["lightTheme","body","text","background","title","active","hover","border","shadow","darkTheme","Container","styled","footer","theme","Wrap","div","Content","p","ChangeLanguage","BtnSmall","button","prop","current","Footer","useState","language","setLanguage","useTranslation","t","i18n","handleLanguageChange","e","changeLanguage","target","innerHTML","onClick","aside","Header","ListLinks","ul","NavItem","li","NavLink","Link","Sidebar","showSidebar","setShowSidebar","className","classList","contains","nodeName","exact","to","Nav","Wrapper","Logo","NavList","bounce","keyframes","Bar","TrackMode","props","setTheme","useEffect","document","style","overflow","position","top","width","removeAttribute","textarea","Title","align","TextareaInput","OutputText","span","Btns","Btn","rotate","Counter","InputGroup","CountBtn","disabled","AlphabetWrap","TransformOutPut","CaseStrategy","WrapDropdown","DropdownButton","DropdownList","ForeignChars","Brick","Description","Alphabet","CardActions","getForeignChars","encode","decode","plaintext","keys","ciphertext","currentIndex","getCaseStategy","caseStrategy","foreignChars","reset","titleAlign","extraInput","showCase","setShowCase","handleSelectCase","map","strategy","key","id","value","length","CardDescription","cipher","desc","link","utils","more","href","rel","CardInput","getPlaintext","placeholder","onChange","CardOutput","currentCase","loading","src","loadingIcon","alt","replace","toUpperCase","toLowerCase","submit","url","mess","k","a","fetch","method","JSON","stringify","headers","response","json","result","getCurrentIndex","cases","findIndex","c","getCurrentCase","filter","ContainerDetail","ContentDetail","ItemDetail","level","initialState","processes","b","actionType","loadingOutput","affineSlice","createSlice","name","reducers","getData","state","action","payload","resetData","increaseSlope","increaseIntercept","decreaseSlope","decreaseIntercept","getLoading","actions","selectAffine","affine","CardCounter","label","inputValue","handleCountChange","increase","decrease","min","max","htmlFor","colorDisabled","color","parseInt","type","CounterWrap","ExtraInput","data","useSelector","dispatch","useDispatch","getKey","Detail","container","useRef","content","show","setShow","ref","contentEl","containerEl","heightContent","getBoundingClientRect","height","i","process","char","x","mod","n","Affine","getDataOnSubmit","console","log","newCases","item","base64Slice","selectBase64","base64","Base64","getCiphertext","Math","abs","ceasarSlice","increaseKey","decreaseKey","selectCeasar","ceasar","Ceasar","desSlice","selectDes","des","Des","BtnLarge","TransformInput","y","c1","c2","reverseKey","elgamalSlice","increaseP","decreaseP","increaseA","decreaseA","increaseX","decreaseX","increaseK","decreaseK","selectElgamal","elgamal","BtnLargeActive","ElGamal","getActionType","getParams","params","Number","bigInt","pow","modInv","multiply","intPlaintext","matrix_chars","index","SmallBlock","matrix_chars_as_int","d","inverse_det","reverse_key","steps","result_as_int","result_as_char","hillSlice","increaseB","increaseC","increaseD","decreaseB","decreaseC","decreaseD","selectHill","hill","field","Hill","convertKeyToChar","chars","String","fromCharCode","ModularInverse","output","setOutput","number","modulo","input","setInput","inOrDecrease","error","getModularInverse","Modulo","setActions","currentAction","showActions","setShowActions","base","exponent","handleSelectAction","multiplicativeSlice","selectMultiplicative","multiplicative","Multiplicative","reverseSlice","selectReverse","reverse","Reverse","State","RadioBox","handleChange","checked","rot13Slice","selectRot13","rot13","Rot13","q","phi","newD","newE","num","split","CounterCustom","rsaSlice","increaseQ","decreaseQ","increaseE","decreaseE","selectRsa","rsa","selectInput","setSelectInput","selectTypeInput","curr","param","Rsa","setAction","errorMess","arrPlaintext","match","charAscii","charCodeAt","push","join","simpleSubstitutionSlice","selectSimpleSubstitution","simpleSubstitution","shuffle","array","randomIndex","floor","random","arr","maxLength","Transposition","transpositionSlice","selectTransposition","transposition","keysAsInt","slice","vigenereSlice","selectVigenere","vigenere","Vigenere","xorSlice","selectXor","xor","XOR","App","path","component","SimpleSubstitution","DES","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","use","HttpApi","LanguageDetector","initReactI18next","init","supportedLngs","fallbackLng","detection","order","caches","backend","loadPath","react","useSuspense","interpolation","escapeValue","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.ab4470f5.chunk.js","sourcesContent":["export const lightTheme = {\r\n  body: '#f2f4f6',\r\n  text: '#797f86',\r\n  background: '#fff',\r\n  title: '#272727',\r\n  active: '#e3e8ec',\r\n  hover: '#e3e8ec66',\r\n  border: '#e3e8ec',\r\n  shadow: `0 0.2rem 2.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 3rem 0 rgb(0 0 0 / 12%)`,\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: '#1e2122',\r\n  text: '#988f81',\r\n  background: '#181a1b',\r\n  title: '#cfcbc5',\r\n  active: '#25282a',\r\n  hover: '#25282a66',\r\n  border: '#373b3d',\r\n  shadow: ` rgba(100, 100, 111, 0.2) 0px 7px 29px 0px`,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.footer`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-top: 1px solid ${({ theme }) => theme.border};\r\n  padding: 3.6rem 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.1rem;\r\n  margin: 0 auto;\r\n  width: 80%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  text-align: justify;\r\n  width: 100%;\r\n\r\n  span {\r\n    color: #4db6ac;\r\n    font-size: 2rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    max-width: 70rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    max-width: 80rem;\r\n  }\r\n`;\r\n\r\nexport const ChangeLanguage = styled.div`\r\n  display: flex;\r\n  margin-top: 0.65rem;\r\n`;\r\n\r\nexport const BtnSmall = styled.button`\r\n  background-color: ${(prop) =>\r\n    prop.current ? 'rgb(34, 150, 138)' : '#4db6ac'};\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 0.3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  height: 3.6rem;\r\n  margin-right: 0.65rem;\r\n  outline: none;\r\n  padding: 0 1.5rem;\r\n  text-transform: capitalize;\r\n  transition: background-color 0.3s ease 0s;\r\n\r\n  &:hover {\r\n    background-color: rgb(34, 150, 138);\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    margin-left: 0.65rem;\r\n    margin-right: 0;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport {\r\n  ChangeLanguage,\r\n  Container,\r\n  Content,\r\n  Wrap,\r\n  BtnSmall,\r\n} from './FooterStyles';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Footer = () => {\r\n  const [language, setLanguage] = useState('en');\r\n  const [t, i18n] = useTranslation();\r\n\r\n  const handleLanguageChange = (e) => {\r\n    i18n.changeLanguage(e.target.innerHTML);\r\n    setLanguage(e.target.innerHTML);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <Content>\r\n          <span>CipherVip</span> {t('footer')}\r\n        </Content>\r\n        <ChangeLanguage>\r\n          <BtnSmall\r\n            current={language === 'en' ? 1 : 0}\r\n            onClick={handleLanguageChange}\r\n          >\r\n            en\r\n          </BtnSmall>\r\n          <BtnSmall\r\n            current={language === 'vn' ? 1 : 0}\r\n            onClick={handleLanguageChange}\r\n          >\r\n            vn\r\n          </BtnSmall>\r\n        </ChangeLanguage>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  background-color: transparent;\r\n  height: 100vh;\r\n  overflow-y: scroll;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  z-index: 2000;\r\n  transform: translateX(100%);\r\n  transition: transform 600ms ease;\r\n  padding-right: 1.6rem;\r\n\r\n  &.active {\r\n    /* background-color: rgba(0, 0, 0, 0.2); */\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const Wrap = styled.aside`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-left: 2px solid ${({ theme }) => theme.border};\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  height: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 80%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    width: 40%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  padding: 1.8rem 3rem;\r\n\r\n  button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    height: 2.5rem;\r\n    outline: none;\r\n\r\n    svg {\r\n      color: ${({ theme }) => theme.text};\r\n      font-size: 2.5rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ListLinks = styled.ul`\r\n  background-color: ${({ theme }) => theme.background};\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-bottom: 1.6rem;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: block;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n  padding: 1.25rem 3rem;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.hover};\r\n    padding-left: 3.5rem;\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.active};\r\n    border-left: 3px solid #26a69a;\r\n    color: #26a69a;\r\n  }\r\n`;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { CgPushChevronRight } from 'react-icons/cg';\r\nimport {\r\n  Container,\r\n  Header,\r\n  ListLinks,\r\n  NavItem,\r\n  NavLink,\r\n  Wrap,\r\n} from './SidebarStyles';\r\n\r\nconst Sidebar = ({ showSidebar, setShowSidebar }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleShow = (e) => {\r\n    if (e.target.classList.contains('close') || e.target.nodeName === 'A') {\r\n      setShowSidebar(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={showSidebar ? 'active close' : ''}\r\n      onClick={handleShow}\r\n    >\r\n      <Wrap>\r\n        <Header>\r\n          <button onClick={() => setShowSidebar(false)}>\r\n            <CgPushChevronRight />\r\n          </button>\r\n        </Header>\r\n        <ListLinks>\r\n          <NavItem>\r\n            <NavLink exact to=\"/\">\r\n              {t('ceasar')}\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/affine\">{t('affine')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/reverse\">{t('reverse')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/transposition\">{t('transposition')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/simple-substitution\">\r\n              {t('simple_substitution')}\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/vigenere\">{t('vigenere')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/hill\">{t('hill')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/rot13\">{t('rot13')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/base64\">{t('base64')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/xor\">{t('xor')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/multiplicative\">{t('multiplicative')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/des\">{t('des')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/elgamal\">{t('elgamal')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/rsa\">{t('rsa')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/modulo\">{t('cal_modulo')}</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/modular-inverse\">{t('mod_inverse')}</NavLink>\r\n          </NavItem>\r\n        </ListLinks>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Nav = styled.div`\r\n  background-color: #4db6ac;\r\n  font-family: 'Zen Antique Soft', serif;\r\n  height: 6.4rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  line-height: 6.4rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n  color: #fff;\r\n  font-size: 3.2rem;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0;\r\n  transition: background-color 0.3s;\r\n\r\n  /* &:hover {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  } */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: none;\r\n  font-size: 1.6rem;\r\n  padding: 0 1.5rem;\r\n  text-transform: capitalize;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst bounce = keyframes`\r\n  0 {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.25);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const Bar = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  outline: none;\r\n\r\n  svg {\r\n    animation: ${bounce} 2s ease infinite;\r\n    display: block;\r\n    color: #fff;\r\n    font-size: 3rem;\r\n    font-weight: 600;\r\n    /* transition: transform 0.3s ease; */\r\n  }\r\n`;\r\n\r\nexport const TrackMode = styled.div`\r\n  background-color: #4d4d4d;\r\n  border-radius: calc(4.6rem / 4);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 2.4rem;\r\n  margin-right: 1rem;\r\n  position: relative;\r\n  width: 4.6rem;\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 2.4rem;\r\n    text-align: center;\r\n    width: 2.4rem;\r\n  }\r\n\r\n  & > .ball {\r\n    background-color: #fff;\r\n    border: 0.2rem solid #4d4d4d;\r\n    border-radius: 50%;\r\n    height: 2.3rem;\r\n    position: absolute;\r\n    left: 0;\r\n    transition: all 0.25s ease;\r\n    transform: translateX(\r\n      ${(props) => (props.theme === 'light' ? '0' : '100%')}\r\n    );\r\n    width: 2.3rem;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 2px 3px #ba8fff;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { AiOutlineBars } from 'react-icons/ai';\r\nimport Sidebar from '../Sidebar';\r\nimport {\r\n  Bar,\r\n  Logo,\r\n  Nav,\r\n  NavItem,\r\n  NavList,\r\n  TrackMode,\r\n  Wrapper,\r\n} from './HeaderStyles';\r\n\r\nconst Header = ({ theme, setTheme }) => {\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n\r\n  const themeToggle = () => {\r\n    if (theme === 'light') {\r\n      setTheme('dark');\r\n    } else {\r\n      setTheme('light');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showSidebar) {\r\n      document.body.style.overflow = 'hidden';\r\n      document.body.style.position = 'fixed';\r\n      document.body.style.top = '0';\r\n      document.body.style.width = 'calc(100% - 1.7rem)';\r\n    } else {\r\n      document.body.removeAttribute('style');\r\n    }\r\n  }, [showSidebar]);\r\n\r\n  return (\r\n    <Nav>\r\n      <Wrapper>\r\n        <Logo to=\"/\">CipherVip</Logo>\r\n        <NavList>\r\n          {/* <NavItem>{t('Welcome')}</NavItem> */}\r\n          <NavItem>\r\n            <TrackMode onClick={themeToggle} theme={theme}>\r\n              <span>🌜</span>\r\n              <div className=\"ball\"></div>\r\n              <span>🌞</span>\r\n            </TrackMode>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Bar onClick={() => setShowSidebar(true)}>\r\n              <AiOutlineBars />\r\n            </Bar>\r\n          </NavItem>\r\n        </NavList>\r\n      </Wrapper>\r\n      <Sidebar showSidebar={showSidebar} setShowSidebar={setShowSidebar} />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-radius: 0.2rem;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  box-sizing: border-box;\r\n  height: ${(props) => (props.textarea ? '30rem' : 'auto')};\r\n  max-width: 50rem;\r\n  margin-bottom: 4rem;\r\n  padding: 0 0.75rem;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-bottom: 1rem;\r\n    width: 31.5%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 0 0 0.2rem 0.2rem;\r\n  color: #4db6ac;\r\n  font-size: 2.4rem;\r\n  font-weight: 600;\r\n  line-height: 4.8rem;\r\n  padding: 2rem;\r\n  text-align: ${(props) => (props.align === 'center' ? 'center' : 'left')};\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TextareaInput = styled.textarea`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  outline: none;\r\n  padding: 2rem;\r\n  resize: none;\r\n  transition: all 0.2s ease 0s;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid ${({ theme }) => theme.border};\r\n    box-shadow: 0 1px 0 0 #26a69a;\r\n  }\r\n`;\r\n\r\nexport const OutputText = styled.span`\r\n  color: #797f86;\r\n  display: flex;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  padding: 2rem;\r\n  width: 100%;\r\n\r\n  img {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 2rem 1rem;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n  }\r\n`;\r\nexport const Btn = styled.button`\r\n  background-color: #26a69a;\r\n  border: none;\r\n  border-radius: 0.2rem;\r\n  color: rgb(232, 230, 227);\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  height: 3.6rem;\r\n  letter-spacing: 0.5px;\r\n  line-height: 3.6rem;\r\n  margin-top: 1rem;\r\n  max-width: 11.6rem;\r\n  text-align: center;\r\n  text-decoration-color: initial;\r\n  text-transform: uppercase;\r\n  transition: background-color 0.3s ease 0s;\r\n  vertical-align: middle;\r\n  width: 11.6rem;\r\n\r\n  &:hover {\r\n    background-color: rgb(34, 150, 138);\r\n  }\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  100% {\r\n    transition: transform 0.25s;\r\n    transform: rotateZ(360deg)\r\n  }\r\n`;\r\n\r\nexport const Counter = styled(Btns)`\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 1rem 0.2rem;\r\n\r\n  div {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    color: #4db6ac;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    padding-left: 1.8rem;\r\n    position: relative;\r\n    text-transform: uppercase;\r\n\r\n    button {\r\n      height: 3rem;\r\n      line-height: 3rem;\r\n      padding: 0;\r\n      position: absolute;\r\n      right: 0;\r\n      top: -50%;\r\n      width: 3rem;\r\n\r\n      &:hover {\r\n        svg {\r\n          animation: ${rotate} 1.25s ease 0.25s;\r\n        }\r\n      }\r\n\r\n      svg {\r\n        font-size: 2.6rem;\r\n        margin-top: 0.2rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${Btn} {\r\n    margin-top: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1rem 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  input {\r\n    background-color: ${({ theme }) => theme.background};\r\n    border: none;\r\n    box-shadow: border-box;\r\n    color: ${({ theme }) => theme.text};\r\n    flex-grow: 1;\r\n    font-size: 1.6rem;\r\n    letter-spacing: 1px;\r\n    outline: none;\r\n    text-align: center;\r\n    width: calc(100% - 9.2rem);\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  input[type='text'] {\r\n    border-bottom: 1px solid transparent;\r\n    margin-left: 1.8rem;\r\n    padding-top: 1rem;\r\n    padding-bottom: 0.5rem;\r\n    text-align: left;\r\n\r\n    &:focus {\r\n      border-color: #4db6ac;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CountBtn = styled(Btn)`\r\n  background-color: transparent;\r\n  color: ${(props) => (props.disabled ? '#797f86' : '#988f81')};\r\n  cursor: ${(props) => (props.disabled ? 'initial' : 'pointer')};\r\n  font-size: 2.6rem;\r\n  font-weight: 600;\r\n  height: 4.6rem;\r\n  padding: 0;\r\n  width: 4.6rem;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: ${(props) => (props.disabled ? '#797f86' : '#4db6ac')};\r\n    transform: ${(props) => (props.disabled ? 'scale(1)' : 'scale(1.5)')};\r\n  }\r\n`;\r\n\r\nexport const AlphabetWrap = styled(Counter)`\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    height: 2.6rem;\r\n    line-height: 2.6rem;\r\n    letter-spacing: 1px;\r\n    padding-left: 1.8rem;\r\n    text-align: left;\r\n    vertical-align: middle;\r\n\r\n    &:first-child {\r\n      font-size: 1.2rem;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TransformOutPut = styled(Counter)`\r\n  flex-direction: row;\r\n  padding: 0 0.2rem;\r\n\r\n  & > div {\r\n    height: 100%;\r\n    padding: 2rem 0 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    padding-left: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 0 2rem;\r\n\r\n    & > div {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 0 2rem;\r\n  }\r\n`;\r\n\r\nexport const CaseStrategy = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    border-bottom: none;\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    button {\r\n      padding-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    button {\r\n      padding-right: 3.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WrapDropdown = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.8rem;\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 2.5rem;\r\n    pointer-events: none;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    svg {\r\n      right: 0.5rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    svg {\r\n      right: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DropdownButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  outline: none;\r\n  padding: 1.2rem 3.2rem 0 0;\r\n  text-align: left;\r\n  width: 100%;\r\n\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const DropdownList = styled.ul`\r\n  background-color: ${({ theme }) => theme.background};\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  border-radius: 0.25rem;\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  left: -1.8rem;\r\n  top: 140%;\r\n  z-index: 1008;\r\n  width: calc(100% + 1.8rem);\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    left: -3.8rem;\r\n    width: calc(100% + 3.8rem);\r\n  }\r\n\r\n  li {\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n    font-weight: 600;\r\n    padding: 1.25rem;\r\n    padding-left: 3.8rem;\r\n    transition: all 0.2s linear 0s;\r\n\r\n    &:hover {\r\n      background-color: ${({ theme }) => theme.hover};\r\n      padding-left: 4.2rem;\r\n    }\r\n\r\n    &.active {\r\n      background-color: ${({ theme }) => theme.active};\r\n      color: #26a69a;\r\n    }\r\n\r\n    &:first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ForeignChars = styled.div`\r\n  ${WrapDropdown} {\r\n    padding-top: 1.2rem;\r\n\r\n    button {\r\n      background-color: transparent;\r\n      border: none;\r\n      color: ${({ theme }) => theme.text};\r\n      cursor: pointer;\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      outline: none;\r\n      transition: color 0.2s ease 0s;\r\n\r\n      &:first-letter {\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      &:first-child {\r\n        margin-right: 1rem;\r\n      }\r\n\r\n      &.active {\r\n        color: #26a69a;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Brick = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.25rem 1.8rem;\r\n\r\n  svg {\r\n    font-size: 1.6rem;\r\n    font-weight: 600;\r\n    fill: currentColor;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 1.4;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1.25rem 1.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  padding: 3.6rem 0;\r\n  text-align: justify;\r\n\r\n  div {\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1rem;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n  }\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.title};\r\n    display: block;\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n    padding-bottom: 1.4rem;\r\n    width: 100%;\r\n\r\n    &:first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    font-weight: 590;\r\n    margin-bottom: 1rem;\r\n    width: 100%;\r\n  }\r\n\r\n  a {\r\n    color: #4db6ac;\r\n    display: inline-block;\r\n    font-weight: 600;\r\n\r\n    &::first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    h1 {\r\n      font-size: 2.1rem;\r\n    }\r\n\r\n    p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    h1,\r\n    p {\r\n      max-width: 70rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    h1,\r\n    p {\r\n      max-width: 80rem;\r\n    }\r\n  }\r\n`;\r\n","import { AlphabetWrap } from './CardStyles';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Alphabet = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <AlphabetWrap>\r\n      <label>{t('alphabet')}</label>\r\n      <div>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n      </div>\r\n    </AlphabetWrap>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { HiArrowNarrowDown } from 'react-icons/hi';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport Alphabet from './Alphabet';\r\nimport {\r\n  Brick,\r\n  Btn,\r\n  Btns,\r\n  CaseStrategy,\r\n  Container,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  ForeignChars,\r\n  Title,\r\n  TransformOutPut,\r\n  WrapDropdown,\r\n} from './CardStyles';\r\n\r\nconst CardActions = ({\r\n  getForeignChars,\r\n  encode,\r\n  decode,\r\n  plaintext,\r\n  ciphertext,\r\n  keys,\r\n  currentIndex,\r\n  getCaseStategy,\r\n  caseStrategy,\r\n  foreignChars,\r\n  reset,\r\n  titleAlign,\r\n  title,\r\n  extraInput,\r\n}) => {\r\n  const [showCase, setShowCase] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const handleSelectCase = (e) => {\r\n    getCaseStategy(e);\r\n    setShowCase(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <Btns>\r\n          <Btn onClick={() => encode(plaintext, keys)}>{t('encode')}</Btn>\r\n          <Btn onClick={() => decode(plaintext, keys)}>{t('decode')}</Btn>\r\n          <Btn onClick={reset}>Reset</Btn>\r\n        </Btns>\r\n\r\n        {extraInput}\r\n\r\n        <Alphabet />\r\n\r\n        <TransformOutPut>\r\n          <CaseStrategy>\r\n            <label>{t('case')}</label>\r\n            <WrapDropdown>\r\n              <DropdownButton onClick={() => setShowCase(!showCase)}>\r\n                {t(`case_${currentIndex}`)}\r\n              </DropdownButton>\r\n              {showCase && (\r\n                <DropdownList>\r\n                  {caseStrategy.map((strategy, key) => {\r\n                    return (\r\n                      <li\r\n                        className={strategy.active ? 'active' : ''}\r\n                        key={key}\r\n                        id={strategy.value}\r\n                        onClick={handleSelectCase}\r\n                      >\r\n                        {t(`case_${key + 1}`)}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </DropdownList>\r\n              )}\r\n              <RiArrowDownSFill />\r\n            </WrapDropdown>\r\n          </CaseStrategy>\r\n\r\n          <ForeignChars>\r\n            <label>{t('foreign')}</label>\r\n            <WrapDropdown>\r\n              <button\r\n                className={foreignChars === 'include' ? 'active' : ''}\r\n                id=\"include\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                {t('include')}\r\n              </button>\r\n              <button\r\n                className={foreignChars === 'ignore' ? 'active' : ''}\r\n                id=\"ignore\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                {t('ignore')}\r\n              </button>\r\n            </WrapDropdown>\r\n          </ForeignChars>\r\n        </TransformOutPut>\r\n\r\n        <Brick>\r\n          <HiArrowNarrowDown />\r\n          <span>{t('decoded', { length: plaintext.length })}</span>\r\n        </Brick>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import { Description } from './CardStyles';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst CardDescription = ({ cipher, desc, link, utils, more }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Description>\r\n      <div>\r\n        <h1>\r\n          {cipher}: {utils ? utils : t('utils_word')} {utils ? '' : cipher}{' '}\r\n          {utils ? t('to_integer') : t('to_text')}\r\n        </h1>\r\n        <p>\r\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {cipher}\r\n          </a>\r\n          {desc}\r\n        </p>\r\n      </div>\r\n    </Description>\r\n  );\r\n};\r\n\r\nexport default CardDescription;\r\n","import { Container, Title, Content, TextareaInput } from './CardStyles';\r\n\r\nconst CardInput = ({ title, titleAlign, plaintext, getPlaintext }) => {\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <TextareaInput\r\n          placeholder=\"Enter your message...\"\r\n          value={plaintext}\r\n          onChange={getPlaintext}\r\n        />\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardInput;\r\n","export default __webpack_public_path__ + \"static/media/loading.4ccf66d6.gif\";","import { Container, Content, OutputText, Title } from './CardStyles';\r\nimport loadingIcon from './loading.gif';\r\n\r\nconst CardOutput = ({\r\n  title,\r\n  titleAlign,\r\n  currentCase,\r\n  foreignChars,\r\n  ciphertext,\r\n  loading,\r\n}) => {\r\n  const formatOutput = () => {\r\n    if (foreignChars === 'ignore' && currentCase === 'upper case') {\r\n      return ciphertext.replace(/\\s/g, '').toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'lower case') {\r\n      return ciphertext.replace(/\\s/g, '').toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'maintain case') {\r\n      return ciphertext.replace(/\\s/g, '');\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'upper case') {\r\n      return ciphertext.toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'lower case') {\r\n      return ciphertext.toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'maintain case') {\r\n      return ciphertext;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <OutputText>\r\n          {loading ? (\r\n            <img src={loadingIcon} alt=\"loading output\" />\r\n          ) : (\r\n            formatOutput()\r\n          )}\r\n        </OutputText>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardOutput;\r\n","import styled from 'styled-components';\r\n\r\nexport const submit = async (url, mess, k) => {\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      text: mess,\r\n      key: k,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n  const result = await response.json();\r\n  return result;\r\n};\r\n\r\nexport const getCurrentIndex = (cases) => {\r\n  const index = cases.findIndex((c) => c.active);\r\n  return index + 1;\r\n};\r\n\r\nexport const getCurrentCase = (cases) => {\r\n  return cases.filter((c) => c.active)[0].value;\r\n};\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.body};\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 1.6rem;\r\n  padding-top: 4.8rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const ContainerDetail = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: none;\r\n  padding: 3.6rem 0;\r\n  text-align: justify;\r\n\r\n  div {\r\n    height: 4.6rem;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1rem;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n    transition: all 0.2s ease 0s;\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    display: block;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const ContentDetail = styled.ul`\r\n  margin-top: 2rem;\r\n  height: auto;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ItemDetail = styled.li`\r\n  ${(props) =>\r\n    props.level === 'second'\r\n      ? 'display: flex; justify-content: space-between;'\r\n      : ''}\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n\r\n  & > span:first-child {\r\n    display: inline-block;\r\n    min-width: 24rem;\r\n  }\r\n\r\n  & > span:last-child {\r\n    display: inline-block;\r\n    min-width: 34rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    display: block;\r\n  }\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'RheafsUhe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  processes: [],\r\n  keys: { a: 7, b: 3 },\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const affineSlice = createSlice({\r\n  name: 'affine',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n      state.keys = action.payload.keys;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.keys = initialState.keys;\r\n      state.processes = initialState.processes;\r\n      state.actionType = initialState.actionType;\r\n    },\r\n    increaseSlope(state) {\r\n      state.keys.a += 1;\r\n    },\r\n    increaseIntercept(state) {\r\n      state.keys.b += 1;\r\n    },\r\n    decreaseSlope(state) {\r\n      state.keys.a -= 1;\r\n    },\r\n    decreaseIntercept(state) {\r\n      state.keys.b -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getLoading,\r\n} = affineSlice.actions;\r\n\r\nexport const selectAffine = (state) => state.affine;\r\n\r\nexport default affineSlice.reducer;\r\n","import { CountBtn, Counter, InputGroup } from './CardStyles';\r\n\r\nconst CardCounter = ({\r\n  label,\r\n  inputValue,\r\n  handleCountChange,\r\n  increase,\r\n  decrease,\r\n  min,\r\n  max,\r\n}) => {\r\n  return (\r\n    <Counter>\r\n      <div>\r\n        <label htmlFor={label}>{label}</label>\r\n        <InputGroup>\r\n          <CountBtn\r\n            colorDisabled={(theme) => theme.color}\r\n            disabled={parseInt(inputValue) === 0 && min === 0 ? true : false}\r\n            onClick={decrease}\r\n          >\r\n            {' '}\r\n            -{' '}\r\n          </CountBtn>\r\n          <input\r\n            type=\"number\"\r\n            min={min}\r\n            max={max}\r\n            value={inputValue}\r\n            onChange={handleCountChange}\r\n          />\r\n          <CountBtn\r\n            colorDisabled={(theme) => theme.color}\r\n            disabled={parseInt(inputValue) === max && max ? true : false}\r\n            onClick={increase}\r\n          >\r\n            {' '}\r\n            +{' '}\r\n          </CountBtn>\r\n        </InputGroup>\r\n      </div>\r\n    </Counter>\r\n  );\r\n};\r\n\r\nexport default CardCounter;\r\n","import styled from 'styled-components';\r\n\r\nexport const CounterWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  & > div {\r\n    width: 50%;\r\n\r\n    &:nth-child(2n + 1) {\r\n      border-right: 1px solid ${({ theme }) => theme.border};\r\n    }\r\n  }\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport {\r\n  decreaseIntercept,\r\n  decreaseSlope,\r\n  getData,\r\n  increaseIntercept,\r\n  increaseSlope,\r\n  selectAffine,\r\n} from './affineSlice';\r\nimport { CounterWrap } from './AffineStyles';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        keys: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleSlopeCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        getKey({ ...data.keys, a: 25 });\r\n      } else {\r\n        getKey({ ...data.keys, a: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.keys, a: '' });\r\n    }\r\n  };\r\n\r\n  const handleInterceptCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        getKey({ ...data.keys, b: 25 });\r\n      } else {\r\n        getKey({ ...data.keys, b: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.keys, b: '' });\r\n    }\r\n  };\r\n\r\n  const increaseSlopeCounter = () => {\r\n    dispatch(increaseSlope());\r\n  };\r\n\r\n  const decreaseSlopeCounter = () => {\r\n    dispatch(decreaseSlope());\r\n  };\r\n\r\n  const increaseInterceptCounter = () => {\r\n    dispatch(increaseIntercept());\r\n  };\r\n\r\n  const decreaseInterceptCounter = () => {\r\n    dispatch(decreaseIntercept());\r\n  };\r\n\r\n  return (\r\n    <CounterWrap>\r\n      <CardCounter\r\n        label=\"SLOPE / A\"\r\n        inputValue={data.keys.a}\r\n        handleCountChange={handleSlopeCountChange}\r\n        increase={increaseSlopeCounter}\r\n        decrease={decreaseSlopeCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n      <CardCounter\r\n        label=\"INTERCEPT / B\"\r\n        inputValue={data.keys.b}\r\n        handleCountChange={handleInterceptCountChange}\r\n        increase={increaseInterceptCounter}\r\n        decrease={decreaseInterceptCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n    </CounterWrap>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport { ContainerDetail, ContentDetail, ItemDetail } from '../Utils';\r\n\r\nconst Detail = ({ keys, text, processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const handlShowDetail = () => {\r\n    const contentEl = content.current;\r\n    const containerEl = container.current;\r\n    if (contentEl) {\r\n      const heightContent = contentEl.getBoundingClientRect().height;\r\n\r\n      if (show) {\r\n        containerEl.style.height = `46px`;\r\n        setShow(false);\r\n      } else {\r\n        containerEl.style.height = `${heightContent + 46 + 20}px`;\r\n        setShow(true);\r\n      }\r\n    } else {\r\n      containerEl.style.height = `46px`;\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={handlShowDetail}>{show ? t('hide') : t('detail')}</Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType === 'encode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: E<sub>k</sub>( x ) = ( {keys.a}x +{' '}\r\n                  {keys.b} ) mod 26\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: D<sub>k</sub>( x ) = {processes[0].i} * (\r\n                  x -{processes[0].b} ) mod 26\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('decoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n\r\n            {processes.map((process, key) => {\r\n              return (\r\n                <ItemDetail key={key} level=\"second\">\r\n                  <span>\r\n                    \"{process.char}\" {t('ordinal')} {process.x}\r\n                  </span>\r\n                  <span>\r\n                    {actionType === 'encode' ? (\r\n                      <>\r\n                        E<sub>k</sub>( {process.x} ) = ( {keys.a} * {process.x}{' '}\r\n                        + {keys.b} ) ≡ {keys.a * process.x + keys.b} ≡{' '}\r\n                        {process.mod} mod {process.n}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        D<sub>k</sub>( {process.x} ) = {process.i} * ({' '}\r\n                        {process.x} - {keys.b} ) ≡{' '}\r\n                        {process.i * (process.x - keys.b)} ≡ {process.mod} mod{' '}\r\n                        {process.n}\r\n                      </>\r\n                    )}\r\n                  </span>{' '}\r\n                  {process.result}\r\n                </ItemDetail>\r\n              );\r\n            })}\r\n          </ContentDetail>\r\n        )}\r\n\r\n        {/* <Btn onClick={handlShowDetail}>Detail</Btn> */}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport { getData, getLoading, resetData, selectAffine } from './affineSlice';\r\nimport ExtraInput from './ExtraInput';\r\nimport Detail from './Detail';\r\n\r\nconst Affine = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        keys: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/affine/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'encode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/affine/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'decode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('affine')}\r\n          titleAlign=\"center\"\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          keys={data.keys}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <Detail\r\n        keys={data.keys}\r\n        text={data.plaintext}\r\n        processes={data.processes}\r\n        actionType={data.actionType}\r\n      />\r\n      <CardDescription\r\n        cipher={t('affine')}\r\n        desc={t('affine_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Affine_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Affine;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'Q2lwaGVyVmlw',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const base64Slice = createSlice({\r\n  name: 'base64',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = base64Slice.actions;\r\n\r\nexport const selectBase64 = (state) => state.base64;\r\n\r\nexport default base64Slice.reducer;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport { getData, getLoading, resetData, selectBase64 } from './base64Slice';\r\n\r\nconst Base64 = () => {\r\n  const data = useSelector(selectBase64);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/base64/encode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const decode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/base64/decode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('base64')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('base64')}\r\n        desc={t('base64_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Base64\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Base64;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport { ContainerDetail, ContentDetail, ItemDetail } from '../Utils';\r\n\r\nconst Detail = ({ keys, text, processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const handlShowDetail = () => {\r\n    const contentEl = content.current;\r\n    const containerEl = container.current;\r\n    if (contentEl) {\r\n      const heightContent = contentEl.getBoundingClientRect().height;\r\n\r\n      if (show) {\r\n        containerEl.style.height = `46px`;\r\n        setShow(false);\r\n      } else {\r\n        containerEl.style.height = `${heightContent + 46 + 20}px`;\r\n        setShow(true);\r\n      }\r\n    } else {\r\n      containerEl.style.height = `46px`;\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={handlShowDetail}>{show ? t('hide') : t('detail')}</Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType === 'encode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: E<sub>k</sub>( x ) = ( x + {keys} ) mod 26\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: D<sub>k</sub>( x ) = ( x - {keys} ) mod 26\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('decoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n\r\n            {processes.map((process, key) => {\r\n              return (\r\n                <ItemDetail key={key} level=\"second\">\r\n                  <span>\r\n                    \"{process.char}\" {t('ordinal')} {process.x}\r\n                  </span>\r\n                  <span>\r\n                    {actionType === 'encode' ? 'E' : 'D'}\r\n                    <sub>k</sub>( {process.x} ) = ( {process.x}{' '}\r\n                    {process.k < 0 ? '-' : '+'} {Math.abs(process.k)} ) ={' '}\r\n                    {process.x + process.k} ≡ {process.mod} mod {process.n}{' '}\r\n                  </span>{' '}\r\n                  {process.result}\r\n                </ItemDetail>\r\n              );\r\n            })}\r\n          </ContentDetail>\r\n        )}\r\n\r\n        {/* <Btn onClick={handlShowDetail}>Detail</Btn> */}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'JpwolyCpw',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 7,\r\n  processes: [],\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const ceasarSlice = createSlice({\r\n  name: 'ceasar',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n      state.processes = initialState.processes;\r\n      state.actionType = '';\r\n    },\r\n    increaseKey(state) {\r\n      state.key += 1;\r\n    },\r\n    decreaseKey(state) {\r\n      state.key -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, increaseKey, decreaseKey, getLoading } =\r\n  ceasarSlice.actions;\r\n\r\nexport const selectCeasar = (state) => state.ceasar;\r\n\r\nexport default ceasarSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport { decreaseKey, getData, increaseKey, selectCeasar } from './ceasarSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const increase = () => {\r\n    dispatch(increaseKey());\r\n  };\r\n\r\n  const decrease = () => {\r\n    dispatch(decreaseKey());\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        console.log(value);\r\n        getKey(25);\r\n      } else {\r\n        getKey(value);\r\n      }\r\n    } else {\r\n      getKey('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardCounter\r\n      label={t('key')}\r\n      inputValue={data.key}\r\n      handleCountChange={handleCountChange}\r\n      increase={increase}\r\n      decrease={decrease}\r\n      min={0}\r\n      max={25}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport Detail from './Detail';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport { getData, getLoading, resetData, selectCeasar } from './ceasarSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Ceasar = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/ceasar/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'encode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/ceasar/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'decode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('ceasar')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <Detail\r\n        keys={data.key}\r\n        text={data.plaintext}\r\n        processes={data.processes}\r\n        actionType={data.actionType}\r\n      />\r\n      <CardDescription\r\n        cipher={t('ceasar')}\r\n        desc={t('ceasar_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Ceasar;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: '133457799BBCDFF0',\r\n  ciphertext: '0123456789ABCDEF',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '133457799BBCDFF0',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const desSlice = createSlice({\r\n  name: 'des',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = desSlice.actions;\r\n\r\nexport const selectDes = (state) => state.des;\r\n\r\nexport default desSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectDes } from './desSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectDes);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^a-fA-F0-9]/gi, ''));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">{t('key')}</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter your keys...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getData, getLoading, resetData, selectDes } from './desSlice';\r\n\r\nconst Des = () => {\r\n  const data = useSelector(selectDes);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value.replace(/[^a-fA-F0-9]/gi, '');\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/des/encode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/des/decode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('des')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('des')}\r\n        desc={t('des_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Data_Encryption_Standard\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Des;\r\n","import styled from 'styled-components';\r\nimport { Btn, TransformOutPut } from '../../components/Card/CardStyles';\r\n\r\nexport const CounterWrap = styled.div`\r\n  padding-bottom: 2rem;\r\n  & > div {\r\n    padding-bottom: 0.4rem;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n\r\n    @media only screen and (min-width: 1200px) {\r\n      padding-top: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BtnLarge = styled(Btn)`\r\n  max-width: 12.6rem;\r\n  padding: 0 2rem;\r\n  width: 12.6rem;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0;\r\n    width: 11.6rem;\r\n  }\r\n`;\r\n\r\nexport const TransformInput = styled(TransformOutPut)`\r\n  & > div {\r\n    border-right: none;\r\n    padding: 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  ul {\r\n    left: -1.8rem;\r\n    width: calc(100% + 3.6rem);\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    & > div {\r\n      padding: 2rem 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    & > div {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n\r\n    ul {\r\n      left: -3.8rem;\r\n      width: calc(100% + 7.6rem);\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & > div {\r\n      padding: 2rem 1.8rem;\r\n    }\r\n  }\r\n`;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport { ContainerDetail, ContentDetail } from '../Utils';\r\n\r\nconst Detail = ({ processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const handlShowDetail = () => {\r\n    const contentEl = content.current;\r\n    const containerEl = container.current;\r\n    if (contentEl) {\r\n      const heightContent = contentEl.getBoundingClientRect().height;\r\n\r\n      if (show) {\r\n        containerEl.style.height = `46px`;\r\n        setShow(false);\r\n      } else {\r\n        containerEl.style.height = `${heightContent + 46 + 20}px`;\r\n        setShow(true);\r\n      }\r\n    } else {\r\n      containerEl.style.height = `46px`;\r\n      setShow(false);\r\n    }\r\n  };\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={handlShowDetail}>{show ? t('hide') : t('detail')}</Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType !== 'decode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: C<sub>1</sub> = a<sup>k</sup> mod p - C\r\n                  <sub>2</sub> = k * M mod p\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('params')}: p = {processes.p}; a = {processes.a}; x ={' '}\r\n                  {processes.x}; k = {processes.k}\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{processes.plaintext}\"\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  y = a<sup>x</sup> mod p = {processes.a}\r\n                  <sup>{processes.x}</sup> mod {processes.p} = {processes.y}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  k = y<sup>k</sup> mod p = {processes.y}\r\n                  <sup>{processes.k}</sup> mod {processes.p} = {processes.key}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  C<sub>1</sub> = a<sup>k</sup> mod p = {processes.a}\r\n                  <sup>{processes.k}</sup> mod {processes.p} = {processes.c1}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  C<sub>2</sub> = k * M mod p = {processes.key} *{' '}\r\n                  {processes.plaintext} mod {processes.p} = {processes.c2}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  C = ( C<sub>1</sub>, C<sub>2</sub> ) = ( {processes.c1},{' '}\r\n                  {processes.c2} )\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: M = C<sub>2</sub> * k mod p\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('params')}: p = {processes.p}; x = {processes.x}; c1 ={' '}\r\n                  {processes.c1}; c2 = {processes.c2}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  k = C<sub>1</sub>\r\n                  <sup>x</sup> mod p = {processes.c1}\r\n                  <sup>{processes.x}</sup> mod {processes.p} = {processes.key}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  M = C<sub>2</sub> * k mod p = {processes.c2} *{' '}\r\n                  {processes.reverseKey} mod {processes.p} ={' '}\r\n                  {processes.ciphertext} {'  '} ( k<sup>-1</sup> ={' '}\r\n                  {processes.reverseKey} )\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n          </ContentDetail>\r\n        )}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n\r\n// Styled\r\n\r\nexport const ItemDetail = styled.li`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: '3',\r\n  ciphertext: '23',\r\n  p: 97,\r\n  a: 5,\r\n  x: 58,\r\n  k: 36,\r\n  processes: [],\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const elgamalSlice = createSlice({\r\n  name: 'elgamal',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.p = action.payload.p;\r\n      state.a = action.payload.a;\r\n      state.x = action.payload.x;\r\n      state.k = action.payload.k;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.p = initialState.p;\r\n      state.a = initialState.a;\r\n      state.x = initialState.x;\r\n      state.k = initialState.k;\r\n      state.processes = initialState.processes;\r\n      state.actionType = '';\r\n    },\r\n    increaseP(state) {\r\n      state.p += 1;\r\n    },\r\n    decreaseP(state) {\r\n      state.p -= 1;\r\n    },\r\n    increaseA(state) {\r\n      state.a += 1;\r\n    },\r\n    decreaseA(state) {\r\n      state.a -= 1;\r\n    },\r\n    increaseX(state) {\r\n      state.x += 1;\r\n    },\r\n    decreaseX(state) {\r\n      state.x -= 1;\r\n    },\r\n    increaseK(state) {\r\n      state.k += 1;\r\n    },\r\n    decreaseK(state) {\r\n      state.k -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseP,\r\n  decreaseP,\r\n  increaseA,\r\n  decreaseA,\r\n  increaseX,\r\n  decreaseX,\r\n  increaseK,\r\n  decreaseK,\r\n  getLoading,\r\n} = elgamalSlice.actions;\r\n\r\nexport const selectElgamal = (state) => state.elgamal;\r\n\r\nexport default elgamalSlice.reducer;\r\n","import styled from 'styled-components';\r\nimport { BtnLarge } from '../modulo/ModuloStyles';\r\n\r\nexport const BtnLargeActive = styled(BtnLarge)`\r\n  ${(prop) => (prop.current ? 'box-shadow: 0 0 1rem 0 #4db6ac;' : '')};\r\n  background-color: ${(prop) =>\r\n    prop.current ? 'rgb(34, 150, 138)' : '#4db6ac'};\r\n`;\r\n","import bigInt from 'big-integer';\r\n// import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport {\r\n  Btns,\r\n  Container as CardContainer,\r\n  Content,\r\n  OutputText,\r\n  Title,\r\n} from '../../components/Card/CardStyles';\r\nimport { CounterWrap } from '../affine/AffineStyles';\r\nimport { BtnLarge } from '../modulo/ModuloStyles';\r\nimport { Container, Wrap } from '../Utils';\r\nimport Detail from './Detail';\r\nimport {\r\n  decreaseA,\r\n  decreaseK,\r\n  decreaseP,\r\n  decreaseX,\r\n  getData,\r\n  increaseA,\r\n  increaseK,\r\n  increaseP,\r\n  increaseX,\r\n  resetData,\r\n  // getLoading,\r\n  selectElgamal,\r\n} from './elgamalSlice';\r\nimport { BtnLargeActive } from './elgamalSlytes';\r\n\r\nconst ElGamal = () => {\r\n  const { t } = useTranslation();\r\n  const data = useSelector(selectElgamal);\r\n  const dispatch = useDispatch();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getActionType = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        actionType: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getParams = (e, params) => {\r\n    const value = e.target.value ? parseInt(e.target.value) : '';\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        [params]: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = () => {\r\n    // encode\r\n    const { p, k, a, x, plaintext } = data;\r\n    const intPlaintext = parseInt(plaintext);\r\n    const y = Number(bigInt(a).pow(x).mod(p));\r\n    const key = Number(bigInt(y).pow(k).mod(p));\r\n    const c1 = Number(bigInt(a).pow(k).mod(p));\r\n    const c2 = Number(bigInt(key).multiply(intPlaintext).mod(p));\r\n    const ciphertext = c1 + ' ' + c2;\r\n    const processes = { p, k, a, x, plaintext, y, key, c1, c2, ciphertext };\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType: 'encode',\r\n      }),\r\n    );\r\n  };\r\n\r\n  const decode = () => {\r\n    // a as c1, k as c2\r\n    const { p, x, a, k } = data;\r\n    const key = Number(bigInt(a).pow(x).mod(p));\r\n    const reverseKey = Number(bigInt(key).modInv(p));\r\n    const ciphertext = Number(bigInt(k).multiply(reverseKey).mod(p));\r\n    const processes = { p, x, c1: a, c2: k, key, reverseKey, ciphertext };\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const calculate = () => {\r\n    if (data.actionType === 'decode') {\r\n      return decode();\r\n    } else {\r\n      return encode();\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        {data.actionType !== 'decode' && (\r\n          <CardInput\r\n            title={t('input')}\r\n            titleAlign={false}\r\n            plaintext={data.plaintext}\r\n            getPlaintext={getPlaintext}\r\n          />\r\n        )}\r\n\r\n        <CardContainer>\r\n          <Title align=\"center\">{t('elgamal')}</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLargeActive\r\n                current={data.actionType === 'decode' ? 0 : 1}\r\n                onClick={() => getActionType('encode')}\r\n              >\r\n                {t('encode')}\r\n              </BtnLargeActive>\r\n              <BtnLargeActive\r\n                current={data.actionType === 'decode' ? 1 : 0}\r\n                onClick={() => getActionType('decode')}\r\n              >\r\n                {t('decode')}\r\n              </BtnLargeActive>\r\n            </Btns>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>{t('cal')}</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label=\"p\"\r\n                inputValue={data.p}\r\n                handleCountChange={(e) => getParams(e, 'p')}\r\n                increase={() => dispatch(increaseP())}\r\n                decrease={() => dispatch(decreaseP())}\r\n              />\r\n              <CardCounter\r\n                label=\"x\"\r\n                inputValue={data.x}\r\n                handleCountChange={(e) => getParams(e, 'x')}\r\n                increase={() => dispatch(increaseX())}\r\n                decrease={() => dispatch(decreaseX())}\r\n              />\r\n              <CardCounter\r\n                label={data.actionType === 'decode' ? 'c1' : 'a'}\r\n                inputValue={data.a}\r\n                handleCountChange={(e) => getParams(e, 'a')}\r\n                increase={() => dispatch(increaseA())}\r\n                decrease={() => dispatch(decreaseA())}\r\n              />\r\n              <CardCounter\r\n                label={data.actionType === 'decode' ? 'c2' : 'k'}\r\n                inputValue={data.k}\r\n                handleCountChange={(e) => getParams(e, 'k')}\r\n                increase={() => dispatch(increaseK())}\r\n                decrease={() => dispatch(decreaseK())}\r\n              />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>{t('output')}</Title>\r\n          <Content>\r\n            <OutputText>{data.ciphertext}</OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <Detail processes={data.processes} actionType={data.actionType} />\r\n      <CardDescription\r\n        cipher={t('elgamal')}\r\n        desc={t('elgamal_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Modular_multiplicative_inverse\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ElGamal;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport styled from 'styled-components';\r\nimport { ContainerDetail, ContentDetail } from '../Utils';\r\n\r\nconst Detail = ({ keys, text, processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const handlShowDetail = () => {\r\n    const contentEl = content.current;\r\n    const containerEl = container.current;\r\n    if (contentEl) {\r\n      const heightContent = contentEl.getBoundingClientRect().height;\r\n\r\n      if (show) {\r\n        containerEl.style.height = `46px`;\r\n        setShow(false);\r\n      } else {\r\n        containerEl.style.height = `${heightContent + 46 + 20}px`;\r\n        setShow(true);\r\n      }\r\n    } else {\r\n      containerEl.style.height = `46px`;\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={handlShowDetail}>{show ? t('hide') : t('detail')}</Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType === 'encode' ? (\r\n              <>\r\n                <ItemDetail>{t('encode_func')}: C = P * k</ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: P = C * k<sup>-1</sup>\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('decoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n\r\n            <ItemDetail level=\"second\">\r\n              {actionType === 'encode' ? 'P' : 'C'} =\r\n              {processes.matrix_chars.map((item, index) => {\r\n                return (\r\n                  <SmallBlock key={index} type=\"double\">\r\n                    [ {item[0]} {item[1]} ]\r\n                  </SmallBlock>\r\n                );\r\n              })}\r\n              =\r\n              {processes.matrix_chars_as_int.map((item, index) => {\r\n                return (\r\n                  <SmallBlock key={index} type=\"triple\">\r\n                    [{item[0]} {item[1]}]\r\n                  </SmallBlock>\r\n                );\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              det(k) = {keys.a} * {keys.d} - {keys.b} * {keys.c} ={' '}\r\n              {keys.a * keys.d - keys.b * keys.c}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              1 / det(k) = {processes.inverse_det}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              Cof(k) = [ [ {processes.reverse_key[0][0][0]}{' '}\r\n              {processes.reverse_key[0][0][1]} ] [{' '}\r\n              {processes.reverse_key[0][1][0]} {processes.reverse_key[0][1][1]}{' '}\r\n              ] ] = [ [ {processes.reverse_key[1][0][0]}{' '}\r\n              {processes.reverse_key[1][0][1]} ] [{' '}\r\n              {processes.reverse_key[1][1][0]} {processes.reverse_key[1][1][1]}{' '}\r\n              ] ]\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              Cof(k)<sup>-1</sup> = [ [ {processes.reverse_key[2][0][0]}{' '}\r\n              {processes.reverse_key[2][0][1]} ] [{' '}\r\n              {processes.reverse_key[2][1][0]} {processes.reverse_key[2][1][1]}{' '}\r\n              ] ]\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              k<sup>-1</sup> = {processes.inverse_det} * [ [{' '}\r\n              {processes.reverse_key[2][0][0]} {processes.reverse_key[2][0][1]}{' '}\r\n              ] [ {processes.reverse_key[2][1][0]}{' '}\r\n              {processes.reverse_key[2][1][1]} ] ] = [ [{' '}\r\n              {processes.reverse_key[3][0][0]} {processes.reverse_key[3][0][1]}{' '}\r\n              ] [ {processes.reverse_key[3][1][0]}{' '}\r\n              {processes.reverse_key[3][1][1]} ] ]\r\n            </ItemDetail>\r\n            {processes.steps.map((item, index) => {\r\n              return (\r\n                <ItemDetail level=\"second\" key={index}>\r\n                  {actionType === 'encode' ? 'P' : 'C'}\r\n                  <sub>{index + 1}</sub> = [ {item.p[0]} {item.p[1]} ] :{' '}\r\n                  {actionType === 'encode' ? 'C' : 'P'}\r\n                  <sub>{index + 1}</sub> = {actionType === 'encode' ? 'P' : 'C'}\r\n                  <sub>{index + 1}</sub> *{' '}\r\n                  {actionType === 'encode' ? (\r\n                    'k'\r\n                  ) : (\r\n                    <span>\r\n                      k<sup>{-1}</sup>\r\n                    </span>\r\n                  )}{' '}\r\n                  = [ {item.p[0]} {item.p[1]} ] * [ [ {item.k[0][0]}{' '}\r\n                  {item.k[0][1]} ] [ {item.k[1][0]} {item.k[1][1]} ] ] = [{' '}\r\n                  {item.result_as_int[0]} {item.result_as_int[1]} ] = [{' '}\r\n                  {item.result_as_char[0]} {item.result_as_char[1]} ]\r\n                </ItemDetail>\r\n              );\r\n            })}\r\n          </ContentDetail>\r\n        )}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n\r\n// Styled\r\nconst SmallBlock = styled.span`\r\n  display: inline-block;\r\n  min-width: ${(props) =>\r\n    props.type === 'double'\r\n      ? '4.8rem'\r\n      : props.type === 'triple'\r\n      ? '5.2rem'\r\n      : '2.4rem'} !important;\r\n  text-align: center;\r\n  width: ${(props) =>\r\n    props.type === 'double'\r\n      ? '4.8rem'\r\n      : props.type === 'triple'\r\n      ? '5.2rem'\r\n      : '2.4rem'};\r\n\r\n  & > span {\r\n    display: inline-block;\r\n    min-width: 2.4rem;\r\n    width: 2.4rem;\r\n  }\r\n`;\r\n\r\nexport const ItemDetail = styled.li`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'WuhcutBzzi',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: { a: 3, b: 3, c: 2, d: 5 },\r\n  processes: {},\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const hillSlice = createSlice({\r\n  name: 'hill',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n      state.processes = initialState.processes;\r\n      state.actionType = initialState.actionType;\r\n    },\r\n    increaseA(state) {\r\n      state.key.a += 1;\r\n    },\r\n    increaseB(state) {\r\n      state.key.b += 1;\r\n    },\r\n    increaseC(state) {\r\n      state.key.c += 1;\r\n    },\r\n    increaseD(state) {\r\n      state.key.d += 1;\r\n    },\r\n    decreaseA(state) {\r\n      state.key.a -= 1;\r\n    },\r\n    decreaseB(state) {\r\n      state.key.b -= 1;\r\n    },\r\n    decreaseC(state) {\r\n      state.key.c -= 1;\r\n    },\r\n    decreaseD(state) {\r\n      state.key.d -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseA,\r\n  decreaseA,\r\n  increaseB,\r\n  decreaseB,\r\n  increaseC,\r\n  decreaseC,\r\n  increaseD,\r\n  decreaseD,\r\n  getLoading,\r\n} = hillSlice.actions;\r\n\r\nexport const selectHill = (state) => state.hill;\r\n\r\nexport default hillSlice.reducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport { CounterWrap } from '../affine/AffineStyles';\r\nimport {\r\n  decreaseA,\r\n  decreaseB,\r\n  decreaseC,\r\n  decreaseD,\r\n  getData,\r\n  increaseA,\r\n  increaseB,\r\n  increaseC,\r\n  increaseD,\r\n  selectHill,\r\n} from './hillSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectHill);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e, field) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        getKey({ ...data.key, [field]: 25 });\r\n      } else {\r\n        getKey({ ...data.key, [field]: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.key, [field]: '' });\r\n    }\r\n  };\r\n\r\n  const handleACountChange = (e) => {\r\n    handleCountChange(e, 'a');\r\n  };\r\n\r\n  const handleBCountChange = (e) => {\r\n    handleCountChange(e, 'b');\r\n  };\r\n\r\n  const handleCCountChange = (e) => {\r\n    handleCountChange(e, 'c');\r\n  };\r\n\r\n  const handleDCountChange = (e) => {\r\n    handleCountChange(e, 'd');\r\n  };\r\n\r\n  const increaseACounter = () => {\r\n    dispatch(increaseA());\r\n  };\r\n\r\n  const decreaseACounter = () => {\r\n    dispatch(decreaseA());\r\n  };\r\n\r\n  const increaseBCounter = () => {\r\n    dispatch(increaseB());\r\n  };\r\n\r\n  const decreaseBCounter = () => {\r\n    dispatch(decreaseB());\r\n  };\r\n\r\n  const increaseCCounter = () => {\r\n    dispatch(increaseC());\r\n  };\r\n\r\n  const decreaseCCounter = () => {\r\n    dispatch(decreaseC());\r\n  };\r\n\r\n  const increaseDCounter = () => {\r\n    dispatch(increaseD());\r\n  };\r\n\r\n  const decreaseDCounter = () => {\r\n    dispatch(decreaseD());\r\n  };\r\n\r\n  return (\r\n    <CounterWrap>\r\n      <CardCounter\r\n        label=\"INDEX / 1 - 1\"\r\n        inputValue={data.key.a}\r\n        handleCountChange={handleACountChange}\r\n        increase={increaseACounter}\r\n        decrease={decreaseACounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n      <CardCounter\r\n        label=\"INDEX / 1 - 2\"\r\n        inputValue={data.key.b}\r\n        handleCountChange={handleBCountChange}\r\n        increase={increaseBCounter}\r\n        decrease={decreaseBCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n      <CardCounter\r\n        label=\"INDEX / 2 - 1\"\r\n        inputValue={data.key.c}\r\n        handleCountChange={handleCCountChange}\r\n        increase={increaseCCounter}\r\n        decrease={decreaseCCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n      <CardCounter\r\n        label=\"INDEX / 2 - 2\"\r\n        inputValue={data.key.d}\r\n        handleCountChange={handleDCountChange}\r\n        increase={increaseDCounter}\r\n        decrease={decreaseDCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n    </CounterWrap>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport Detail from './Detail';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getData, getLoading, resetData, selectHill } from './hillSlice';\r\n\r\nconst Hill = () => {\r\n  const data = useSelector(selectHill);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const convertKeyToChar = (key) => {\r\n    let chars = '';\r\n\r\n    for (let k in key) {\r\n      chars += String.fromCharCode(65 + key[k]);\r\n    }\r\n    return chars;\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/hill/encode',\r\n        text,\r\n        convertKeyToChar(key),\r\n      );\r\n\r\n      // check error\r\n      if (ciphertext === 'error_1') {\r\n        getCiphertext(t('hill_err_1'));\r\n      } else if (ciphertext === 'error_2') {\r\n        getCiphertext(t('hill_err_2'));\r\n      } else {\r\n        getDataOnSubmit(ciphertext, processes, 'encode');\r\n      }\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    console.log(convertKeyToChar(key));\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/hill/decode',\r\n        text,\r\n        convertKeyToChar(key),\r\n      );\r\n\r\n      // check error\r\n      if (ciphertext === 'error_1') {\r\n        getCiphertext(t('hill_err_1'));\r\n      } else if (ciphertext === 'error_2') {\r\n        getCiphertext(t('hill_err_2'));\r\n      } else {\r\n        getDataOnSubmit(ciphertext, processes, 'decode');\r\n      }\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('hill')}\r\n          titleAlign=\"center\"\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          keys={data.key}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <Detail\r\n        keys={data.key}\r\n        text={data.plaintext}\r\n        processes={data.processes}\r\n        actionType={data.actionType}\r\n      />\r\n      <CardDescription\r\n        cipher={t('hill')}\r\n        desc={t('hill_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Hill_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Hill;\r\n","import { useState } from 'react';\r\nimport bigInt from 'big-integer';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport {\r\n  Btns,\r\n  Container as CardContainer,\r\n  Content,\r\n  OutputText,\r\n  Title,\r\n} from '../../components/Card/CardStyles';\r\nimport { BtnLarge, CounterWrap } from '../modulo/ModuloStyles';\r\nimport { Container, Wrap } from '../Utils';\r\n\r\nconst ModularInverse = () => {\r\n  const [output, setOutput] = useState(9);\r\n  const [input, setInput] = useState({\r\n    number: 5,\r\n    modulo: 11,\r\n  });\r\n  const { t } = useTranslation();\r\n\r\n  const getModularInverse = () => {\r\n    try {\r\n      const result = Number(bigInt(input.number).modInv(input.modulo));\r\n      if (result < 0) {\r\n        return result + 26;\r\n      } else {\r\n        return result;\r\n      }\r\n    } catch (error) {\r\n      return t('not_found');\r\n    }\r\n  };\r\n\r\n  const calculate = () => {\r\n    setOutput(getModularInverse());\r\n  };\r\n\r\n  const handleCountChange = (value, field) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: parseInt(value) });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const inOrDecrease = (value, field, number) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: value + number });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    handleCountChange(e.target.value, 'number');\r\n  };\r\n\r\n  const increaseNumber = () => {\r\n    const value = input.number;\r\n    inOrDecrease(value, 'number', 1);\r\n  };\r\n\r\n  const decreaseNumber = () => {\r\n    const value = input.number;\r\n    inOrDecrease(value, 'number', -1);\r\n  };\r\n\r\n  const handleModuloChange = (e) => {\r\n    handleCountChange(e.target.value, 'modulo');\r\n  };\r\n\r\n  const increaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', 1);\r\n  };\r\n\r\n  const decreaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', -1);\r\n  };\r\n\r\n  const reset = () => {\r\n    setInput({\r\n      number: 5,\r\n      modulo: 11,\r\n    });\r\n    setOutput(9);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardContainer>\r\n          <Title>{t('input_number')}</Title>\r\n          <Content>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label={t('type_1')}\r\n                inputValue={input.number}\r\n                handleCountChange={handleNumberChange}\r\n                increase={increaseNumber}\r\n                decrease={decreaseNumber}\r\n              />\r\n              <CardCounter\r\n                label=\"modulo\"\r\n                inputValue={input.modulo}\r\n                handleCountChange={handleModuloChange}\r\n                increase={increaseModulo}\r\n                decrease={decreaseModulo}\r\n              />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer style={{ height: '29.5rem' }}>\r\n          <Title align=\"center\">{t('mod_inverse')}</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>{t('cal')}</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>{t('output_number')}</Title>\r\n          <Content>\r\n            <OutputText>{output}</OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('mod_inverse')}\r\n        desc={t('mod_inverse_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Modular_multiplicative_inverse\"\r\n        utils={t('oper_mod_inverse')}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ModularInverse;\r\n","import bigInt from 'big-integer';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport {\r\n  Btns,\r\n  CaseStrategy,\r\n  Container as CardContainer,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  OutputText,\r\n  Title,\r\n  WrapDropdown,\r\n} from '../../components/Card/CardStyles';\r\nimport { Container, getCurrentCase, getCurrentIndex, Wrap } from '../Utils';\r\nimport { BtnLarge, CounterWrap, TransformInput } from './ModuloStyles';\r\n\r\nconst Modulo = () => {\r\n  const [actions, setActions] = useState([\r\n    { value: 'number', active: true },\r\n    { value: 'power', active: false },\r\n  ]);\r\n  const currentAction = getCurrentCase(actions);\r\n  const currentIndex = getCurrentIndex(actions);\r\n  const [showActions, setShowActions] = useState(false);\r\n  const [output, setOutput] = useState(5);\r\n  const [input, setInput] = useState({\r\n    base: 5,\r\n    exponent: 1,\r\n    modulo: 11,\r\n  });\r\n  const { t } = useTranslation();\r\n\r\n  const handleSelectAction = (e) => {\r\n    setShowActions(false);\r\n    const value = e.target.id;\r\n    setActions((actions) => {\r\n      return actions.map((action) => {\r\n        if (action.value === value) {\r\n          return { ...action, active: true };\r\n        } else {\r\n          return { ...action, active: false };\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const calculate = () => {\r\n    let result = 0;\r\n    if (currentAction === 'number') {\r\n      result = Number(bigInt(input.base).mod(input.modulo));\r\n      if (result < 0) {\r\n        result += 26;\r\n      }\r\n    } else {\r\n      result = Number(bigInt(input.base).pow(input.exponent).mod(input.modulo));\r\n      if (result < 0) {\r\n        result += 26;\r\n      }\r\n    }\r\n    setOutput(result);\r\n  };\r\n\r\n  const handleCountChange = (value, field) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: parseInt(value) });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const inOrDecrease = (value, field, number) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: value + number });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    handleCountChange(e.target.value, 'base');\r\n  };\r\n\r\n  const increaseNumber = () => {\r\n    const value = input.base;\r\n    inOrDecrease(value, 'base', 1);\r\n  };\r\n\r\n  const decreaseNumber = () => {\r\n    const value = input.base;\r\n    inOrDecrease(value, 'base', -1);\r\n  };\r\n\r\n  const handlePowerChange = (e) => {\r\n    handleCountChange(e.target.value, 'exponent');\r\n  };\r\n\r\n  const increasePower = () => {\r\n    const value = input.exponent;\r\n    inOrDecrease(value, 'exponent', 1);\r\n  };\r\n\r\n  const decreasePower = () => {\r\n    const value = input.exponent;\r\n    inOrDecrease(value, 'exponent', -1);\r\n  };\r\n\r\n  const handleModuloChange = (e) => {\r\n    handleCountChange(e.target.value, 'modulo');\r\n  };\r\n\r\n  const increaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', 1);\r\n  };\r\n\r\n  const decreaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', -1);\r\n  };\r\n\r\n  const reset = () => {\r\n    setInput({\r\n      base: 5,\r\n      exponent: 1,\r\n      modulo: 11,\r\n    });\r\n    setOutput(5);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardContainer>\r\n          <Title>{t('input_number')}</Title>\r\n          <Content>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label={currentAction === 'number' ? t('type_1') : t('type_3')}\r\n                inputValue={input.base}\r\n                handleCountChange={handleNumberChange}\r\n                increase={increaseNumber}\r\n                decrease={decreaseNumber}\r\n              />\r\n              {currentAction === 'power' && (\r\n                <CardCounter\r\n                  label={t('type_4')}\r\n                  inputValue={input.exponent}\r\n                  handleCountChange={handlePowerChange}\r\n                  increase={increasePower}\r\n                  decrease={decreasePower}\r\n                  min={0}\r\n                />\r\n              )}\r\n              <CardCounter\r\n                label=\"modulo\"\r\n                inputValue={input.modulo}\r\n                handleCountChange={handleModuloChange}\r\n                increase={increaseModulo}\r\n                decrease={decreaseModulo}\r\n              />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer style={{ height: '29.5rem' }}>\r\n          <Title align=\"center\">{t('cal_modulo')}</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>{t('cal')}</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n\r\n            <TransformInput>\r\n              <CaseStrategy>\r\n                <label>{t('type_input')}</label>\r\n                <WrapDropdown>\r\n                  <DropdownButton onClick={() => setShowActions(!showActions)}>\r\n                    {t(`type_${currentIndex}`)}\r\n                  </DropdownButton>\r\n                  {showActions && (\r\n                    <DropdownList>\r\n                      {actions.map((strategy, key) => {\r\n                        return (\r\n                          <li\r\n                            className={strategy.active ? 'active' : ''}\r\n                            key={key}\r\n                            id={strategy.value}\r\n                            onClick={handleSelectAction}\r\n                          >\r\n                            {t(`type_${key + 1}`)}\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </DropdownList>\r\n                  )}\r\n                  <RiArrowDownSFill />\r\n                </WrapDropdown>\r\n              </CaseStrategy>\r\n            </TransformInput>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>{t('output_number')}</Title>\r\n          <Content>\r\n            <OutputText>{output}</OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('oper_modulo')}\r\n        desc={t('modulo_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Modulo_operation\"\r\n        utils={t('cal_modulo')}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Modulo;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'OebxcpReb',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 7,\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const multiplicativeSlice = createSlice({\r\n  name: 'multiplicative',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseKey(state) {\r\n      state.key += 1;\r\n    },\r\n    decreaseKey(state) {\r\n      state.key -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, increaseKey, decreaseKey, getLoading } =\r\n  multiplicativeSlice.actions;\r\n\r\nexport const selectMultiplicative = (state) => state.multiplicative;\r\n\r\nexport default multiplicativeSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport {\r\n  decreaseKey,\r\n  getData,\r\n  increaseKey,\r\n  selectMultiplicative,\r\n} from './multiplicativeSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectMultiplicative);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const increase = () => {\r\n    dispatch(increaseKey());\r\n  };\r\n\r\n  const decrease = () => {\r\n    dispatch(decreaseKey());\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        console.log(value);\r\n        getKey(25);\r\n      } else {\r\n        getKey(value);\r\n      }\r\n    } else {\r\n      getKey('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardCounter\r\n      label={t('key')}\r\n      inputValue={data.key}\r\n      handleCountChange={handleCountChange}\r\n      increase={increase}\r\n      decrease={decrease}\r\n      min={0}\r\n      max={25}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport {\r\n  getData,\r\n  getLoading,\r\n  resetData,\r\n  selectMultiplicative,\r\n} from './multiplicativeSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Multiplicative = () => {\r\n  const data = useSelector(selectMultiplicative);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/multiplicative/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/multiplicative/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('multiplicative')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('multiplicative')}\r\n        desc={t('multiplicative_desc')}\r\n        link=\"https://www.geeksforgeeks.org/traditional-symmetric-ciphers/#:~:text=Multiplicative%20Cipher%20%E2%80%93,obtain%20back%20the%20plain%2Dtext.\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Multiplicative;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'piVrehpiC',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const reverseSlice = createSlice({\r\n  name: 'reverse',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = reverseSlice.actions;\r\n\r\nexport const selectReverse = (state) => state.reverse;\r\n\r\nexport default reverseSlice.reducer;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport { getData, getLoading, resetData, selectReverse } from './reverseSlice';\r\n\r\nconst Reverse = () => {\r\n  const data = useSelector(selectReverse);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/encode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const decode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/decode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('reverse')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('reverse')}\r\n        desc={t('reverse_desc')}\r\n        link=\"https://www.tutorialspoint.com/cryptography_with_python/cryptography_with_python_reverse_cipher.htm\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Reverse;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: block;\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  input {\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nexport const State = styled.div`\r\n  label {\r\n    display: inline-block;\r\n    color: ${({ theme }) => theme.text};\r\n    cursor: pointer;\r\n    font-size: 1.4rem;\r\n    font-weight: 400;\r\n    position: initial;\r\n    text-indent: 2.4rem;\r\n    vertical-align: bottom;\r\n\r\n    &:before,\r\n    &:after {\r\n      background-color: transparent;\r\n      border: 0.1rem solid transparent;\r\n      border-radius: 50%;\r\n      content: '';\r\n      height: 1.4rem;\r\n      position: absolute;\r\n      left: 0;\r\n      top: 1px;\r\n      width: 1.4rem;\r\n    }\r\n\r\n    &:before {\r\n      border-color: ${(props) => (props.active ? '#26a69a' : '#797f86')};\r\n    }\r\n\r\n    &:after {\r\n      background-color: #26a69a;\r\n      transition: transform 0.25s ease;\r\n      transform: ${(props) => (props.active ? 'scale(0.45)' : 'scale(0)')};\r\n    }\r\n  }\r\n`;\r\n","import { Container, State, Wrap } from './RadioBoxStyles';\r\n\r\nconst RadioBox = ({ label, name, value, current, handleChange }) => {\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <input\r\n          type=\"radio\"\r\n          name={name}\r\n          id={value}\r\n          value={value}\r\n          checked={current === value ? true : false}\r\n          onChange={(e) => handleChange(e.target.id)}\r\n        />\r\n        <State active={current === value ? 1 : 0}>\r\n          <label htmlFor={value}>{label}</label>\r\n        </State>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RadioBox;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'PvcureIvc',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '13',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const rot13Slice = createSlice({\r\n  name: 'rot13',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = rot13Slice.actions;\r\n\r\nexport const selectRot13 = (state) => state.rot13;\r\n\r\nexport default rot13Slice.reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  border-bottom: 0.1rem solid ${({ theme }) => theme.border};\r\n  padding: 1rem 1.8rem;\r\n\r\n  & > label {\r\n    color: #4db6ac;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    position: relative;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem 2rem 1rem 3.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1.6rem 1.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 2rem 2rem 1rem 3.8rem;\r\n  }\r\n`;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RadioBox from '../../components/RadioBox';\r\nimport { getData, selectRot13 } from './rot13Slice';\r\nimport { Container } from './Rot13Styles';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectRot13);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <label>{t('variant')}</label>\r\n      <RadioBox\r\n        label=\"ROT5 (0-9)\"\r\n        name=\"variant\"\r\n        value=\"5\"\r\n        current={data.key}\r\n        handleChange={getKey}\r\n      />\r\n      <RadioBox\r\n        label=\"ROT13 (A-Z, a-z)\"\r\n        name=\"variant\"\r\n        value=\"13\"\r\n        current={data.key}\r\n        handleChange={getKey}\r\n      />\r\n      <RadioBox\r\n        label=\"ROT18 (0-9, A-Z, a-z)\"\r\n        name=\"variant\"\r\n        value=\"18\"\r\n        current={data.key}\r\n        handleChange={getKey}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getData, getLoading, resetData, selectRot13 } from './rot13Slice';\r\n\r\nconst Rot13 = () => {\r\n  const data = useSelector(selectRot13);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/rot13/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/rot13/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('rot13')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('rot13')}\r\n        desc={t('rot13_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/ROT13\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Rot13;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport { ContainerDetail, ContentDetail } from '../Utils';\r\n\r\nconst Detail = ({ processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const handlShowDetail = () => {\r\n    const contentEl = content.current;\r\n    const containerEl = container.current;\r\n    if (contentEl) {\r\n      const heightContent = contentEl.getBoundingClientRect().height;\r\n\r\n      if (show) {\r\n        containerEl.style.height = `46px`;\r\n        setShow(false);\r\n      } else {\r\n        containerEl.style.height = `${heightContent + 46 + 20}px`;\r\n        setShow(true);\r\n      }\r\n    } else {\r\n      containerEl.style.height = `46px`;\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={handlShowDetail}>{show ? t('hide') : t('detail')}</Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType !== 'decode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: C = M<sup>e</sup> mod N\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: M = C<sup>d</sup> mod N\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n            <ItemDetail>\r\n              {t('params')}: p = {processes.p}; q = {processes.q};{' '}\r\n              {processes.d === 1 ? 'e' : 'd'} ={' '}\r\n              {processes.d === 1 ? processes.e : processes.d}\r\n            </ItemDetail>\r\n            <ItemDetail>\r\n              {t('encoding')}: \"{processes.plaintext}\"\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              n = p * q = {processes.p} * {processes.q} = {processes.n}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              φ(N) = φ( {processes.p}, {processes.q} ) = {processes.p - 1} *{' '}\r\n              {processes.q - 1} = {(processes.p - 1) * (processes.q - 1)}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              ( {processes.d === 1 ? 'e' : 'd'}, φ(N) ) = ({' '}\r\n              {processes.d === 1 ? processes.e : processes.d}, {processes.phi})\r\n              = 1; {processes.d === 1 ? 'd' : 'e'} ={' '}\r\n              {processes.d === 1 ? processes.newD : processes.newE}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              K<sub>p</sub> = ( e, N ) = ( {processes.newE}, {processes.n} )\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              K<sub>s</sub> = K<sub>p</sub>\r\n              <sup>-1</sup> = ( d, p, q ) = ( {processes.newD}, {processes.p},{' '}\r\n              {processes.q} )\r\n            </ItemDetail>\r\n            {processes.intPlaintext.map((num, index) => {\r\n              return (\r\n                <ItemDetail key={index} level=\"second\">\r\n                  {actionType === 'encode' ? 'C' : 'M'} ={' '}\r\n                  {actionType === 'encode' ? 'M' : 'C'}\r\n                  <sup>e</sup> mod N = {num}\r\n                  <sup>\r\n                    {actionType === 'encode' ? processes.newE : processes.newD}\r\n                  </sup>{' '}\r\n                  mod {processes.n} = {processes.ciphertext.split(' ')[index]} ={' '}\r\n                  {processes.chars[index]}\r\n                </ItemDetail>\r\n              );\r\n            })}\r\n          </ContentDetail>\r\n        )}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n\r\n// Styled\r\n\r\nexport const ItemDetail = styled.li`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { BtnLarge } from '../modulo/ModuloStyles';\r\nimport { Counter as CounterCustom } from '../../components/Card/CardStyles';\r\n\r\nexport const BtnLargeActive = styled(BtnLarge)`\r\n  ${(prop) => (prop.current ? 'box-shadow: 0 0 1rem 0 #4db6ac;' : '')};\r\n  background-color: ${(prop) =>\r\n    prop.current ? 'rgb(34, 150, 138)' : '#4db6ac'};\r\n`;\r\n\r\nexport const Counter = styled(CounterCustom)`\r\n  border-right: 0 !important;\r\n  width: 100% !important;\r\n  label {\r\n    button {\r\n      position: initial;\r\n      &:first-child {\r\n        margin-right: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: '26',\r\n  ciphertext: '23',\r\n  p: 11,\r\n  q: 47,\r\n  e: 3,\r\n  d: 1,\r\n  processes: [],\r\n  actionType: '',\r\n};\r\n\r\nexport const rsaSlice = createSlice({\r\n  name: 'rsa',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.p = action.payload.p;\r\n      state.q = action.payload.q;\r\n      state.e = action.payload.e;\r\n      state.d = action.payload.d;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.p = initialState.p;\r\n      state.q = initialState.q;\r\n      state.e = initialState.e;\r\n      state.d = initialState.d;\r\n      state.processes = initialState.processes;\r\n      state.actionType = '';\r\n    },\r\n    increaseP(state) {\r\n      state.p += 1;\r\n    },\r\n    decreaseP(state) {\r\n      state.p -= 1;\r\n    },\r\n    increaseQ(state) {\r\n      state.q += 1;\r\n    },\r\n    decreaseQ(state) {\r\n      state.q -= 1;\r\n    },\r\n    increaseE(state) {\r\n      state.e += 1;\r\n    },\r\n    decreaseE(state) {\r\n      state.e -= 1;\r\n    },\r\n    increaseD(state) {\r\n      state.d += 1;\r\n    },\r\n    decreaseD(state) {\r\n      state.d -= 1;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseP,\r\n  decreaseP,\r\n  increaseQ,\r\n  decreaseQ,\r\n  increaseE,\r\n  decreaseE,\r\n  increaseD,\r\n  decreaseD,\r\n} = rsaSlice.actions;\r\n\r\nexport const selectRsa = (state) => state.rsa;\r\n\r\nexport default rsaSlice.reducer;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CountBtn, InputGroup } from '../../components/Card/CardStyles';\r\nimport { Counter, BtnLargeActive } from './rsaSlytes';\r\nimport {\r\n  decreaseE,\r\n  increaseE,\r\n  decreaseD,\r\n  increaseD,\r\n  selectRsa,\r\n  getData,\r\n} from './rsaSlice';\r\n\r\nconst ExtraInput = ({ getParams }) => {\r\n  const data = useSelector(selectRsa);\r\n  const dispatch = useDispatch();\r\n  const [selectInput, setSelectInput] = useState('e');\r\n\r\n  const selectTypeInput = (curr, param) => {\r\n    setSelectInput(curr);\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        [param]: 1,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectInput === 'e' ? (\r\n        <Counter>\r\n          <div>\r\n            <label htmlFor=\"e\">\r\n              <BtnLargeActive\r\n                current={selectInput === 'e' ? 1 : 0}\r\n                onClick={() => selectTypeInput('e', 'd')}\r\n              >\r\n                e\r\n              </BtnLargeActive>\r\n              <BtnLargeActive\r\n                current={selectInput === 'd' ? 1 : 0}\r\n                onClick={() => selectTypeInput('d', 'e')}\r\n              >\r\n                d\r\n              </BtnLargeActive>\r\n            </label>\r\n\r\n            <InputGroup>\r\n              <CountBtn\r\n                colorDisabled={(theme) => theme.color}\r\n                onClick={() => dispatch(decreaseE())}\r\n              >\r\n                {' '}\r\n                -{' '}\r\n              </CountBtn>\r\n              <input\r\n                type=\"number\"\r\n                value={data.e}\r\n                onChange={(e) => getParams(e, 'e')}\r\n              />\r\n              <CountBtn\r\n                colorDisabled={(theme) => theme.color}\r\n                onClick={() => dispatch(increaseE())}\r\n              >\r\n                {' '}\r\n                +{' '}\r\n              </CountBtn>\r\n            </InputGroup>\r\n          </div>\r\n        </Counter>\r\n      ) : (\r\n        <Counter>\r\n          <div>\r\n            <label htmlFor=\"d\">\r\n              <BtnLargeActive\r\n                current={selectInput === 'e' ? 1 : 0}\r\n                onClick={() => selectTypeInput('e', 'd')}\r\n              >\r\n                e\r\n              </BtnLargeActive>\r\n              <BtnLargeActive\r\n                current={selectInput === 'd' ? 1 : 0}\r\n                onClick={() => selectTypeInput('d', 'e')}\r\n              >\r\n                d\r\n              </BtnLargeActive>\r\n            </label>\r\n\r\n            <InputGroup>\r\n              <CountBtn\r\n                colorDisabled={(theme) => theme.color}\r\n                onClick={() => dispatch(decreaseD())}\r\n              >\r\n                {' '}\r\n                -{' '}\r\n              </CountBtn>\r\n              <input\r\n                type=\"number\"\r\n                value={data.d}\r\n                onChange={(e) => getParams(e, 'd')}\r\n              />\r\n              <CountBtn\r\n                colorDisabled={(theme) => theme.color}\r\n                onClick={() => dispatch(increaseD())}\r\n              >\r\n                {' '}\r\n                +{' '}\r\n              </CountBtn>\r\n            </InputGroup>\r\n          </div>\r\n        </Counter>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import bigInt from 'big-integer';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport {\r\n  Btns,\r\n  Container as CardContainer,\r\n  Content,\r\n  OutputText,\r\n  Title,\r\n} from '../../components/Card/CardStyles';\r\nimport { CounterWrap } from '../affine/AffineStyles';\r\nimport { BtnLarge } from '../modulo/ModuloStyles';\r\nimport { Container, Wrap } from '../Utils';\r\nimport Detail from './Detail';\r\nimport ExtraInput from './ExtraInput';\r\nimport {\r\n  decreaseP,\r\n  decreaseQ,\r\n  getData,\r\n  increaseP,\r\n  increaseQ,\r\n  resetData,\r\n  selectRsa,\r\n} from './rsaSlice';\r\nimport { BtnLargeActive } from './rsaSlytes';\r\n\r\nconst Rsa = () => {\r\n  const { t } = useTranslation();\r\n  const data = useSelector(selectRsa);\r\n  const dispatch = useDispatch();\r\n  const [action, setAction] = useState('encode');\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getParams = (e, params) => {\r\n    const value = e.target.value ? parseInt(e.target.value) : '';\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        [params]: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const calculate = () => {\r\n    const { p, q, e, d, plaintext } = data;\r\n    const n = Number(bigInt(p).multiply(q));\r\n    const phi = Number(bigInt(p - 1).multiply(q - 1));\r\n    let newD = d;\r\n    let newE = e;\r\n\r\n    if (d === 1) {\r\n      try {\r\n        // encode\r\n        newD = Number(bigInt(e).modInv(phi));\r\n      } catch (error) {\r\n        const errorMess = t('error_prime', { a: e, b: phi });\r\n        dispatch(\r\n          getData({\r\n            ...data,\r\n            ciphertext: errorMess,\r\n            actionType: '',\r\n          }),\r\n        );\r\n        return;\r\n      }\r\n    } else {\r\n      // decode\r\n      try {\r\n        newE = Number(bigInt(d).modInv(phi));\r\n      } catch (error) {\r\n        const errorMess = t('error_prime', { a: d, b: phi });\r\n        dispatch(\r\n          getData({\r\n            ...data,\r\n            ciphertext: errorMess,\r\n            actionType: '',\r\n          }),\r\n        );\r\n        return;\r\n      }\r\n    }\r\n    const arrPlaintext = plaintext.split(' ');\r\n    const intPlaintext = [];\r\n    const chars = [];\r\n\r\n    const c = arrPlaintext.map((char) => {\r\n      // 26 length of alphabet\r\n      let number = parseInt(char);\r\n\r\n      // char is letter\r\n      if (char.match(/[a-z]/i)) {\r\n        let charAscii = char.charCodeAt(0);\r\n        if (char === char.toUpperCase()) {\r\n          // A => unicode\r\n          charAscii -= 65;\r\n        } else {\r\n          // a => unicode\r\n          charAscii -= 97;\r\n        }\r\n        number = charAscii;\r\n      }\r\n      intPlaintext.push(number);\r\n\r\n      if (action === 'encode') {\r\n        const result = Number(bigInt(number).pow(newE).mod(n));\r\n        chars.push(String.fromCharCode((result % 26) + 65));\r\n        return result;\r\n      } else {\r\n        const result = Number(bigInt(number).pow(newD).mod(n));\r\n        chars.push(String.fromCharCode((result % 26) + 65));\r\n        return result;\r\n      }\r\n    });\r\n\r\n    const ciphertext = c.join(' ');\r\n    const processes = {\r\n      p,\r\n      q,\r\n      e,\r\n      d,\r\n      newD,\r\n      newE,\r\n      chars,\r\n      n,\r\n      phi,\r\n      plaintext,\r\n      intPlaintext,\r\n      ciphertext,\r\n    };\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType: action,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n\r\n        <CardContainer>\r\n          <Title align=\"center\">{t('rsa')}</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLargeActive\r\n                current={action === 'decode' ? 0 : 1}\r\n                onClick={() => setAction('encode')}\r\n              >\r\n                {t('encode')}\r\n              </BtnLargeActive>\r\n              <BtnLargeActive\r\n                current={action === 'decode' ? 1 : 0}\r\n                onClick={() => setAction('decode')}\r\n              >\r\n                {t('decode')}\r\n              </BtnLargeActive>\r\n            </Btns>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>{t('cal')}</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label=\"p\"\r\n                inputValue={data.p}\r\n                handleCountChange={(e) => getParams(e, 'p')}\r\n                increase={() => dispatch(increaseP())}\r\n                decrease={() => dispatch(decreaseP())}\r\n              />\r\n              <CardCounter\r\n                label=\"q\"\r\n                inputValue={data.q}\r\n                handleCountChange={(e) => getParams(e, 'q')}\r\n                increase={() => dispatch(increaseQ())}\r\n                decrease={() => dispatch(decreaseQ())}\r\n              />\r\n              <ExtraInput getParams={getParams} />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>{t('output')}</Title>\r\n          <Content>\r\n            <OutputText>{data.ciphertext}</OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <Detail processes={data.processes} actionType={data.actionType} />\r\n      <CardDescription\r\n        cipher={t('rsa')}\r\n        desc={t('rsa_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Modular_multiplicative_inverse\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Rsa;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'DofpkgLof',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 'zebrascdfghijklmnopqtuvwxy',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const simpleSubstitutionSlice = createSlice({\r\n  name: 'simpleSubstitution',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } =\r\n  simpleSubstitutionSlice.actions;\r\n\r\nexport const selectSimpleSubstitution = (state) => state.simpleSubstitution;\r\n\r\nexport default simpleSubstitutionSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { GiPerspectiveDiceSixFacesRandom } from 'react-icons/gi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Btn, Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectSimpleSubstitution } from './simpleSubstitutionSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectSimpleSubstitution);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^a-zA-Z]/gi, ''));\r\n  };\r\n\r\n  const randomKey = () => {\r\n    const arr = data.key.split('');\r\n    const result = shuffle(arr).join('');\r\n    getKey(result);\r\n  };\r\n\r\n  const shuffle = (array) => {\r\n    // reference in https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (currentIndex !== 0) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">\r\n            {t('key')}\r\n            <Btn onClick={randomKey}>\r\n              <GiPerspectiveDiceSixFacesRandom />\r\n            </Btn>\r\n          </label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              maxLength={26}\r\n              placeholder=\"Enter 26 alphabet key...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport {\r\n  getData,\r\n  getLoading,\r\n  resetData,\r\n  selectSimpleSubstitution,\r\n} from './simpleSubstitutionSlice';\r\n\r\nconst Transposition = () => {\r\n  const data = useSelector(selectSimpleSubstitution);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/simple-substitution/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/simple-substitution/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('simple_substitution')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('simple_substitution')}\r\n        desc={t('simple_substitution_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Substitution_cipher#Simple_substitution\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Transposition;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'CriVpihpe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '12345',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const transpositionSlice = createSlice({\r\n  name: 'transposition',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = transpositionSlice.actions;\r\n\r\nexport const selectTransposition = (state) => state.transposition;\r\n\r\nexport default transpositionSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectTransposition } from './transpositionSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^1-9]/gi, ''));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">{t('key')}</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter columns number...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport {\r\n  getData,\r\n  getLoading,\r\n  resetData,\r\n  selectTransposition,\r\n} from './transpositionSlice';\r\n\r\nconst Transposition = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('transposition')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('transposition')}\r\n        desc={t('transposition_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Transposition_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Transposition;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport { ContainerDetail, ContentDetail } from '../Utils';\r\n\r\nconst Detail = ({ keys, text, processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n  let keysAsInt = [];\r\n\r\n  if (actionType) {\r\n    keysAsInt = processes['key_as_int'].slice(0, keys.length);\r\n  }\r\n\r\n  const handlShowDetail = () => {\r\n    const contentEl = content.current;\r\n    const containerEl = container.current;\r\n    if (contentEl) {\r\n      const heightContent = contentEl.getBoundingClientRect().height;\r\n\r\n      if (show) {\r\n        containerEl.style.height = `46px`;\r\n        setShow(false);\r\n      } else {\r\n        containerEl.style.height = `${heightContent + 46 + 20}px`;\r\n        setShow(true);\r\n      }\r\n    } else {\r\n      containerEl.style.height = `46px`;\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={handlShowDetail}>{show ? t('hide') : t('detail')}</Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType === 'encode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: E<sub>k</sub>( x ) = ( x<sub>i</sub> + k\r\n                  <sub>i</sub> ) mod 26, i = (1, 2, ..., m)\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: D<sub>k</sub>( x ) = ( x<sub>i</sub> - k\r\n                  <sub>i</sub> ) mod 26, i = (1, 2, ..., m)\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('decoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n            <ItemDetail level=\"second\">\r\n              K ={' '}\r\n              {keysAsInt.map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                return <SmallBlock key={index}>{item}</SmallBlock>;\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              P ={' '}\r\n              {processes['string_as_int'].map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                if ((index + 1) % keys.length === 0) {\r\n                  return (\r\n                    <SmallBlock type=\"double\" key={index}>\r\n                      <span>{item}</span>\r\n                      <span>||</span>\r\n                    </SmallBlock>\r\n                  );\r\n                } else {\r\n                  return <SmallBlock key={index}>{item}</SmallBlock>;\r\n                }\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              K ={' '}\r\n              {processes['key_as_int'].map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                if ((index + 1) % keys.length === 0) {\r\n                  return (\r\n                    <SmallBlock type=\"double\" key={index}>\r\n                      <span>{item}</span>\r\n                      <span>||</span>\r\n                    </SmallBlock>\r\n                  );\r\n                } else {\r\n                  return <SmallBlock key={index}>{item}</SmallBlock>;\r\n                }\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              C ={' '}\r\n              {processes['result_as_int'].map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                if ((index + 1) % keys.length === 0) {\r\n                  return (\r\n                    <SmallBlock type=\"double\" key={index}>\r\n                      <span>{item}</span>\r\n                      <span>||</span>\r\n                    </SmallBlock>\r\n                  );\r\n                } else {\r\n                  return <SmallBlock key={index}>{item}</SmallBlock>;\r\n                }\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              R ={'  '}\r\n              {processes['result_as_char'].map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                if ((index + 1) % keys.length === 0) {\r\n                  return (\r\n                    <SmallBlock type=\"double\" key={index}>\r\n                      <span>{item}</span>\r\n                      <span>||</span>\r\n                    </SmallBlock>\r\n                  );\r\n                } else {\r\n                  return <SmallBlock key={index}>{item}</SmallBlock>;\r\n                }\r\n              })}\r\n            </ItemDetail>\r\n          </ContentDetail>\r\n        )}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n\r\n// Styled\r\nconst SmallBlock = styled.span`\r\n  display: inline-block;\r\n  min-width: ${(props) =>\r\n    props.type === 'double' ? '4.8rem' : '2.4rem'} !important;\r\n  text-align: center;\r\n  width: ${(props) => (props.type === 'double' ? '4.8rem' : '2.4rem')};\r\n\r\n  & > span {\r\n    display: inline-block;\r\n    min-width: 2.4rem;\r\n    width: 2.4rem;\r\n  }\r\n`;\r\n\r\nexport const ItemDetail = styled.li`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'EqeoiiXqe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 'cipher',\r\n  processes: [],\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const vigenereSlice = createSlice({\r\n  name: 'vigenere',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n      state.processes = initialState.processes;\r\n      state.actionType = initialState.actionType;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = vigenereSlice.actions;\r\n\r\nexport const selectVigenere = (state) => state.vigenere;\r\n\r\nexport default vigenereSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectVigenere } from './vigenereSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectVigenere);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^a-zA-Z]/gi, ''));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">{t('key')}</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter your keys...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport Detail from './Detail';\r\nimport ExtraInput from './ExtraInput';\r\nimport {\r\n  getData,\r\n  getLoading,\r\n  resetData,\r\n  selectVigenere,\r\n} from './vigenereSlice';\r\n\r\nconst Vigenere = () => {\r\n  const data = useSelector(selectVigenere);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/vigenere/encode',\r\n        text,\r\n        key,\r\n      );\r\n\r\n      getDataOnSubmit(ciphertext, processes, 'encode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/vigenere/decode',\r\n        text,\r\n        key,\r\n      );\r\n\r\n      getDataOnSubmit(ciphertext, processes, 'decode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('vigenere')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <Detail\r\n        keys={data.key}\r\n        text={data.plaintext}\r\n        processes={data.processes}\r\n        actionType={data.actionType}\r\n      />\r\n      <CardDescription\r\n        cipher={t('vigenere')}\r\n        desc={t('vigenere_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Vigenere;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'EqeoiiXqe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 'cipher',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const xorSlice = createSlice({\r\n  name: 'xor',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = xorSlice.actions;\r\n\r\nexport const selectXor = (state) => state.xor;\r\n\r\nexport default xorSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectXor } from './xorSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectXor);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^a-zA-Z]/gi, ''));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">{t('key')}</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter your keys...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getData, getLoading, resetData, selectXor } from './xorSlice';\r\n\r\nconst XOR = () => {\r\n  const data = useSelector(selectXor);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/xor/encode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/xor/decode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('xor')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('xor')}\r\n        desc={t('xor_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/XOR_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default XOR;\r\n","import { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from '../src/components/Theme/ThemeCustome';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Affine from './feature/affine';\nimport Base64 from './feature/base64';\nimport Ceasar from './feature/ceasar';\nimport DES from './feature/des';\nimport ElGamal from './feature/elgamal';\nimport Hill from './feature/hill';\nimport ModularInverse from './feature/modularInverse';\nimport Modulo from './feature/modulo';\nimport Multiplicative from './feature/multiplicative';\nimport Reverse from './feature/reverse';\nimport Rot13 from './feature/rot13';\nimport Rsa from './feature/rsa';\nimport SimpleSubstitution from './feature/simpleSubstitution';\nimport Transposition from './feature/transposition';\nimport Vigenere from './feature/vigenere';\nimport XOR from './feature/xor';\nimport './index.css';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <div className=\"App\">\n        <Router>\n          <Header theme={theme} setTheme={setTheme} />\n          <Switch>\n            <Route exact path=\"/\" component={Ceasar} />\n            <Route path=\"/affine\" component={Affine} />\n            <Route path=\"/reverse\" component={Reverse} />\n            <Route path=\"/transposition\" component={Transposition} />\n            <Route path=\"/modulo\" component={Modulo} />\n            <Route path=\"/modular-inverse\" component={ModularInverse} />\n            <Route path=\"/simple-substitution\" component={SimpleSubstitution} />\n            <Route path=\"/vigenere\" component={Vigenere} />\n            <Route path=\"/hill\" component={Hill} />\n            <Route path=\"/rot13\" component={Rot13} />\n            <Route path=\"/base64\" component={Base64} />\n            <Route path=\"/xor\" component={XOR} />\n            <Route path=\"/multiplicative\" component={Multiplicative} />\n            <Route path=\"/des\" component={DES} />\n            <Route path=\"/elgamal\" component={ElGamal} />\n            <Route path=\"/rsa\" component={Rsa} />\n          </Switch>\n          <Footer />\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport affine from '../feature/affine/affineSlice';\r\nimport base64 from '../feature/base64/base64Slice';\r\nimport ceasar from '../feature/ceasar/ceasarSlice';\r\nimport des from '../feature/des/desSlice';\r\nimport elgamal from '../feature/elgamal/elgamalSlice';\r\nimport hill from '../feature/hill/hillSlice';\r\nimport multiplicative from '../feature/multiplicative/multiplicativeSlice';\r\nimport reverse from '../feature/reverse/reverseSlice';\r\nimport rot13 from '../feature/rot13/rot13Slice';\r\nimport simpleSubstitution from '../feature/simpleSubstitution/simpleSubstitutionSlice';\r\nimport transposition from '../feature/transposition/transpositionSlice';\r\nimport vigenere from '../feature/vigenere/vigenereSlice';\r\nimport xor from '../feature/xor/xorSlice';\r\nimport rsa from '../feature/rsa/rsaSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ceasar: ceasar,\r\n    affine: affine,\r\n    reverse: reverse,\r\n    transposition: transposition,\r\n    simpleSubstitution: simpleSubstitution,\r\n    vigenere: vigenere,\r\n    hill: hill,\r\n    rot13: rot13,\r\n    base64: base64,\r\n    xor: xor,\r\n    multiplicative: multiplicative,\r\n    des: des,\r\n    elgamal: elgamal,\r\n    rsa: rsa,\r\n  },\r\n});\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport HttpApi from 'i18next-http-backend';\r\n\r\ni18n\r\n  .use(HttpApi)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    supportedLngs: ['en', 'vn'],\r\n    fallbackLng: 'en',\r\n    detection: {\r\n      order: ['cookie', 'htmlTag', 'localStorage', 'path', 'subdomain'],\r\n      caches: ['cookie'],\r\n    },\r\n    backend: {\r\n      loadPath: '/assets/locales/{{lng}}/translation.json',\r\n    },\r\n    react: { useSuspense: false },\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}