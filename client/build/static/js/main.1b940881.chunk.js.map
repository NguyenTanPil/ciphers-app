{"version":3,"sources":["components/Theme/ThemeCustome.js","components/Footer/FooterStyles.js","components/Footer/index.js","feature/Utils.js","components/Sidebar/SidebarStyles.js","components/Sidebar/index.js","components/Header/HeaderStyles.js","components/Header/index.js","components/Card/CardStyles.js","components/Card/Alphabet.js","components/Card/CardActions.js","components/Card/CardDescription.js","components/Card/CardInput.js","components/Card/loading.gif","components/Card/CardOutput.js","feature/affine/affineSlice.js","components/Card/CardCounter.js","feature/affine/AffineStyles.js","feature/affine/ExtraInput.js","feature/affine/Detail.js","feature/affine/index.js","feature/base64/base64Slice.js","feature/base64/index.js","feature/ceasar/Detail.js","feature/ceasar/ceasarSlice.js","feature/ceasar/ExtraInput.js","feature/ceasar/index.js","feature/des/desSlice.js","feature/des/ExtraInput.js","feature/des/index.js","feature/modulo/ModuloStyles.js","feature/elgamal/Detail.js","feature/elgamal/elgamalSlice.js","feature/elgamal/elgamalSlytes.js","feature/elgamal/index.js","feature/hill/Detail.js","feature/hill/hillSlice.js","feature/hill/ExtraInput.js","feature/hill/index.js","feature/modularInverse/index.js","feature/modulo/index.js","feature/multiplicative/multiplicativeSlice.js","feature/multiplicative/ExtraInput.js","feature/multiplicative/index.js","feature/reverse/reverseSlice.js","feature/reverse/index.js","components/RadioBox/RadioBoxStyles.js","components/RadioBox/index.js","feature/rot13/rot13Slice.js","feature/rot13/Rot13Styles.js","feature/rot13/ExtraInput.js","feature/rot13/index.js","feature/rsa/Detail.js","feature/rsa/rsaSlytes.js","feature/rsa/rsaSlice.js","feature/rsa/ExtraInput.js","feature/rsa/index.js","feature/simpleSubstitution/simpleSubstitutionSlice.js","feature/simpleSubstitution/ExtraInput.js","feature/simpleSubstitution/index.js","feature/transposition/transpositionSlice.js","feature/transposition/ExtraInput.js","feature/transposition/index.js","feature/vigenere/Detail.js","feature/vigenere/vigenereSlice.js","feature/vigenere/ExtraInput.js","feature/vigenere/index.js","feature/xor/xorSlice.js","feature/xor/ExtraInput.js","feature/xor/index.js","App.js","reportWebVitals.js","app/store.js","i18n.js","index.js"],"names":["lightTheme","body","text","background","title","active","hover","border","shadow","darkTheme","Container","styled","footer","theme","Wrap","div","Content","p","ChangeLanguage","BtnSmall","button","prop","current","Footer","useState","language","setLanguage","useTranslation","t","i18n","handleLanguageChange","e","changeLanguage","target","innerHTML","onClick","submit","url","mess","k","a","fetch","method","JSON","stringify","key","headers","response","json","result","getCurrentIndex","cases","findIndex","c","getCurrentCase","filter","value","handlShowDetail","container","content","show","setShow","height","paddingBottom","contentEl","containerEl","heightContent","getBoundingClientRect","style","extraHeight","ContainerDetail","ContentDetail","ul","ItemDetail","li","props","level","aside","Header","ListLinks","initHeight","NavItem","Line","TitleLink","NavLink","Link","Sidebar","showSidebar","setShowSidebar","containerWrap","useRef","secretCipherContainerRef","secretCipherContentRef","showSecretCipher","setShowSecretCipher","publicCipherContainerRef","publicCipherContentRef","showPublicCipher","setShowPublicCipher","utilsContainerRef","utilsContentRef","showUtils","setShowUtils","className","classList","contains","nodeName","ref","to","exact","Nav","Wrapper","Logo","NavList","bounce","keyframes","Bar","TrackMode","setTheme","useEffect","document","overflow","position","top","width","removeAttribute","textarea","Title","align","TextareaInput","OutputText","span","Btns","Btn","rotate","Counter","InputGroup","CountBtn","disabled","AlphabetWrap","TransformOutPut","CaseStrategy","WrapDropdown","DropdownButton","DropdownList","ForeignChars","Brick","Description","Alphabet","CardActions","getForeignChars","encode","decode","plaintext","keys","ciphertext","currentIndex","getCaseStategy","caseStrategy","foreignChars","reset","titleAlign","extraInput","showCase","setShowCase","handleSelectCase","map","strategy","id","length","CardDescription","cipher","desc","link","utils","more","href","rel","CardInput","getPlaintext","placeholder","onChange","CardOutput","currentCase","loading","src","loadingIcon","alt","replace","toUpperCase","toLowerCase","initialState","processes","b","actionType","loadingOutput","affineSlice","createSlice","name","reducers","getData","state","action","payload","resetData","increaseSlope","increaseIntercept","decreaseSlope","decreaseIntercept","getLoading","actions","selectAffine","affine","CardCounter","label","inputValue","handleCountChange","increase","decrease","min","max","htmlFor","colorDisabled","color","parseInt","type","CounterWrap","ExtraInput","data","useSelector","dispatch","useDispatch","getKey","Detail","i","process","char","x","mod","n","Affine","getDataOnSubmit","console","log","newCases","item","base64Slice","selectBase64","base64","Base64","getCiphertext","Math","abs","ceasarSlice","increaseKey","decreaseKey","selectCeasar","ceasar","Ceasar","desSlice","selectDes","des","Des","BtnLarge","TransformInput","y","c1","c2","reverseKey","elgamalSlice","increaseP","decreaseP","increaseA","decreaseA","increaseX","decreaseX","increaseK","decreaseK","selectElgamal","elgamal","BtnLargeActive","ElGamal","setAction","getParams","params","input","matrix_chars","index","SmallBlock","matrix_chars_as_int","d","inverse_det","reverse_key","steps","result_as_int","result_as_char","hillSlice","increaseB","increaseC","increaseD","decreaseB","decreaseC","decreaseD","selectHill","hill","field","Hill","convertKeyToChar","chars","String","fromCharCode","ModularInverse","output","setOutput","number","modulo","setInput","inOrDecrease","Number","bigInt","modInv","error","getModularInverse","Modulo","setActions","currentAction","showActions","setShowActions","base","exponent","handleSelectAction","pow","multiplicativeSlice","selectMultiplicative","multiplicative","Multiplicative","reverseSlice","selectReverse","reverse","Reverse","State","RadioBox","handleChange","checked","rot13Slice","selectRot13","rot13","Rot13","q","phi","newD","newE","intPlaintext","num","split","CounterCustom","rsaSlice","increaseQ","decreaseQ","increaseE","decreaseE","selectRsa","rsa","selectInput","setSelectInput","selectTypeInput","curr","param","Rsa","errorMess","simpleSubstitutionSlice","selectSimpleSubstitution","simpleSubstitution","shuffle","array","randomIndex","floor","random","arr","join","maxLength","Transposition","transpositionSlice","selectTransposition","transposition","keysAsInt","slice","vigenereSlice","selectVigenere","vigenere","Vigenere","xorSlice","selectXor","xor","XOR","App","path","component","SimpleSubstitution","DES","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","use","HttpApi","LanguageDetector","initReactI18next","init","supportedLngs","fallbackLng","detection","order","caches","backend","loadPath","react","useSuspense","interpolation","escapeValue","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.1b940881.chunk.js","sourcesContent":["export const lightTheme = {\r\n  body: '#f2f4f6',\r\n  text: '#797f86',\r\n  background: '#fff',\r\n  title: '#272727',\r\n  active: '#e3e8ec',\r\n  hover: '#e3e8ec66',\r\n  border: '#e3e8ec',\r\n  shadow: `0 0.2rem 2.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 3rem 0 rgb(0 0 0 / 12%)`,\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: '#1e2122',\r\n  text: '#988f81',\r\n  background: '#181a1b',\r\n  title: '#cfcbc5',\r\n  active: '#25282a',\r\n  hover: '#25282a66',\r\n  border: '#373b3d',\r\n  shadow: ` rgba(100, 100, 111, 0.2) 0px 7px 29px 0px`,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.footer`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-top: 1px solid ${({ theme }) => theme.border};\r\n  padding: 3.6rem 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.1rem;\r\n  margin: 0 auto;\r\n  width: 80%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  text-align: justify;\r\n  width: 100%;\r\n\r\n  span {\r\n    color: #4db6ac;\r\n    font-size: 2rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    max-width: 70rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    max-width: 80rem;\r\n  }\r\n`;\r\n\r\nexport const ChangeLanguage = styled.div`\r\n  display: flex;\r\n  margin-top: 0.65rem;\r\n`;\r\n\r\nexport const BtnSmall = styled.button`\r\n  background-color: ${(prop) =>\r\n    prop.current ? 'rgb(34, 150, 138)' : '#4db6ac'};\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 0.3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  height: 3.6rem;\r\n  margin-right: 0.65rem;\r\n  outline: none;\r\n  padding: 0 1.5rem;\r\n  text-transform: capitalize;\r\n  transition: background-color 0.3s ease 0s;\r\n\r\n  &:hover {\r\n    background-color: rgb(34, 150, 138);\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    margin-left: 0.65rem;\r\n    margin-right: 0;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport {\r\n  ChangeLanguage,\r\n  Container,\r\n  Content,\r\n  Wrap,\r\n  BtnSmall,\r\n} from './FooterStyles';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Footer = () => {\r\n  const [language, setLanguage] = useState('en');\r\n  const [t, i18n] = useTranslation();\r\n\r\n  const handleLanguageChange = (e) => {\r\n    i18n.changeLanguage(e.target.innerHTML);\r\n    setLanguage(e.target.innerHTML);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <Content>\r\n          <span>CipherVip</span> {t('footer')}\r\n        </Content>\r\n        <ChangeLanguage>\r\n          <BtnSmall\r\n            current={language === 'en' ? 1 : 0}\r\n            onClick={handleLanguageChange}\r\n          >\r\n            en\r\n          </BtnSmall>\r\n          <BtnSmall\r\n            current={language === 'vn' ? 1 : 0}\r\n            onClick={handleLanguageChange}\r\n          >\r\n            vn\r\n          </BtnSmall>\r\n        </ChangeLanguage>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\n\r\nexport const submit = async (url, mess, k) => {\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      text: mess,\r\n      key: k,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n  });\r\n  const result = await response.json();\r\n  return result;\r\n};\r\n\r\nexport const getCurrentIndex = (cases) => {\r\n  const index = cases.findIndex((c) => c.active);\r\n  return index + 1;\r\n};\r\n\r\nexport const getCurrentCase = (cases) => {\r\n  return cases.filter((c) => c.active)[0].value;\r\n};\r\n\r\nexport const handlShowDetail = (\r\n  container,\r\n  content,\r\n  show,\r\n  setShow,\r\n  height = 46,\r\n  paddingBottom = 20,\r\n) => {\r\n  const contentEl = content.current;\r\n  const containerEl = container.current;\r\n  if (contentEl) {\r\n    const heightContent = contentEl.getBoundingClientRect().height;\r\n\r\n    if (show) {\r\n      containerEl.style.height = `${height}px`;\r\n      setShow(false);\r\n    } else {\r\n      const extraHeight = paddingBottom ? height + paddingBottom : 0;\r\n      containerEl.style.height = `${heightContent + extraHeight}px`;\r\n      setShow(true);\r\n    }\r\n  } else {\r\n    containerEl.style.height = `${height}px`;\r\n    setShow(false);\r\n  }\r\n};\r\n\r\n// Styles\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.body};\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  padding-bottom: 1.6rem;\r\n  padding-top: 4.8rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const ContainerDetail = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: none;\r\n  padding: 3.6rem 0;\r\n  text-align: justify;\r\n\r\n  div {\r\n    height: 4.6rem;\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1rem;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n    transition: all 0.2s ease 0s;\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    display: block;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const ContentDetail = styled.ul`\r\n  margin-top: 2rem;\r\n  height: auto;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ItemDetail = styled.li`\r\n  ${(props) =>\r\n    props.level === 'second'\r\n      ? 'display: flex; justify-content: space-between;'\r\n      : ''}\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n\r\n  & > span:first-child {\r\n    display: inline-block;\r\n    min-width: 24rem;\r\n  }\r\n\r\n  & > span:last-child {\r\n    display: inline-block;\r\n    min-width: 34rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    display: block;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  background-color: transparent;\r\n  height: 100vh;\r\n  overflow-y: scroll;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  z-index: 2000;\r\n  transform: translateX(100%);\r\n  transition: transform 600ms ease;\r\n  padding-right: 1.6rem;\r\n\r\n  &.active {\r\n    /* background-color: rgba(0, 0, 0, 0.2); */\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const Wrap = styled.aside`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-left: 2px solid ${({ theme }) => theme.border};\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  height: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 80%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    width: 40%;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  padding: 1.8rem 3rem;\r\n\r\n  button {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: pointer;\r\n    height: 2.5rem;\r\n    outline: none;\r\n\r\n    svg {\r\n      color: ${({ theme }) => theme.text};\r\n      font-size: 2.5rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ListLinks = styled.ul`\r\n  background-color: ${({ theme }) => theme.background};\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: ${(props) => (props.initHeight ? 'auto' : '55.5px')};\r\n  overflow: hidden;\r\n  transition: all 0.4s;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: block;\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  background-color: #26a69a;\r\n  display: block;\r\n  height: 1.5rem;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TitleLink = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n  padding: 1.55rem 3rem;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.title};\r\n  }\r\n\r\n  svg {\r\n    font-size: 2rem;\r\n    transition: all 0.5s;\r\n  }\r\n\r\n  &:hover {\r\n    span {\r\n      transition: all 0.3s;\r\n      color: #26a69a;\r\n    }\r\n\r\n    svg {\r\n      color: #26a69a;\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n  padding: 1.25rem 3rem 1.25rem 4rem;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.hover};\r\n    padding-left: 4.5rem;\r\n  }\r\n\r\n  &.active {\r\n    background-color: ${({ theme }) => theme.active};\r\n    border-left: 3px solid #26a69a;\r\n    color: #26a69a;\r\n  }\r\n`;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { AiOutlineMinusSquare, AiOutlinePlusSquare } from 'react-icons/ai';\r\nimport { CgPushChevronRight } from 'react-icons/cg';\r\nimport { handlShowDetail } from '../../feature/Utils';\r\nimport {\r\n  Container,\r\n  Header,\r\n  Line,\r\n  ListLinks,\r\n  NavItem,\r\n  NavLink,\r\n  TitleLink,\r\n  Wrap,\r\n} from './SidebarStyles';\r\n\r\nconst Sidebar = ({ showSidebar, setShowSidebar }) => {\r\n  const { t } = useTranslation();\r\n  const containerWrap = useRef(null);\r\n\r\n  const secretCipherContainerRef = useRef(null);\r\n  const secretCipherContentRef = useRef(null);\r\n  const [showSecretCipher, setShowSecretCipher] = useState(true);\r\n\r\n  const publicCipherContainerRef = useRef(null);\r\n  const publicCipherContentRef = useRef(null);\r\n  const [showPublicCipher, setShowPublicCipher] = useState(false);\r\n\r\n  const utilsContainerRef = useRef(null);\r\n  const utilsContentRef = useRef(null);\r\n  const [showUtils, setShowUtils] = useState(false);\r\n\r\n  const handleShow = (e) => {\r\n    if (e.target.classList.contains('close') || e.target.nodeName === 'A') {\r\n      setShowSidebar(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={showSidebar ? 'active close' : ''}\r\n      onClick={handleShow}\r\n    >\r\n      <Wrap ref={containerWrap}>\r\n        <Header>\r\n          <button onClick={() => setShowSidebar(false)}>\r\n            <CgPushChevronRight />\r\n          </button>\r\n        </Header>\r\n        <ListLinks\r\n          initHeight={showSecretCipher ? 1 : 0}\r\n          ref={secretCipherContainerRef}\r\n        >\r\n          <div ref={secretCipherContentRef}>\r\n            <NavItem>\r\n              <TitleLink\r\n                onClick={() =>\r\n                  handlShowDetail(\r\n                    secretCipherContainerRef,\r\n                    secretCipherContentRef,\r\n                    showSecretCipher,\r\n                    setShowSecretCipher,\r\n                    55.5,\r\n                    0,\r\n                  )\r\n                }\r\n              >\r\n                <span>{t('secret_cipher')}</span>\r\n                {showSecretCipher ? (\r\n                  <AiOutlineMinusSquare />\r\n                ) : (\r\n                  <AiOutlinePlusSquare />\r\n                )}{' '}\r\n              </TitleLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/affine\">{t('affine')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/base64\">{t('base64')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink exact to=\"/\">\r\n                {t('ceasar')}\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/des\">{t('des')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/hill\">{t('hill')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/multiplicative\">{t('multiplicative')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/reverse\">{t('reverse')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/rot13\">{t('rot13')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/simple-substitution\">\r\n                {t('simple_substitution')}\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/transposition\">{t('transposition')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/vigenere\">{t('vigenere')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/xor\">{t('xor')}</NavLink>\r\n            </NavItem>\r\n          </div>\r\n        </ListLinks>\r\n        <ListLinks\r\n          initHeight={showPublicCipher ? 1 : 0}\r\n          ref={publicCipherContainerRef}\r\n        >\r\n          <div ref={publicCipherContentRef}>\r\n            <NavItem>\r\n              <TitleLink\r\n                onClick={() =>\r\n                  handlShowDetail(\r\n                    publicCipherContainerRef,\r\n                    publicCipherContentRef,\r\n                    showPublicCipher,\r\n                    setShowPublicCipher,\r\n                    55.5,\r\n                    0,\r\n                  )\r\n                }\r\n              >\r\n                <span>{t('public_cipher')}</span>\r\n                {showPublicCipher ? (\r\n                  <AiOutlineMinusSquare />\r\n                ) : (\r\n                  <AiOutlinePlusSquare />\r\n                )}{' '}\r\n              </TitleLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/elgamal\">{t('elgamal')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/rsa\">{t('rsa')}</NavLink>\r\n            </NavItem>\r\n          </div>\r\n        </ListLinks>\r\n        <ListLinks initHeight={showUtils ? 1 : 0} ref={utilsContainerRef}>\r\n          <div ref={utilsContentRef}>\r\n            <NavItem>\r\n              <TitleLink\r\n                onClick={() =>\r\n                  handlShowDetail(\r\n                    utilsContainerRef,\r\n                    utilsContentRef,\r\n                    showUtils,\r\n                    setShowUtils,\r\n                    55.5,\r\n                    0,\r\n                  )\r\n                }\r\n              >\r\n                <span>{t('utils')}</span>\r\n                {showUtils ? (\r\n                  <AiOutlineMinusSquare />\r\n                ) : (\r\n                  <AiOutlinePlusSquare />\r\n                )}{' '}\r\n              </TitleLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/modulo\">{t('cal_modulo')}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/modular-inverse\">{t('mod_inverse')}</NavLink>\r\n            </NavItem>\r\n          </div>\r\n        </ListLinks>\r\n        <ListLinks>\r\n          <Line />\r\n        </ListLinks>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Nav = styled.div`\r\n  background-color: #4db6ac;\r\n  font-family: 'Zen Antique Soft', serif;\r\n  height: 6.4rem;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  line-height: 6.4rem;\r\n  width: 90%;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n  color: #fff;\r\n  font-size: 3.2rem;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0;\r\n  transition: background-color 0.3s;\r\n\r\n  /* &:hover {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  } */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: none;\r\n  font-size: 1.6rem;\r\n  padding: 0 1.5rem;\r\n  text-transform: capitalize;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst bounce = keyframes`\r\n  0 {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.25);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const Bar = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  outline: none;\r\n\r\n  svg {\r\n    animation: ${bounce} 2s ease infinite;\r\n    display: block;\r\n    color: #fff;\r\n    font-size: 3rem;\r\n    font-weight: 600;\r\n    /* transition: transform 0.3s ease; */\r\n  }\r\n`;\r\n\r\nexport const TrackMode = styled.div`\r\n  background-color: #4d4d4d;\r\n  border-radius: calc(4.6rem / 4);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 2.4rem;\r\n  margin-right: 1rem;\r\n  position: relative;\r\n  width: 4.6rem;\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 2.4rem;\r\n    text-align: center;\r\n    width: 2.4rem;\r\n  }\r\n\r\n  & > .ball {\r\n    background-color: #fff;\r\n    border: 0.2rem solid #4d4d4d;\r\n    border-radius: 50%;\r\n    height: 2.3rem;\r\n    position: absolute;\r\n    left: 0;\r\n    transition: all 0.25s ease;\r\n    transform: translateX(\r\n      ${(props) => (props.theme === 'light' ? '0' : '100%')}\r\n    );\r\n    width: 2.3rem;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 2px 3px #ba8fff;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { AiOutlineBars } from 'react-icons/ai';\r\nimport Sidebar from '../Sidebar';\r\nimport {\r\n  Bar,\r\n  Logo,\r\n  Nav,\r\n  NavItem,\r\n  NavList,\r\n  TrackMode,\r\n  Wrapper,\r\n} from './HeaderStyles';\r\n\r\nconst Header = ({ theme, setTheme }) => {\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n\r\n  const themeToggle = () => {\r\n    if (theme === 'light') {\r\n      setTheme('dark');\r\n    } else {\r\n      setTheme('light');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showSidebar) {\r\n      document.body.style.overflow = 'hidden';\r\n      document.body.style.position = 'fixed';\r\n      document.body.style.top = '0';\r\n      document.body.style.width = 'calc(100% - 1.7rem)';\r\n    } else {\r\n      document.body.removeAttribute('style');\r\n    }\r\n  }, [showSidebar]);\r\n\r\n  return (\r\n    <Nav>\r\n      <Wrapper>\r\n        <Logo to=\"/\">CipherVip</Logo>\r\n        <NavList>\r\n          {/* <NavItem>{t('Welcome')}</NavItem> */}\r\n          <NavItem>\r\n            <TrackMode onClick={themeToggle} theme={theme}>\r\n              <span>🌜</span>\r\n              <div className=\"ball\"></div>\r\n              <span>🌞</span>\r\n            </TrackMode>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Bar onClick={() => setShowSidebar(true)}>\r\n              <AiOutlineBars />\r\n            </Bar>\r\n          </NavItem>\r\n        </NavList>\r\n      </Wrapper>\r\n      <Sidebar showSidebar={showSidebar} setShowSidebar={setShowSidebar} />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border-radius: 0.2rem;\r\n  box-shadow: ${({ theme }) => theme.shadow};\r\n  box-sizing: border-box;\r\n  height: ${(props) => (props.textarea ? '30rem' : 'auto')};\r\n  max-width: 50rem;\r\n  margin-bottom: 4rem;\r\n  padding: 0 0.75rem;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    margin-bottom: 1rem;\r\n    width: 31.5%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  border-radius: 0 0 0.2rem 0.2rem;\r\n  color: #4db6ac;\r\n  font-size: 2.4rem;\r\n  font-weight: 600;\r\n  line-height: 4.8rem;\r\n  padding: 2rem;\r\n  text-align: ${(props) => (props.align === 'center' ? 'center' : 'left')};\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TextareaInput = styled.textarea`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  display: block;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  outline: none;\r\n  padding: 2rem;\r\n  resize: none;\r\n  transition: all 0.2s ease 0s;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid ${({ theme }) => theme.border};\r\n    box-shadow: 0 1px 0 0 #26a69a;\r\n  }\r\n`;\r\n\r\nexport const OutputText = styled.span`\r\n  color: #797f86;\r\n  display: flex;\r\n  font-family: 'Source Code Pro', monospace;\r\n  font-weight: 400;\r\n  font-size: 1.6rem;\r\n  height: 20rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n  padding: 2rem;\r\n  width: 100%;\r\n\r\n  img {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 2rem 1rem;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n  }\r\n`;\r\nexport const Btn = styled.button`\r\n  background-color: #26a69a;\r\n  border: none;\r\n  border-radius: 0.2rem;\r\n  color: rgb(232, 230, 227);\r\n  cursor: pointer;\r\n  font-weight: 600;\r\n  height: 3.6rem;\r\n  letter-spacing: 0.5px;\r\n  line-height: 3.6rem;\r\n  margin-top: 1rem;\r\n  max-width: 11.6rem;\r\n  text-align: center;\r\n  text-decoration-color: initial;\r\n  text-transform: uppercase;\r\n  transition: background-color 0.3s ease 0s;\r\n  vertical-align: middle;\r\n  width: 11.6rem;\r\n\r\n  &:hover {\r\n    background-color: rgb(34, 150, 138);\r\n  }\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  100% {\r\n    transition: transform 0.25s;\r\n    transform: rotateZ(360deg)\r\n  }\r\n`;\r\n\r\nexport const Counter = styled(Btns)`\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 1rem 0.2rem;\r\n\r\n  div {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    color: #4db6ac;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    padding-left: 1.8rem;\r\n    position: relative;\r\n    text-transform: uppercase;\r\n\r\n    button {\r\n      height: 3rem;\r\n      line-height: 3rem;\r\n      padding: 0;\r\n      position: absolute;\r\n      right: 0;\r\n      top: -50%;\r\n      width: 3rem;\r\n\r\n      &:hover {\r\n        svg {\r\n          animation: ${rotate} 1.25s ease 0.25s;\r\n        }\r\n      }\r\n\r\n      svg {\r\n        font-size: 2.6rem;\r\n        margin-top: 0.2rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  ${Btn} {\r\n    margin-top: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1rem 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 2rem 2rem 1rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const InputGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  input {\r\n    background-color: ${({ theme }) => theme.background};\r\n    border: none;\r\n    box-shadow: border-box;\r\n    color: ${({ theme }) => theme.text};\r\n    flex-grow: 1;\r\n    font-size: 1.6rem;\r\n    letter-spacing: 1px;\r\n    outline: none;\r\n    text-align: center;\r\n    width: calc(100% - 9.2rem);\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    &::-webkit-outer-spin-button,\r\n    &::-webkit-inner-spin-button {\r\n      -webkit-appearance: none;\r\n      margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  input[type='text'] {\r\n    border-bottom: 1px solid transparent;\r\n    margin-left: 1.8rem;\r\n    padding-top: 1rem;\r\n    padding-bottom: 0.5rem;\r\n    text-align: left;\r\n\r\n    &:focus {\r\n      border-color: #4db6ac;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CountBtn = styled(Btn)`\r\n  background-color: transparent;\r\n  color: ${(props) => (props.disabled ? '#797f86' : '#988f81')};\r\n  cursor: ${(props) => (props.disabled ? 'initial' : 'pointer')};\r\n  font-size: 2.6rem;\r\n  font-weight: 600;\r\n  height: 4.6rem;\r\n  padding: 0;\r\n  width: 4.6rem;\r\n\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: ${(props) => (props.disabled ? '#797f86' : '#4db6ac')};\r\n    transform: ${(props) => (props.disabled ? 'scale(1)' : 'scale(1.5)')};\r\n  }\r\n`;\r\n\r\nexport const AlphabetWrap = styled(Counter)`\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    height: 2.6rem;\r\n    line-height: 2.6rem;\r\n    letter-spacing: 1px;\r\n    padding-left: 1.8rem;\r\n    text-align: left;\r\n    vertical-align: middle;\r\n\r\n    &:first-child {\r\n      font-size: 1.2rem;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TransformOutPut = styled(Counter)`\r\n  flex-direction: row;\r\n  padding: 0 0.2rem;\r\n\r\n  & > div {\r\n    height: 100%;\r\n    padding: 2rem 0 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  label {\r\n    padding-left: 0;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 0 2rem;\r\n\r\n    & > div {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 0 2rem;\r\n  }\r\n`;\r\n\r\nexport const CaseStrategy = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    border-bottom: none;\r\n    border-right: 1px solid ${({ theme }) => theme.border};\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    button {\r\n      padding-right: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    button {\r\n      padding-right: 3.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WrapDropdown = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.8rem;\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 2.5rem;\r\n    pointer-events: none;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    svg {\r\n      right: 0.5rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    svg {\r\n      right: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DropdownButton = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  outline: none;\r\n  padding: 1.2rem 3.2rem 0 0;\r\n  text-align: left;\r\n  width: 100%;\r\n\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const DropdownList = styled.ul`\r\n  background-color: ${({ theme }) => theme.background};\r\n  box-shadow: 0 0.2rem 0.5rem 0 rgb(0 0 0 / 16%),\r\n    0 0.2rem 1rem 0 rgb(0 0 0 / 12%);\r\n  border-radius: 0.25rem;\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  left: -1.8rem;\r\n  top: 140%;\r\n  z-index: 1008;\r\n  width: calc(100% + 1.8rem);\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    left: -3.8rem;\r\n    width: calc(100% + 3.8rem);\r\n  }\r\n\r\n  li {\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n    font-weight: 600;\r\n    padding: 1.25rem;\r\n    padding-left: 3.8rem;\r\n    transition: all 0.2s linear 0s;\r\n\r\n    &:hover {\r\n      background-color: ${({ theme }) => theme.hover};\r\n      padding-left: 4.2rem;\r\n    }\r\n\r\n    &.active {\r\n      background-color: ${({ theme }) => theme.active};\r\n      color: #26a69a;\r\n    }\r\n\r\n    &:first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ForeignChars = styled.div`\r\n  ${WrapDropdown} {\r\n    padding-top: 1.2rem;\r\n\r\n    button {\r\n      background-color: transparent;\r\n      border: none;\r\n      color: ${({ theme }) => theme.text};\r\n      cursor: pointer;\r\n      font-size: 1.5rem;\r\n      font-weight: 600;\r\n      outline: none;\r\n      transition: color 0.2s ease 0s;\r\n\r\n      &:first-letter {\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      &:first-child {\r\n        margin-right: 1rem;\r\n      }\r\n\r\n      &.active {\r\n        color: #26a69a;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Brick = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.25rem 1.8rem;\r\n\r\n  svg {\r\n    font-size: 1.6rem;\r\n    font-weight: 600;\r\n    fill: currentColor;\r\n    margin-right: 0.5rem;\r\n  }\r\n\r\n  span {\r\n    font-size: 1.4rem;\r\n    line-height: 1.4;\r\n    letter-spacing: 1px;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1.25rem 1.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 1.25rem 3.8rem;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  background-color: ${({ theme }) => theme.background};\r\n  padding: 3.6rem 0;\r\n  text-align: justify;\r\n\r\n  div {\r\n    line-height: 1.5;\r\n    letter-spacing: 0.1rem;\r\n    margin: 0 auto;\r\n    width: 80%;\r\n  }\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.title};\r\n    display: block;\r\n    font-size: 1.8rem;\r\n    font-weight: 600;\r\n    padding-bottom: 1.4rem;\r\n    width: 100%;\r\n\r\n    &:first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.text};\r\n    font-size: 1.4rem;\r\n    font-weight: 590;\r\n    margin-bottom: 1rem;\r\n    width: 100%;\r\n  }\r\n\r\n  a {\r\n    color: #4db6ac;\r\n    display: inline-block;\r\n    font-weight: 600;\r\n\r\n    &::first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    h1 {\r\n      font-size: 2.1rem;\r\n    }\r\n\r\n    p {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    h1,\r\n    p {\r\n      max-width: 70rem;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    h1,\r\n    p {\r\n      max-width: 80rem;\r\n    }\r\n  }\r\n`;\r\n","import { AlphabetWrap } from './CardStyles';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Alphabet = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <AlphabetWrap>\r\n      <label>{t('alphabet')}</label>\r\n      <div>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n        <span>abcdefghijklmnopqrstuvwxyz</span>\r\n      </div>\r\n    </AlphabetWrap>\r\n  );\r\n};\r\n\r\nexport default Alphabet;\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { HiArrowNarrowDown } from 'react-icons/hi';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport Alphabet from './Alphabet';\r\nimport {\r\n  Brick,\r\n  Btn,\r\n  Btns,\r\n  CaseStrategy,\r\n  Container,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  ForeignChars,\r\n  Title,\r\n  TransformOutPut,\r\n  WrapDropdown,\r\n} from './CardStyles';\r\n\r\nconst CardActions = ({\r\n  getForeignChars,\r\n  encode,\r\n  decode,\r\n  plaintext,\r\n  ciphertext,\r\n  keys,\r\n  currentIndex,\r\n  getCaseStategy,\r\n  caseStrategy,\r\n  foreignChars,\r\n  reset,\r\n  titleAlign,\r\n  title,\r\n  extraInput,\r\n}) => {\r\n  const [showCase, setShowCase] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const handleSelectCase = (e) => {\r\n    getCaseStategy(e);\r\n    setShowCase(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <Btns>\r\n          <Btn onClick={() => encode(plaintext, keys)}>{t('encode')}</Btn>\r\n          <Btn onClick={() => decode(plaintext, keys)}>{t('decode')}</Btn>\r\n          <Btn onClick={reset}>Reset</Btn>\r\n        </Btns>\r\n\r\n        {extraInput}\r\n\r\n        <Alphabet />\r\n\r\n        <TransformOutPut>\r\n          <CaseStrategy>\r\n            <label>{t('case')}</label>\r\n            <WrapDropdown>\r\n              <DropdownButton onClick={() => setShowCase(!showCase)}>\r\n                {t(`case_${currentIndex}`)}\r\n              </DropdownButton>\r\n              {showCase && (\r\n                <DropdownList>\r\n                  {caseStrategy.map((strategy, key) => {\r\n                    return (\r\n                      <li\r\n                        className={strategy.active ? 'active' : ''}\r\n                        key={key}\r\n                        id={strategy.value}\r\n                        onClick={handleSelectCase}\r\n                      >\r\n                        {t(`case_${key + 1}`)}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </DropdownList>\r\n              )}\r\n              <RiArrowDownSFill />\r\n            </WrapDropdown>\r\n          </CaseStrategy>\r\n\r\n          <ForeignChars>\r\n            <label>{t('foreign')}</label>\r\n            <WrapDropdown>\r\n              <button\r\n                className={foreignChars === 'include' ? 'active' : ''}\r\n                id=\"include\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                {t('include')}\r\n              </button>\r\n              <button\r\n                className={foreignChars === 'ignore' ? 'active' : ''}\r\n                id=\"ignore\"\r\n                onClick={(e) => getForeignChars(e.target.id)}\r\n              >\r\n                {t('ignore')}\r\n              </button>\r\n            </WrapDropdown>\r\n          </ForeignChars>\r\n        </TransformOutPut>\r\n\r\n        <Brick>\r\n          <HiArrowNarrowDown />\r\n          <span>{t('decoded', { length: plaintext.length })}</span>\r\n        </Brick>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import { Description } from './CardStyles';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst CardDescription = ({ cipher, desc, link, utils, more }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Description>\r\n      <div>\r\n        <h1>\r\n          {cipher}: {utils ? utils : t('utils_word')} {utils ? '' : cipher}{' '}\r\n          {utils ? t('to_integer') : t('to_text')}\r\n        </h1>\r\n        <p>\r\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {cipher}\r\n          </a>\r\n          {desc}\r\n        </p>\r\n      </div>\r\n    </Description>\r\n  );\r\n};\r\n\r\nexport default CardDescription;\r\n","import { Container, Title, Content, TextareaInput } from './CardStyles';\r\n\r\nconst CardInput = ({ title, titleAlign, plaintext, getPlaintext }) => {\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <TextareaInput\r\n          placeholder=\"Enter your message...\"\r\n          value={plaintext}\r\n          onChange={getPlaintext}\r\n        />\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardInput;\r\n","export default __webpack_public_path__ + \"static/media/loading.4ccf66d6.gif\";","import { Container, Content, OutputText, Title } from './CardStyles';\r\nimport loadingIcon from './loading.gif';\r\n\r\nconst CardOutput = ({\r\n  title,\r\n  titleAlign,\r\n  currentCase,\r\n  foreignChars,\r\n  ciphertext,\r\n  loading,\r\n}) => {\r\n  const formatOutput = () => {\r\n    if (foreignChars === 'ignore' && currentCase === 'upper case') {\r\n      return ciphertext.replace(/\\s/g, '').toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'lower case') {\r\n      return ciphertext.replace(/\\s/g, '').toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'ignore' && currentCase === 'maintain case') {\r\n      return ciphertext.replace(/\\s/g, '');\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'upper case') {\r\n      return ciphertext.toUpperCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'lower case') {\r\n      return ciphertext.toLowerCase();\r\n    }\r\n\r\n    if (foreignChars === 'include' && currentCase === 'maintain case') {\r\n      return ciphertext;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container textarea={true}>\r\n      <Title align={titleAlign}>{title}</Title>\r\n      <Content>\r\n        <OutputText>\r\n          {loading ? (\r\n            <img src={loadingIcon} alt=\"loading output\" />\r\n          ) : (\r\n            formatOutput()\r\n          )}\r\n        </OutputText>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardOutput;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'RheafsUhe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  processes: [],\r\n  keys: { a: 7, b: 3 },\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const affineSlice = createSlice({\r\n  name: 'affine',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n      state.keys = action.payload.keys;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.keys = initialState.keys;\r\n      state.processes = initialState.processes;\r\n      state.actionType = initialState.actionType;\r\n    },\r\n    increaseSlope(state) {\r\n      state.keys.a += 1;\r\n    },\r\n    increaseIntercept(state) {\r\n      state.keys.b += 1;\r\n    },\r\n    decreaseSlope(state) {\r\n      state.keys.a -= 1;\r\n    },\r\n    decreaseIntercept(state) {\r\n      state.keys.b -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseSlope,\r\n  decreaseSlope,\r\n  increaseIntercept,\r\n  decreaseIntercept,\r\n  getLoading,\r\n} = affineSlice.actions;\r\n\r\nexport const selectAffine = (state) => state.affine;\r\n\r\nexport default affineSlice.reducer;\r\n","import { CountBtn, Counter, InputGroup } from './CardStyles';\r\n\r\nconst CardCounter = ({\r\n  label,\r\n  inputValue,\r\n  handleCountChange,\r\n  increase,\r\n  decrease,\r\n  min,\r\n  max,\r\n}) => {\r\n  return (\r\n    <Counter>\r\n      <div>\r\n        <label htmlFor={label}>{label}</label>\r\n        <InputGroup>\r\n          <CountBtn\r\n            colorDisabled={(theme) => theme.color}\r\n            disabled={parseInt(inputValue) === 0 && min === 0 ? true : false}\r\n            onClick={decrease}\r\n          >\r\n            {' '}\r\n            -{' '}\r\n          </CountBtn>\r\n          <input\r\n            type=\"number\"\r\n            min={min}\r\n            max={max}\r\n            value={inputValue}\r\n            onChange={handleCountChange}\r\n          />\r\n          <CountBtn\r\n            colorDisabled={(theme) => theme.color}\r\n            disabled={parseInt(inputValue) === max && max ? true : false}\r\n            onClick={increase}\r\n          >\r\n            {' '}\r\n            +{' '}\r\n          </CountBtn>\r\n        </InputGroup>\r\n      </div>\r\n    </Counter>\r\n  );\r\n};\r\n\r\nexport default CardCounter;\r\n","import styled from 'styled-components';\r\n\r\nexport const CounterWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  & > div {\r\n    width: 50%;\r\n\r\n    &:nth-child(2n + 1) {\r\n      border-right: 1px solid ${({ theme }) => theme.border};\r\n    }\r\n  }\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport {\r\n  decreaseIntercept,\r\n  decreaseSlope,\r\n  getData,\r\n  increaseIntercept,\r\n  increaseSlope,\r\n  selectAffine,\r\n} from './affineSlice';\r\nimport { CounterWrap } from './AffineStyles';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        keys: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleSlopeCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        getKey({ ...data.keys, a: 25 });\r\n      } else {\r\n        getKey({ ...data.keys, a: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.keys, a: '' });\r\n    }\r\n  };\r\n\r\n  const handleInterceptCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        getKey({ ...data.keys, b: 25 });\r\n      } else {\r\n        getKey({ ...data.keys, b: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.keys, b: '' });\r\n    }\r\n  };\r\n\r\n  const increaseSlopeCounter = () => {\r\n    dispatch(increaseSlope());\r\n  };\r\n\r\n  const decreaseSlopeCounter = () => {\r\n    dispatch(decreaseSlope());\r\n  };\r\n\r\n  const increaseInterceptCounter = () => {\r\n    dispatch(increaseIntercept());\r\n  };\r\n\r\n  const decreaseInterceptCounter = () => {\r\n    dispatch(decreaseIntercept());\r\n  };\r\n\r\n  return (\r\n    <CounterWrap>\r\n      <CardCounter\r\n        label=\"SLOPE / A\"\r\n        inputValue={data.keys.a}\r\n        handleCountChange={handleSlopeCountChange}\r\n        increase={increaseSlopeCounter}\r\n        decrease={decreaseSlopeCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n      <CardCounter\r\n        label=\"INTERCEPT / B\"\r\n        inputValue={data.keys.b}\r\n        handleCountChange={handleInterceptCountChange}\r\n        increase={increaseInterceptCounter}\r\n        decrease={decreaseInterceptCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n    </CounterWrap>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport {\r\n  ContainerDetail,\r\n  ContentDetail,\r\n  ItemDetail,\r\n  handlShowDetail,\r\n} from '../Utils';\r\n\r\nconst Detail = ({ keys, text, processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={() => handlShowDetail(container, content, show, setShow)}>\r\n          {show ? t('hide') : t('detail')}\r\n        </Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType === 'encode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: E<sub>k</sub>( x ) = ( {keys.a}x +{' '}\r\n                  {keys.b} ) mod 26\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: D<sub>k</sub>( x ) = {processes[0].i} * (\r\n                  x -{processes[0].b} ) mod 26\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('decoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n\r\n            {processes.map((process, key) => {\r\n              return (\r\n                <ItemDetail key={key} level=\"second\">\r\n                  <span>\r\n                    \"{process.char}\" {t('ordinal')} {process.x}\r\n                  </span>\r\n                  <span>\r\n                    {actionType === 'encode' ? (\r\n                      <>\r\n                        E<sub>k</sub>( {process.x} ) = ( {keys.a} * {process.x}{' '}\r\n                        + {keys.b} ) ≡ {keys.a * process.x + keys.b} ≡{' '}\r\n                        {process.mod} mod {process.n}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        D<sub>k</sub>( {process.x} ) = {process.i} * ({' '}\r\n                        {process.x} - {keys.b} ) ≡{' '}\r\n                        {process.i * (process.x - keys.b)} ≡ {process.mod} mod{' '}\r\n                        {process.n}\r\n                      </>\r\n                    )}\r\n                  </span>{' '}\r\n                  {process.result}\r\n                </ItemDetail>\r\n              );\r\n            })}\r\n          </ContentDetail>\r\n        )}\r\n\r\n        {/* <Btn onClick={handlShowDetail}>Detail</Btn> */}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport { getData, getLoading, resetData, selectAffine } from './affineSlice';\r\nimport ExtraInput from './ExtraInput';\r\nimport Detail from './Detail';\r\n\r\nconst Affine = () => {\r\n  const data = useSelector(selectAffine);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        keys: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/affine/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'encode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/affine/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'decode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('affine')}\r\n          titleAlign=\"center\"\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          keys={data.keys}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <Detail\r\n        keys={data.keys}\r\n        text={data.plaintext}\r\n        processes={data.processes}\r\n        actionType={data.actionType}\r\n      />\r\n      <CardDescription\r\n        cipher={t('affine')}\r\n        desc={t('affine_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Affine_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Affine;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'Q2lwaGVyVmlw',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const base64Slice = createSlice({\r\n  name: 'base64',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = base64Slice.actions;\r\n\r\nexport const selectBase64 = (state) => state.base64;\r\n\r\nexport default base64Slice.reducer;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport { getData, getLoading, resetData, selectBase64 } from './base64Slice';\r\n\r\nconst Base64 = () => {\r\n  const data = useSelector(selectBase64);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/base64/encode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const decode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/base64/decode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('base64')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('base64')}\r\n        desc={t('base64_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Base64\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Base64;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport {\r\n  ContainerDetail,\r\n  ContentDetail,\r\n  handlShowDetail,\r\n  ItemDetail,\r\n} from '../Utils';\r\n\r\nconst Detail = ({ keys, text, processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={() => handlShowDetail(container, content, show, setShow)}>\r\n          {show ? t('hide') : t('detail')}\r\n        </Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType === 'encode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: E<sub>k</sub>( x ) = ( x + {keys} ) mod 26\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: D<sub>k</sub>( x ) = ( x - {keys} ) mod 26\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('decoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n\r\n            {processes.map((process, key) => {\r\n              return (\r\n                <ItemDetail key={key} level=\"second\">\r\n                  <span>\r\n                    \"{process.char}\" {t('ordinal')} {process.x}\r\n                  </span>\r\n                  <span>\r\n                    {actionType === 'encode' ? 'E' : 'D'}\r\n                    <sub>k</sub>( {process.x} ) = ( {process.x}{' '}\r\n                    {process.k < 0 ? '-' : '+'} {Math.abs(process.k)} ) ={' '}\r\n                    {process.x + process.k} ≡ {process.mod} mod {process.n}{' '}\r\n                  </span>{' '}\r\n                  {process.result}\r\n                </ItemDetail>\r\n              );\r\n            })}\r\n          </ContentDetail>\r\n        )}\r\n\r\n        {/* <Btn onClick={handlShowDetail}>Detail</Btn> */}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'JpwolyCpw',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 7,\r\n  processes: [],\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const ceasarSlice = createSlice({\r\n  name: 'ceasar',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n      state.processes = initialState.processes;\r\n      state.actionType = '';\r\n    },\r\n    increaseKey(state) {\r\n      state.key += 1;\r\n    },\r\n    decreaseKey(state) {\r\n      state.key -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, increaseKey, decreaseKey, getLoading } =\r\n  ceasarSlice.actions;\r\n\r\nexport const selectCeasar = (state) => state.ceasar;\r\n\r\nexport default ceasarSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport { decreaseKey, getData, increaseKey, selectCeasar } from './ceasarSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const increase = () => {\r\n    dispatch(increaseKey());\r\n  };\r\n\r\n  const decrease = () => {\r\n    dispatch(decreaseKey());\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        console.log(value);\r\n        getKey(25);\r\n      } else {\r\n        getKey(value);\r\n      }\r\n    } else {\r\n      getKey('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardCounter\r\n      label={t('key')}\r\n      inputValue={data.key}\r\n      handleCountChange={handleCountChange}\r\n      increase={increase}\r\n      decrease={decrease}\r\n      min={0}\r\n      max={25}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport Detail from './Detail';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport { getData, getLoading, resetData, selectCeasar } from './ceasarSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Ceasar = () => {\r\n  const data = useSelector(selectCeasar);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/ceasar/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'encode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/ceasar/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'decode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('ceasar')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <Detail\r\n        keys={data.key}\r\n        text={data.plaintext}\r\n        processes={data.processes}\r\n        actionType={data.actionType}\r\n      />\r\n      <CardDescription\r\n        cipher={t('ceasar')}\r\n        desc={t('ceasar_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Ceasar;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: '133457799BBCDFF0',\r\n  ciphertext: '0123456789ABCDEF',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '133457799BBCDFF0',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const desSlice = createSlice({\r\n  name: 'des',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = desSlice.actions;\r\n\r\nexport const selectDes = (state) => state.des;\r\n\r\nexport default desSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectDes } from './desSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectDes);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^a-fA-F0-9]/gi, ''));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">{t('key')}</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter your keys...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getData, getLoading, resetData, selectDes } from './desSlice';\r\n\r\nconst Des = () => {\r\n  const data = useSelector(selectDes);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value.replace(/[^a-fA-F0-9]/gi, '');\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/des/encode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/des/decode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('des')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('des')}\r\n        desc={t('des_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Data_Encryption_Standard\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Des;\r\n","import styled from 'styled-components';\r\nimport { Btn, TransformOutPut } from '../../components/Card/CardStyles';\r\n\r\nexport const CounterWrap = styled.div`\r\n  padding-bottom: 2rem;\r\n  & > div {\r\n    padding-bottom: 0.4rem;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n\r\n    @media only screen and (min-width: 1200px) {\r\n      padding-top: 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BtnLarge = styled(Btn)`\r\n  max-width: 12.6rem;\r\n  padding: 0 2rem;\r\n  width: 12.6rem;\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 0;\r\n    width: 11.6rem;\r\n  }\r\n`;\r\n\r\nexport const TransformInput = styled(TransformOutPut)`\r\n  & > div {\r\n    border-right: none;\r\n    padding: 2rem 1.8rem;\r\n    width: 100%;\r\n  }\r\n\r\n  ul {\r\n    left: -1.8rem;\r\n    width: calc(100% + 3.6rem);\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    & > div {\r\n      padding: 2rem 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    & > div {\r\n      padding: 2rem 3.8rem;\r\n    }\r\n\r\n    ul {\r\n      left: -3.8rem;\r\n      width: calc(100% + 7.6rem);\r\n    }\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    & > div {\r\n      padding: 2rem 1.8rem;\r\n    }\r\n  }\r\n`;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport { ContainerDetail, ContentDetail, handlShowDetail } from '../Utils';\r\n\r\nconst Detail = ({ processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={() => handlShowDetail(container, content, show, setShow)}>\r\n          {show ? t('hide') : t('detail')}\r\n        </Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType !== 'decode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: C<sub>1</sub> = a<sup>k</sup> mod p - C\r\n                  <sub>2</sub> = k * M mod p\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('params')}: p = {processes.p}; a = {processes.a}; x ={' '}\r\n                  {processes.x}; k = {processes.k}\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{processes.plaintext}\"\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  y = a<sup>x</sup> mod p = {processes.a}\r\n                  <sup>{processes.x}</sup> mod {processes.p} = {processes.y}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  k = y<sup>k</sup> mod p = {processes.y}\r\n                  <sup>{processes.k}</sup> mod {processes.p} = {processes.key}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  C<sub>1</sub> = a<sup>k</sup> mod p = {processes.a}\r\n                  <sup>{processes.k}</sup> mod {processes.p} = {processes.c1}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  C<sub>2</sub> = k * M mod p = {processes.key} *{' '}\r\n                  {processes.plaintext} mod {processes.p} = {processes.c2}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  C = ( C<sub>1</sub>, C<sub>2</sub> ) = ( {processes.c1},{' '}\r\n                  {processes.c2} )\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: M = C<sub>2</sub> * k mod p\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('params')}: p = {processes.p}; x = {processes.x}; c1 ={' '}\r\n                  {processes.c1}; c2 = {processes.c2}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  k = C<sub>1</sub>\r\n                  <sup>x</sup> mod p = {processes.c1}\r\n                  <sup>{processes.x}</sup> mod {processes.p} = {processes.key}\r\n                </ItemDetail>\r\n                <ItemDetail level=\"second\">\r\n                  M = C<sub>2</sub> * k mod p = {processes.c2} *{' '}\r\n                  {processes.reverseKey} mod {processes.p} ={' '}\r\n                  {processes.ciphertext} {'  '} ( k<sup>-1</sup> ={' '}\r\n                  {processes.reverseKey} )\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n          </ContentDetail>\r\n        )}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n\r\n// Styled\r\n\r\nexport const ItemDetail = styled.li`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: '3',\r\n  ciphertext: '23',\r\n  p: 97,\r\n  a: 5,\r\n  x: 58,\r\n  k: 36,\r\n  processes: [],\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const elgamalSlice = createSlice({\r\n  name: 'elgamal',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.p = action.payload.p;\r\n      state.a = action.payload.a;\r\n      state.x = action.payload.x;\r\n      state.k = action.payload.k;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.p = initialState.p;\r\n      state.a = initialState.a;\r\n      state.x = initialState.x;\r\n      state.k = initialState.k;\r\n      state.processes = initialState.processes;\r\n      state.actionType = '';\r\n    },\r\n    increaseP(state) {\r\n      state.p += 1;\r\n    },\r\n    decreaseP(state) {\r\n      state.p -= 1;\r\n    },\r\n    increaseA(state) {\r\n      state.a += 1;\r\n    },\r\n    decreaseA(state) {\r\n      state.a -= 1;\r\n    },\r\n    increaseX(state) {\r\n      state.x += 1;\r\n    },\r\n    decreaseX(state) {\r\n      state.x -= 1;\r\n    },\r\n    increaseK(state) {\r\n      state.k += 1;\r\n    },\r\n    decreaseK(state) {\r\n      state.k -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseP,\r\n  decreaseP,\r\n  increaseA,\r\n  decreaseA,\r\n  increaseX,\r\n  decreaseX,\r\n  increaseK,\r\n  decreaseK,\r\n  getLoading,\r\n} = elgamalSlice.actions;\r\n\r\nexport const selectElgamal = (state) => state.elgamal;\r\n\r\nexport default elgamalSlice.reducer;\r\n","import styled from 'styled-components';\r\nimport { BtnLarge } from '../modulo/ModuloStyles';\r\n\r\nexport const BtnLargeActive = styled(BtnLarge)`\r\n  ${(prop) => (prop.current ? 'box-shadow: 0 0 1rem 0 #4db6ac;' : '')};\r\n  background-color: ${(prop) =>\r\n    prop.current ? 'rgb(34, 150, 138)' : '#4db6ac'};\r\n`;\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport {\r\n  Btns,\r\n  Container as CardContainer,\r\n  Content,\r\n  OutputText,\r\n  Title,\r\n} from '../../components/Card/CardStyles';\r\nimport loadingIcon from '../../components/Card/loading.gif';\r\nimport { CounterWrap } from '../affine/AffineStyles';\r\nimport { BtnLarge } from '../modulo/ModuloStyles';\r\nimport { Container, submit, Wrap } from '../Utils';\r\nimport Detail from './Detail';\r\nimport {\r\n  decreaseA,\r\n  decreaseK,\r\n  decreaseP,\r\n  decreaseX,\r\n  getData,\r\n  getLoading,\r\n  increaseA,\r\n  increaseK,\r\n  increaseP,\r\n  increaseX,\r\n  resetData,\r\n  selectElgamal,\r\n} from './elgamalSlice';\r\nimport { BtnLargeActive } from './elgamalSlytes';\r\n\r\nconst ElGamal = () => {\r\n  const { t } = useTranslation();\r\n  const data = useSelector(selectElgamal);\r\n  const dispatch = useDispatch();\r\n  const [action, setAction] = useState('encode');\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getParams = (e, params) => {\r\n    const value = e.target.value ? parseInt(e.target.value) : '';\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        [params]: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async () => {\r\n    const { p, x, a, k, plaintext } = data;\r\n    const params = { p, x };\r\n    const input = { plaintext, a, k };\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/elgamal/encode',\r\n        input,\r\n        params,\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'encode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async () => {\r\n    // a as c1, k as c2\r\n    const { p, x, a, k } = data;\r\n    const params = { p, x };\r\n    const input = { a, k };\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/elgamal/decode',\r\n        input,\r\n        params,\r\n      );\r\n      getDataOnSubmit(ciphertext, processes, 'decode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const calculate = () => {\r\n    if (action === 'decode') {\r\n      return decode();\r\n    } else {\r\n      return encode();\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        {action === 'encode' && (\r\n          <CardInput\r\n            title={t('input')}\r\n            titleAlign={false}\r\n            plaintext={data.plaintext}\r\n            getPlaintext={getPlaintext}\r\n          />\r\n        )}\r\n\r\n        <CardContainer>\r\n          <Title align=\"center\">{t('elgamal')}</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLargeActive\r\n                current={action === 'decode' ? 0 : 1}\r\n                onClick={() => setAction('encode')}\r\n              >\r\n                {t('encode')}\r\n              </BtnLargeActive>\r\n              <BtnLargeActive\r\n                current={action === 'decode' ? 1 : 0}\r\n                onClick={() => setAction('decode')}\r\n              >\r\n                {t('decode')}\r\n              </BtnLargeActive>\r\n            </Btns>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>{t('cal')}</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label=\"p\"\r\n                inputValue={data.p}\r\n                handleCountChange={(e) => getParams(e, 'p')}\r\n                increase={() => dispatch(increaseP())}\r\n                decrease={() => dispatch(decreaseP())}\r\n              />\r\n              <CardCounter\r\n                label=\"x\"\r\n                inputValue={data.x}\r\n                handleCountChange={(e) => getParams(e, 'x')}\r\n                increase={() => dispatch(increaseX())}\r\n                decrease={() => dispatch(decreaseX())}\r\n              />\r\n              <CardCounter\r\n                label={data.actionType === 'decode' ? 'c1' : 'a'}\r\n                inputValue={data.a}\r\n                handleCountChange={(e) => getParams(e, 'a')}\r\n                increase={() => dispatch(increaseA())}\r\n                decrease={() => dispatch(decreaseA())}\r\n              />\r\n              <CardCounter\r\n                label={data.actionType === 'decode' ? 'c2' : 'k'}\r\n                inputValue={data.k}\r\n                handleCountChange={(e) => getParams(e, 'k')}\r\n                increase={() => dispatch(increaseK())}\r\n                decrease={() => dispatch(decreaseK())}\r\n              />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>{t('output')}</Title>\r\n          <Content>\r\n            <OutputText>\r\n              {data.loadingOutput ? (\r\n                <img src={loadingIcon} alt=\"\" />\r\n              ) : (\r\n                data.ciphertext\r\n              )}\r\n            </OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <Detail processes={data.processes} actionType={data.actionType} />\r\n      <CardDescription\r\n        cipher={t('elgamal')}\r\n        desc={t('elgamal_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Modular_multiplicative_inverse\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ElGamal;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport styled from 'styled-components';\r\nimport { ContainerDetail, ContentDetail, handlShowDetail } from '../Utils';\r\n\r\nconst Detail = ({ keys, text, processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={() => handlShowDetail(container, content, show, setShow)}>\r\n          {show ? t('hide') : t('detail')}\r\n        </Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType === 'encode' ? (\r\n              <>\r\n                <ItemDetail>{t('encode_func')}: C = P * k</ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: P = C * k<sup>-1</sup>\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('decoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n\r\n            <ItemDetail level=\"second\">\r\n              {actionType === 'encode' ? 'P' : 'C'} =\r\n              {processes.matrix_chars.map((item, index) => {\r\n                return (\r\n                  <SmallBlock key={index} type=\"double\">\r\n                    [ {item[0]} {item[1]} ]\r\n                  </SmallBlock>\r\n                );\r\n              })}\r\n              =\r\n              {processes.matrix_chars_as_int.map((item, index) => {\r\n                return (\r\n                  <SmallBlock key={index} type=\"triple\">\r\n                    [{item[0]} {item[1]}]\r\n                  </SmallBlock>\r\n                );\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              det(k) = {keys.a} * {keys.d} - {keys.b} * {keys.c} ={' '}\r\n              {keys.a * keys.d - keys.b * keys.c}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              1 / det(k) = {processes.inverse_det}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              Cof(k) = [ [ {processes.reverse_key[0][0][0]}{' '}\r\n              {processes.reverse_key[0][0][1]} ] [{' '}\r\n              {processes.reverse_key[0][1][0]} {processes.reverse_key[0][1][1]}{' '}\r\n              ] ] = [ [ {processes.reverse_key[1][0][0]}{' '}\r\n              {processes.reverse_key[1][0][1]} ] [{' '}\r\n              {processes.reverse_key[1][1][0]} {processes.reverse_key[1][1][1]}{' '}\r\n              ] ]\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              Cof(k)<sup>T</sup> = [ [ {processes.reverse_key[2][0][0]}{' '}\r\n              {processes.reverse_key[2][0][1]} ] [{' '}\r\n              {processes.reverse_key[2][1][0]} {processes.reverse_key[2][1][1]}{' '}\r\n              ] ]\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              k<sup>-1</sup> = {processes.inverse_det} * [ [{' '}\r\n              {processes.reverse_key[2][0][0]} {processes.reverse_key[2][0][1]}{' '}\r\n              ] [ {processes.reverse_key[2][1][0]}{' '}\r\n              {processes.reverse_key[2][1][1]} ] ] = [ [{' '}\r\n              {processes.reverse_key[3][0][0]} {processes.reverse_key[3][0][1]}{' '}\r\n              ] [ {processes.reverse_key[3][1][0]}{' '}\r\n              {processes.reverse_key[3][1][1]} ] ]\r\n            </ItemDetail>\r\n            {processes.steps.map((item, index) => {\r\n              return (\r\n                <ItemDetail level=\"second\" key={index}>\r\n                  {actionType === 'encode' ? 'P' : 'C'}\r\n                  <sub>{index + 1}</sub> = [ {item.p[0]} {item.p[1]} ] :{' '}\r\n                  {actionType === 'encode' ? 'C' : 'P'}\r\n                  <sub>{index + 1}</sub> = {actionType === 'encode' ? 'P' : 'C'}\r\n                  <sub>{index + 1}</sub> *{' '}\r\n                  {actionType === 'encode' ? (\r\n                    'k'\r\n                  ) : (\r\n                    <span>\r\n                      k<sup>{-1}</sup>\r\n                    </span>\r\n                  )}{' '}\r\n                  = [ {item.p[0]} {item.p[1]} ] * [ [ {item.k[0][0]}{' '}\r\n                  {item.k[0][1]} ] [ {item.k[1][0]} {item.k[1][1]} ] ] = [{' '}\r\n                  {item.result_as_int[0]} {item.result_as_int[1]} ] = [{' '}\r\n                  {item.result_as_char[0]} {item.result_as_char[1]} ]\r\n                </ItemDetail>\r\n              );\r\n            })}\r\n          </ContentDetail>\r\n        )}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n\r\n// Styled\r\nconst SmallBlock = styled.span`\r\n  display: inline-block;\r\n  min-width: ${(props) =>\r\n    props.type === 'double'\r\n      ? '4.8rem'\r\n      : props.type === 'triple'\r\n      ? '5.2rem'\r\n      : '2.4rem'} !important;\r\n  text-align: center;\r\n  width: ${(props) =>\r\n    props.type === 'double'\r\n      ? '4.8rem'\r\n      : props.type === 'triple'\r\n      ? '5.2rem'\r\n      : '2.4rem'};\r\n\r\n  & > span {\r\n    display: inline-block;\r\n    min-width: 2.4rem;\r\n    width: 2.4rem;\r\n  }\r\n`;\r\n\r\nexport const ItemDetail = styled.li`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'WuhcutBzzi',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: { a: 3, b: 3, c: 2, d: 5 },\r\n  processes: {},\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const hillSlice = createSlice({\r\n  name: 'hill',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n      state.processes = initialState.processes;\r\n      state.actionType = initialState.actionType;\r\n    },\r\n    increaseA(state) {\r\n      state.key.a += 1;\r\n    },\r\n    increaseB(state) {\r\n      state.key.b += 1;\r\n    },\r\n    increaseC(state) {\r\n      state.key.c += 1;\r\n    },\r\n    increaseD(state) {\r\n      state.key.d += 1;\r\n    },\r\n    decreaseA(state) {\r\n      state.key.a -= 1;\r\n    },\r\n    decreaseB(state) {\r\n      state.key.b -= 1;\r\n    },\r\n    decreaseC(state) {\r\n      state.key.c -= 1;\r\n    },\r\n    decreaseD(state) {\r\n      state.key.d -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseA,\r\n  decreaseA,\r\n  increaseB,\r\n  decreaseB,\r\n  increaseC,\r\n  decreaseC,\r\n  increaseD,\r\n  decreaseD,\r\n  getLoading,\r\n} = hillSlice.actions;\r\n\r\nexport const selectHill = (state) => state.hill;\r\n\r\nexport default hillSlice.reducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport { CounterWrap } from '../affine/AffineStyles';\r\nimport {\r\n  decreaseA,\r\n  decreaseB,\r\n  decreaseC,\r\n  decreaseD,\r\n  getData,\r\n  increaseA,\r\n  increaseB,\r\n  increaseC,\r\n  increaseD,\r\n  selectHill,\r\n} from './hillSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectHill);\r\n  const dispatch = useDispatch();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e, field) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        getKey({ ...data.key, [field]: 25 });\r\n      } else {\r\n        getKey({ ...data.key, [field]: value });\r\n      }\r\n    } else {\r\n      getKey({ ...data.key, [field]: '' });\r\n    }\r\n  };\r\n\r\n  const handleACountChange = (e) => {\r\n    handleCountChange(e, 'a');\r\n  };\r\n\r\n  const handleBCountChange = (e) => {\r\n    handleCountChange(e, 'b');\r\n  };\r\n\r\n  const handleCCountChange = (e) => {\r\n    handleCountChange(e, 'c');\r\n  };\r\n\r\n  const handleDCountChange = (e) => {\r\n    handleCountChange(e, 'd');\r\n  };\r\n\r\n  const increaseACounter = () => {\r\n    dispatch(increaseA());\r\n  };\r\n\r\n  const decreaseACounter = () => {\r\n    dispatch(decreaseA());\r\n  };\r\n\r\n  const increaseBCounter = () => {\r\n    dispatch(increaseB());\r\n  };\r\n\r\n  const decreaseBCounter = () => {\r\n    dispatch(decreaseB());\r\n  };\r\n\r\n  const increaseCCounter = () => {\r\n    dispatch(increaseC());\r\n  };\r\n\r\n  const decreaseCCounter = () => {\r\n    dispatch(decreaseC());\r\n  };\r\n\r\n  const increaseDCounter = () => {\r\n    dispatch(increaseD());\r\n  };\r\n\r\n  const decreaseDCounter = () => {\r\n    dispatch(decreaseD());\r\n  };\r\n\r\n  return (\r\n    <CounterWrap>\r\n      <CardCounter\r\n        label=\"INDEX / 1 - 1\"\r\n        inputValue={data.key.a}\r\n        handleCountChange={handleACountChange}\r\n        increase={increaseACounter}\r\n        decrease={decreaseACounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n      <CardCounter\r\n        label=\"INDEX / 1 - 2\"\r\n        inputValue={data.key.b}\r\n        handleCountChange={handleBCountChange}\r\n        increase={increaseBCounter}\r\n        decrease={decreaseBCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n      <CardCounter\r\n        label=\"INDEX / 2 - 1\"\r\n        inputValue={data.key.c}\r\n        handleCountChange={handleCCountChange}\r\n        increase={increaseCCounter}\r\n        decrease={decreaseCCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n      <CardCounter\r\n        label=\"INDEX / 2 - 2\"\r\n        inputValue={data.key.d}\r\n        handleCountChange={handleDCountChange}\r\n        increase={increaseDCounter}\r\n        decrease={decreaseDCounter}\r\n        min={0}\r\n        max={25}\r\n      />\r\n    </CounterWrap>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport Detail from './Detail';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getData, getLoading, resetData, selectHill } from './hillSlice';\r\n\r\nconst Hill = () => {\r\n  const data = useSelector(selectHill);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const convertKeyToChar = (key) => {\r\n    let chars = '';\r\n\r\n    for (let k in key) {\r\n      chars += String.fromCharCode(65 + key[k]);\r\n    }\r\n    return chars;\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/hill/encode',\r\n        text,\r\n        convertKeyToChar(key),\r\n      );\r\n\r\n      // check error\r\n      if (ciphertext === 'error_1') {\r\n        getCiphertext(t('hill_err_1'));\r\n      } else if (ciphertext === 'error_2') {\r\n        getCiphertext(t('hill_err_2'));\r\n      } else {\r\n        getDataOnSubmit(ciphertext, processes, 'encode');\r\n      }\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    console.log(convertKeyToChar(key));\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/hill/decode',\r\n        text,\r\n        convertKeyToChar(key),\r\n      );\r\n\r\n      // check error\r\n      if (ciphertext === 'error_1') {\r\n        getCiphertext(t('hill_err_1'));\r\n      } else if (ciphertext === 'error_2') {\r\n        getCiphertext(t('hill_err_2'));\r\n      } else {\r\n        getDataOnSubmit(ciphertext, processes, 'decode');\r\n      }\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('hill')}\r\n          titleAlign=\"center\"\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          keys={data.key}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <Detail\r\n        keys={data.key}\r\n        text={data.plaintext}\r\n        processes={data.processes}\r\n        actionType={data.actionType}\r\n      />\r\n      <CardDescription\r\n        cipher={t('hill')}\r\n        desc={t('hill_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Hill_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Hill;\r\n","import { useState } from 'react';\r\nimport bigInt from 'big-integer';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport {\r\n  Btns,\r\n  Container as CardContainer,\r\n  Content,\r\n  OutputText,\r\n  Title,\r\n} from '../../components/Card/CardStyles';\r\nimport { BtnLarge, CounterWrap } from '../modulo/ModuloStyles';\r\nimport { Container, Wrap } from '../Utils';\r\n\r\nconst ModularInverse = () => {\r\n  const [output, setOutput] = useState(9);\r\n  const [input, setInput] = useState({\r\n    number: 5,\r\n    modulo: 11,\r\n  });\r\n  const { t } = useTranslation();\r\n\r\n  const getModularInverse = () => {\r\n    try {\r\n      const result = Number(bigInt(input.number).modInv(input.modulo));\r\n      if (result < 0) {\r\n        return result + 26;\r\n      } else {\r\n        return result;\r\n      }\r\n    } catch (error) {\r\n      return t('not_found');\r\n    }\r\n  };\r\n\r\n  const calculate = () => {\r\n    setOutput(getModularInverse());\r\n  };\r\n\r\n  const handleCountChange = (value, field) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: parseInt(value) });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const inOrDecrease = (value, field, number) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: value + number });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    handleCountChange(e.target.value, 'number');\r\n  };\r\n\r\n  const increaseNumber = () => {\r\n    const value = input.number;\r\n    inOrDecrease(value, 'number', 1);\r\n  };\r\n\r\n  const decreaseNumber = () => {\r\n    const value = input.number;\r\n    inOrDecrease(value, 'number', -1);\r\n  };\r\n\r\n  const handleModuloChange = (e) => {\r\n    handleCountChange(e.target.value, 'modulo');\r\n  };\r\n\r\n  const increaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', 1);\r\n  };\r\n\r\n  const decreaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', -1);\r\n  };\r\n\r\n  const reset = () => {\r\n    setInput({\r\n      number: 5,\r\n      modulo: 11,\r\n    });\r\n    setOutput(9);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardContainer>\r\n          <Title>{t('input_number')}</Title>\r\n          <Content>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label={t('type_1')}\r\n                inputValue={input.number}\r\n                handleCountChange={handleNumberChange}\r\n                increase={increaseNumber}\r\n                decrease={decreaseNumber}\r\n              />\r\n              <CardCounter\r\n                label=\"modulo\"\r\n                inputValue={input.modulo}\r\n                handleCountChange={handleModuloChange}\r\n                increase={increaseModulo}\r\n                decrease={decreaseModulo}\r\n              />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer style={{ height: '29.5rem' }}>\r\n          <Title align=\"center\">{t('mod_inverse')}</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>{t('cal')}</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>{t('output_number')}</Title>\r\n          <Content>\r\n            <OutputText>{output}</OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('mod_inverse')}\r\n        desc={t('mod_inverse_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Modular_multiplicative_inverse\"\r\n        utils={t('oper_mod_inverse')}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ModularInverse;\r\n","import bigInt from 'big-integer';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { RiArrowDownSFill } from 'react-icons/ri';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport {\r\n  Btns,\r\n  CaseStrategy,\r\n  Container as CardContainer,\r\n  Content,\r\n  DropdownButton,\r\n  DropdownList,\r\n  OutputText,\r\n  Title,\r\n  WrapDropdown,\r\n} from '../../components/Card/CardStyles';\r\nimport { Container, getCurrentCase, getCurrentIndex, Wrap } from '../Utils';\r\nimport { BtnLarge, CounterWrap, TransformInput } from './ModuloStyles';\r\n\r\nconst Modulo = () => {\r\n  const [actions, setActions] = useState([\r\n    { value: 'number', active: true },\r\n    { value: 'power', active: false },\r\n  ]);\r\n  const currentAction = getCurrentCase(actions);\r\n  const currentIndex = getCurrentIndex(actions);\r\n  const [showActions, setShowActions] = useState(false);\r\n  const [output, setOutput] = useState(5);\r\n  const [input, setInput] = useState({\r\n    base: 5,\r\n    exponent: 1,\r\n    modulo: 11,\r\n  });\r\n  const { t } = useTranslation();\r\n\r\n  const handleSelectAction = (e) => {\r\n    setShowActions(false);\r\n    const value = e.target.id;\r\n    setActions((actions) => {\r\n      return actions.map((action) => {\r\n        if (action.value === value) {\r\n          return { ...action, active: true };\r\n        } else {\r\n          return { ...action, active: false };\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const calculate = () => {\r\n    let result = 0;\r\n    if (currentAction === 'number') {\r\n      result = Number(bigInt(input.base).mod(input.modulo));\r\n      if (result < 0) {\r\n        result += 26;\r\n      }\r\n    } else {\r\n      result = Number(bigInt(input.base).pow(input.exponent).mod(input.modulo));\r\n      if (result < 0) {\r\n        result += 26;\r\n      }\r\n    }\r\n    setOutput(result);\r\n  };\r\n\r\n  const handleCountChange = (value, field) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: parseInt(value) });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const inOrDecrease = (value, field, number) => {\r\n    if (value) {\r\n      setInput({ ...input, [field]: value + number });\r\n    } else {\r\n      setInput({ ...input, [field]: value });\r\n    }\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    handleCountChange(e.target.value, 'base');\r\n  };\r\n\r\n  const increaseNumber = () => {\r\n    const value = input.base;\r\n    inOrDecrease(value, 'base', 1);\r\n  };\r\n\r\n  const decreaseNumber = () => {\r\n    const value = input.base;\r\n    inOrDecrease(value, 'base', -1);\r\n  };\r\n\r\n  const handlePowerChange = (e) => {\r\n    handleCountChange(e.target.value, 'exponent');\r\n  };\r\n\r\n  const increasePower = () => {\r\n    const value = input.exponent;\r\n    inOrDecrease(value, 'exponent', 1);\r\n  };\r\n\r\n  const decreasePower = () => {\r\n    const value = input.exponent;\r\n    inOrDecrease(value, 'exponent', -1);\r\n  };\r\n\r\n  const handleModuloChange = (e) => {\r\n    handleCountChange(e.target.value, 'modulo');\r\n  };\r\n\r\n  const increaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', 1);\r\n  };\r\n\r\n  const decreaseModulo = () => {\r\n    const value = input.modulo;\r\n    inOrDecrease(value, 'modulo', -1);\r\n  };\r\n\r\n  const reset = () => {\r\n    setInput({\r\n      base: 5,\r\n      exponent: 1,\r\n      modulo: 11,\r\n    });\r\n    setOutput(5);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardContainer>\r\n          <Title>{t('input_number')}</Title>\r\n          <Content>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label={currentAction === 'number' ? t('type_1') : t('type_3')}\r\n                inputValue={input.base}\r\n                handleCountChange={handleNumberChange}\r\n                increase={increaseNumber}\r\n                decrease={decreaseNumber}\r\n              />\r\n              {currentAction === 'power' && (\r\n                <CardCounter\r\n                  label={t('type_4')}\r\n                  inputValue={input.exponent}\r\n                  handleCountChange={handlePowerChange}\r\n                  increase={increasePower}\r\n                  decrease={decreasePower}\r\n                  min={0}\r\n                />\r\n              )}\r\n              <CardCounter\r\n                label=\"modulo\"\r\n                inputValue={input.modulo}\r\n                handleCountChange={handleModuloChange}\r\n                increase={increaseModulo}\r\n                decrease={decreaseModulo}\r\n              />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer style={{ height: '29.5rem' }}>\r\n          <Title align=\"center\">{t('cal_modulo')}</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>{t('cal')}</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n\r\n            <TransformInput>\r\n              <CaseStrategy>\r\n                <label>{t('type_input')}</label>\r\n                <WrapDropdown>\r\n                  <DropdownButton onClick={() => setShowActions(!showActions)}>\r\n                    {t(`type_${currentIndex}`)}\r\n                  </DropdownButton>\r\n                  {showActions && (\r\n                    <DropdownList>\r\n                      {actions.map((strategy, key) => {\r\n                        return (\r\n                          <li\r\n                            className={strategy.active ? 'active' : ''}\r\n                            key={key}\r\n                            id={strategy.value}\r\n                            onClick={handleSelectAction}\r\n                          >\r\n                            {t(`type_${key + 1}`)}\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </DropdownList>\r\n                  )}\r\n                  <RiArrowDownSFill />\r\n                </WrapDropdown>\r\n              </CaseStrategy>\r\n            </TransformInput>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>{t('output_number')}</Title>\r\n          <Content>\r\n            <OutputText>{output}</OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('oper_modulo')}\r\n        desc={t('modulo_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Modulo_operation\"\r\n        utils={t('cal_modulo')}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Modulo;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'OebxcpReb',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 7,\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const multiplicativeSlice = createSlice({\r\n  name: 'multiplicative',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    increaseKey(state) {\r\n      state.key += 1;\r\n    },\r\n    decreaseKey(state) {\r\n      state.key -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, increaseKey, decreaseKey, getLoading } =\r\n  multiplicativeSlice.actions;\r\n\r\nexport const selectMultiplicative = (state) => state.multiplicative;\r\n\r\nexport default multiplicativeSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport {\r\n  decreaseKey,\r\n  getData,\r\n  increaseKey,\r\n  selectMultiplicative,\r\n} from './multiplicativeSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectMultiplicative);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const increase = () => {\r\n    dispatch(increaseKey());\r\n  };\r\n\r\n  const decrease = () => {\r\n    dispatch(decreaseKey());\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    if (e.target.value) {\r\n      const value = parseInt(e.target.value);\r\n      if (value > 25) {\r\n        console.log(value);\r\n        getKey(25);\r\n      } else {\r\n        getKey(value);\r\n      }\r\n    } else {\r\n      getKey('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardCounter\r\n      label={t('key')}\r\n      inputValue={data.key}\r\n      handleCountChange={handleCountChange}\r\n      increase={increase}\r\n      decrease={decrease}\r\n      min={0}\r\n      max={25}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport {\r\n  getData,\r\n  getLoading,\r\n  resetData,\r\n  selectMultiplicative,\r\n} from './multiplicativeSlice';\r\nimport ExtraInput from './ExtraInput';\r\n\r\nconst Multiplicative = () => {\r\n  const data = useSelector(selectMultiplicative);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/multiplicative/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/multiplicative/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('multiplicative')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('multiplicative')}\r\n        desc={t('multiplicative_desc')}\r\n        link=\"https://www.geeksforgeeks.org/traditional-symmetric-ciphers/#:~:text=Multiplicative%20Cipher%20%E2%80%93,obtain%20back%20the%20plain%2Dtext.\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Multiplicative;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'piVrehpiC',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const reverseSlice = createSlice({\r\n  name: 'reverse',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = reverseSlice.actions;\r\n\r\nexport const selectReverse = (state) => state.reverse;\r\n\r\nexport default reverseSlice.reducer;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport { getData, getLoading, resetData, selectReverse } from './reverseSlice';\r\n\r\nconst Reverse = () => {\r\n  const data = useSelector(selectReverse);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/encode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const decode = async (text) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/reverse/decode', text);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('reverse')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('reverse')}\r\n        desc={t('reverse_desc')}\r\n        link=\"https://www.tutorialspoint.com/cryptography_with_python/cryptography_with_python_reverse_cipher.htm\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Reverse;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: block;\r\n  margin-top: 1rem;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  input {\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nexport const State = styled.div`\r\n  label {\r\n    display: inline-block;\r\n    color: ${({ theme }) => theme.text};\r\n    cursor: pointer;\r\n    font-size: 1.4rem;\r\n    font-weight: 400;\r\n    position: initial;\r\n    text-indent: 2.4rem;\r\n    vertical-align: bottom;\r\n\r\n    &:before,\r\n    &:after {\r\n      background-color: transparent;\r\n      border: 0.1rem solid transparent;\r\n      border-radius: 50%;\r\n      content: '';\r\n      height: 1.4rem;\r\n      position: absolute;\r\n      left: 0;\r\n      top: 1px;\r\n      width: 1.4rem;\r\n    }\r\n\r\n    &:before {\r\n      border-color: ${(props) => (props.active ? '#26a69a' : '#797f86')};\r\n    }\r\n\r\n    &:after {\r\n      background-color: #26a69a;\r\n      transition: transform 0.25s ease;\r\n      transform: ${(props) => (props.active ? 'scale(0.45)' : 'scale(0)')};\r\n    }\r\n  }\r\n`;\r\n","import { Container, State, Wrap } from './RadioBoxStyles';\r\n\r\nconst RadioBox = ({ label, name, value, current, handleChange }) => {\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <input\r\n          type=\"radio\"\r\n          name={name}\r\n          id={value}\r\n          value={value}\r\n          checked={current === value ? true : false}\r\n          onChange={(e) => handleChange(e.target.id)}\r\n        />\r\n        <State active={current === value ? 1 : 0}>\r\n          <label htmlFor={value}>{label}</label>\r\n        </State>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RadioBox;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'PvcureIvc',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '13',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const rot13Slice = createSlice({\r\n  name: 'rot13',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = rot13Slice.actions;\r\n\r\nexport const selectRot13 = (state) => state.rot13;\r\n\r\nexport default rot13Slice.reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  border-bottom: 0.1rem solid ${({ theme }) => theme.border};\r\n  padding: 1rem 1.8rem;\r\n\r\n  & > label {\r\n    color: #4db6ac;\r\n    display: block;\r\n    font-size: 1.4rem;\r\n    position: relative;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media only screen and (min-width: 576px) {\r\n    padding: 2rem 2rem 1rem 3.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    padding: 1.6rem 1.8rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 1400px) {\r\n    padding: 2rem 2rem 1rem 3.8rem;\r\n  }\r\n`;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RadioBox from '../../components/RadioBox';\r\nimport { getData, selectRot13 } from './rot13Slice';\r\nimport { Container } from './Rot13Styles';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectRot13);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <label>{t('variant')}</label>\r\n      <RadioBox\r\n        label=\"ROT5 (0-9)\"\r\n        name=\"variant\"\r\n        value=\"5\"\r\n        current={data.key}\r\n        handleChange={getKey}\r\n      />\r\n      <RadioBox\r\n        label=\"ROT13 (A-Z, a-z)\"\r\n        name=\"variant\"\r\n        value=\"13\"\r\n        current={data.key}\r\n        handleChange={getKey}\r\n      />\r\n      <RadioBox\r\n        label=\"ROT18 (0-9, A-Z, a-z)\"\r\n        name=\"variant\"\r\n        value=\"18\"\r\n        current={data.key}\r\n        handleChange={getKey}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getData, getLoading, resetData, selectRot13 } from './rot13Slice';\r\n\r\nconst Rot13 = () => {\r\n  const data = useSelector(selectRot13);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/rot13/encode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/rot13/decode',\r\n        text,\r\n        parseInt(key),\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('rot13')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('rot13')}\r\n        desc={t('rot13_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/ROT13\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Rot13;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport { ContainerDetail, ContentDetail, handlShowDetail } from '../Utils';\r\n\r\nconst Detail = ({ processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={() => handlShowDetail(container, content, show, setShow)}>\r\n          {show ? t('hide') : t('detail')}\r\n        </Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType !== 'decode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: C = M<sup>e</sup> mod N\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('decode_func')}: M = C<sup>d</sup> mod N\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n            <ItemDetail>\r\n              {t('params')}: p = {processes.p}; q = {processes.q};{' '}\r\n              {processes.d === 1 ? 'e' : 'd'} ={' '}\r\n              {processes.d === 1 ? processes.e : processes.d}\r\n            </ItemDetail>\r\n            <ItemDetail>\r\n              {t('encoding')}: \"{processes.plaintext}\"\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              n = p * q = {processes.p} * {processes.q} = {processes.n}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              φ(N) = φ( {processes.p}, {processes.q} ) = {processes.p - 1} *{' '}\r\n              {processes.q - 1} = {(processes.p - 1) * (processes.q - 1)}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              ( {processes.d === 1 ? 'e' : 'd'}, φ(N) ) = ({' '}\r\n              {processes.d === 1 ? processes.e : processes.d}, {processes.phi})\r\n              = 1; {processes.d === 1 ? 'd' : 'e'} ={' '}\r\n              {processes.d === 1 ? processes.newD : processes.newE}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              K<sub>p</sub> = ( e, N ) = ( {processes.newE}, {processes.n} )\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              K<sub>s</sub> = K<sub>p</sub>\r\n              <sup>-1</sup> = ( d, p, q ) = ( {processes.newD}, {processes.p},{' '}\r\n              {processes.q} )\r\n            </ItemDetail>\r\n            {processes.intPlaintext.map((num, index) => {\r\n              return (\r\n                <ItemDetail key={index} level=\"second\">\r\n                  {actionType === 'encode' ? 'C' : 'M'} ={' '}\r\n                  {actionType === 'encode' ? 'M' : 'C'}\r\n                  <sup>e</sup> mod N = {num}\r\n                  <sup>\r\n                    {actionType === 'encode' ? processes.newE : processes.newD}\r\n                  </sup>{' '}\r\n                  mod {processes.n} = {processes.ciphertext.split(' ')[index]} ={' '}\r\n                  {processes.chars[index]}\r\n                </ItemDetail>\r\n              );\r\n            })}\r\n          </ContentDetail>\r\n        )}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n\r\n// Styled\r\n\r\nexport const ItemDetail = styled.li`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { BtnLarge } from '../modulo/ModuloStyles';\r\nimport { Counter as CounterCustom } from '../../components/Card/CardStyles';\r\n\r\nexport const BtnLargeActive = styled(BtnLarge)`\r\n  ${(prop) => (prop.current ? 'box-shadow: 0 0 1rem 0 #4db6ac;' : '')};\r\n  background-color: ${(prop) =>\r\n    prop.current ? 'rgb(34, 150, 138)' : '#4db6ac'};\r\n`;\r\n\r\nexport const Counter = styled(CounterCustom)`\r\n  border-right: 0 !important;\r\n  width: 100% !important;\r\n  label {\r\n    button {\r\n      position: initial;\r\n      &:first-child {\r\n        margin-right: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: '26',\r\n  ciphertext: '23',\r\n  p: 11,\r\n  q: 47,\r\n  e: 3,\r\n  d: 1,\r\n  processes: [],\r\n  loadingOutput: false,\r\n  actionType: '',\r\n};\r\n\r\nexport const rsaSlice = createSlice({\r\n  name: 'rsa',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.p = action.payload.p;\r\n      state.q = action.payload.q;\r\n      state.e = action.payload.e;\r\n      state.d = action.payload.d;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.p = initialState.p;\r\n      state.q = initialState.q;\r\n      state.e = initialState.e;\r\n      state.d = initialState.d;\r\n      state.processes = initialState.processes;\r\n      state.actionType = '';\r\n      state.loadingOutput = '';\r\n    },\r\n    increaseP(state) {\r\n      state.p += 1;\r\n    },\r\n    decreaseP(state) {\r\n      state.p -= 1;\r\n    },\r\n    increaseQ(state) {\r\n      state.q += 1;\r\n    },\r\n    decreaseQ(state) {\r\n      state.q -= 1;\r\n    },\r\n    increaseE(state) {\r\n      state.e += 1;\r\n    },\r\n    decreaseE(state) {\r\n      state.e -= 1;\r\n    },\r\n    increaseD(state) {\r\n      state.d += 1;\r\n    },\r\n    decreaseD(state) {\r\n      state.d -= 1;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getData,\r\n  resetData,\r\n  increaseP,\r\n  decreaseP,\r\n  increaseQ,\r\n  decreaseQ,\r\n  increaseE,\r\n  decreaseE,\r\n  increaseD,\r\n  decreaseD,\r\n  getLoading,\r\n} = rsaSlice.actions;\r\n\r\nexport const selectRsa = (state) => state.rsa;\r\n\r\nexport default rsaSlice.reducer;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CountBtn, InputGroup } from '../../components/Card/CardStyles';\r\nimport { Counter, BtnLargeActive } from './rsaSlytes';\r\nimport {\r\n  decreaseE,\r\n  increaseE,\r\n  decreaseD,\r\n  increaseD,\r\n  selectRsa,\r\n  getData,\r\n} from './rsaSlice';\r\n\r\nconst ExtraInput = ({ getParams }) => {\r\n  const data = useSelector(selectRsa);\r\n  const dispatch = useDispatch();\r\n  const [selectInput, setSelectInput] = useState('e');\r\n\r\n  const selectTypeInput = (curr, param) => {\r\n    setSelectInput(curr);\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        [param]: 1,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectInput === 'e' ? (\r\n        <Counter>\r\n          <div>\r\n            <label htmlFor=\"e\">\r\n              <BtnLargeActive\r\n                current={selectInput === 'e' ? 1 : 0}\r\n                onClick={() => selectTypeInput('e', 'd')}\r\n              >\r\n                e\r\n              </BtnLargeActive>\r\n              <BtnLargeActive\r\n                current={selectInput === 'd' ? 1 : 0}\r\n                onClick={() => selectTypeInput('d', 'e')}\r\n              >\r\n                d\r\n              </BtnLargeActive>\r\n            </label>\r\n\r\n            <InputGroup>\r\n              <CountBtn\r\n                colorDisabled={(theme) => theme.color}\r\n                onClick={() => dispatch(decreaseE())}\r\n              >\r\n                {' '}\r\n                -{' '}\r\n              </CountBtn>\r\n              <input\r\n                type=\"number\"\r\n                value={data.e}\r\n                onChange={(e) => getParams(e, 'e')}\r\n              />\r\n              <CountBtn\r\n                colorDisabled={(theme) => theme.color}\r\n                onClick={() => dispatch(increaseE())}\r\n              >\r\n                {' '}\r\n                +{' '}\r\n              </CountBtn>\r\n            </InputGroup>\r\n          </div>\r\n        </Counter>\r\n      ) : (\r\n        <Counter>\r\n          <div>\r\n            <label htmlFor=\"d\">\r\n              <BtnLargeActive\r\n                current={selectInput === 'e' ? 1 : 0}\r\n                onClick={() => selectTypeInput('e', 'd')}\r\n              >\r\n                e\r\n              </BtnLargeActive>\r\n              <BtnLargeActive\r\n                current={selectInput === 'd' ? 1 : 0}\r\n                onClick={() => selectTypeInput('d', 'e')}\r\n              >\r\n                d\r\n              </BtnLargeActive>\r\n            </label>\r\n\r\n            <InputGroup>\r\n              <CountBtn\r\n                colorDisabled={(theme) => theme.color}\r\n                onClick={() => dispatch(decreaseD())}\r\n              >\r\n                {' '}\r\n                -{' '}\r\n              </CountBtn>\r\n              <input\r\n                type=\"number\"\r\n                value={data.d}\r\n                onChange={(e) => getParams(e, 'd')}\r\n              />\r\n              <CountBtn\r\n                colorDisabled={(theme) => theme.color}\r\n                onClick={() => dispatch(increaseD())}\r\n              >\r\n                {' '}\r\n                +{' '}\r\n              </CountBtn>\r\n            </InputGroup>\r\n          </div>\r\n        </Counter>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardCounter from '../../components/Card/CardCounter';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport {\r\n  Btns,\r\n  Container as CardContainer,\r\n  Content,\r\n  OutputText,\r\n  Title,\r\n} from '../../components/Card/CardStyles';\r\nimport loadingIcon from '../../components/Card/loading.gif';\r\nimport { CounterWrap } from '../affine/AffineStyles';\r\nimport { BtnLarge } from '../modulo/ModuloStyles';\r\nimport { Container, submit, Wrap } from '../Utils';\r\nimport Detail from './Detail';\r\nimport ExtraInput from './ExtraInput';\r\nimport {\r\n  decreaseP,\r\n  decreaseQ,\r\n  getData,\r\n  getLoading,\r\n  increaseP,\r\n  increaseQ,\r\n  resetData,\r\n  selectRsa,\r\n} from './rsaSlice';\r\nimport { BtnLargeActive } from './rsaSlytes';\r\n\r\nconst Rsa = () => {\r\n  const { t } = useTranslation();\r\n  const data = useSelector(selectRsa);\r\n  const dispatch = useDispatch();\r\n  const [action, setAction] = useState('encode');\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getParams = (e, params) => {\r\n    const value = e.target.value ? parseInt(e.target.value) : '';\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        [params]: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async () => {\r\n    const { p, q, e, d, plaintext } = data;\r\n    const params = {\r\n      p,\r\n      q,\r\n      e,\r\n      d,\r\n    };\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/rsa/encode',\r\n        plaintext,\r\n        params,\r\n      );\r\n\r\n      if (ciphertext === 'error prime') {\r\n        let errorMess = '';\r\n        if (d === 1) {\r\n          errorMess = t('error_prime', { a: e, b: processes.phi });\r\n        } else {\r\n          errorMess = t('error_prime', { a: d, b: processes.phi });\r\n        }\r\n        dispatch(\r\n          getData({\r\n            ...data,\r\n            ciphertext: errorMess,\r\n            actionType: '',\r\n          }),\r\n        );\r\n        return;\r\n      } else {\r\n        getDataOnSubmit(ciphertext, processes, 'encode');\r\n      }\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async () => {\r\n    const { p, q, e, d, plaintext } = data;\r\n    const params = {\r\n      p,\r\n      q,\r\n      e,\r\n      d,\r\n    };\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/rsa/decode',\r\n        plaintext,\r\n        params,\r\n      );\r\n\r\n      if (ciphertext === 'error prime') {\r\n        let errorMess = '';\r\n        if (d === 1) {\r\n          errorMess = t('error_prime', { a: e, b: processes.phi });\r\n        } else {\r\n          errorMess = t('error_prime', { a: d, b: processes.phi });\r\n        }\r\n        dispatch(\r\n          getData({\r\n            ...data,\r\n            ciphertext: errorMess,\r\n            actionType: '',\r\n          }),\r\n        );\r\n        return;\r\n      } else {\r\n        getDataOnSubmit(ciphertext, processes, 'decode');\r\n      }\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const calculate = () => {\r\n    if (action === 'encode') {\r\n      encode();\r\n    } else {\r\n      decode();\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n\r\n        <CardContainer>\r\n          <Title align=\"center\">{t('rsa')}</Title>\r\n          <Content>\r\n            <Btns>\r\n              <BtnLargeActive\r\n                current={action === 'decode' ? 0 : 1}\r\n                onClick={() => setAction('encode')}\r\n              >\r\n                {t('encode')}\r\n              </BtnLargeActive>\r\n              <BtnLargeActive\r\n                current={action === 'decode' ? 1 : 0}\r\n                onClick={() => setAction('decode')}\r\n              >\r\n                {t('decode')}\r\n              </BtnLargeActive>\r\n            </Btns>\r\n            <Btns>\r\n              <BtnLarge onClick={calculate}>{t('cal')}</BtnLarge>\r\n              <BtnLarge onClick={reset}>Reset</BtnLarge>\r\n            </Btns>\r\n            <CounterWrap>\r\n              <CardCounter\r\n                label=\"p\"\r\n                inputValue={data.p}\r\n                handleCountChange={(e) => getParams(e, 'p')}\r\n                increase={() => dispatch(increaseP())}\r\n                decrease={() => dispatch(decreaseP())}\r\n              />\r\n              <CardCounter\r\n                label=\"q\"\r\n                inputValue={data.q}\r\n                handleCountChange={(e) => getParams(e, 'q')}\r\n                increase={() => dispatch(increaseQ())}\r\n                decrease={() => dispatch(decreaseQ())}\r\n              />\r\n              <ExtraInput getParams={getParams} />\r\n            </CounterWrap>\r\n          </Content>\r\n        </CardContainer>\r\n\r\n        <CardContainer>\r\n          <Title>{t('output')}</Title>\r\n          <Content>\r\n            <OutputText>\r\n              {data.loadingOutput ? (\r\n                <img src={loadingIcon} alt=\"\" />\r\n              ) : (\r\n                data.ciphertext\r\n              )}\r\n            </OutputText>\r\n          </Content>\r\n        </CardContainer>\r\n      </Wrap>\r\n      <Detail processes={data.processes} actionType={data.actionType} />\r\n      <CardDescription\r\n        cipher={t('rsa')}\r\n        desc={t('rsa_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Modular_multiplicative_inverse\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Rsa;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'DofpkgLof',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 'zebrascdfghijklmnopqtuvwxy',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const simpleSubstitutionSlice = createSlice({\r\n  name: 'simpleSubstitution',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } =\r\n  simpleSubstitutionSlice.actions;\r\n\r\nexport const selectSimpleSubstitution = (state) => state.simpleSubstitution;\r\n\r\nexport default simpleSubstitutionSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { GiPerspectiveDiceSixFacesRandom } from 'react-icons/gi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Btn, Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectSimpleSubstitution } from './simpleSubstitutionSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectSimpleSubstitution);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^a-zA-Z]/gi, ''));\r\n  };\r\n\r\n  const randomKey = () => {\r\n    const arr = data.key.split('');\r\n    const result = shuffle(arr).join('');\r\n    getKey(result);\r\n  };\r\n\r\n  const shuffle = (array) => {\r\n    // reference in https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (currentIndex !== 0) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">\r\n            {t('key')}\r\n            <Btn onClick={randomKey}>\r\n              <GiPerspectiveDiceSixFacesRandom />\r\n            </Btn>\r\n          </label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              maxLength={26}\r\n              placeholder=\"Enter 26 alphabet key...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport {\r\n  getData,\r\n  getLoading,\r\n  resetData,\r\n  selectSimpleSubstitution,\r\n} from './simpleSubstitutionSlice';\r\n\r\nconst Transposition = () => {\r\n  const data = useSelector(selectSimpleSubstitution);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/simple-substitution/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/simple-substitution/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('simple_substitution')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('simple_substitution')}\r\n        desc={t('simple_substitution_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Substitution_cipher#Simple_substitution\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Transposition;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'CriVpihpe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: '12345',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const transpositionSlice = createSlice({\r\n  name: 'transposition',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = transpositionSlice.actions;\r\n\r\nexport const selectTransposition = (state) => state.transposition;\r\n\r\nexport default transpositionSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectTransposition } from './transpositionSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^1-9]/gi, ''));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">{t('key')}</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter columns number...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport {\r\n  getData,\r\n  getLoading,\r\n  resetData,\r\n  selectTransposition,\r\n} from './transpositionSlice';\r\n\r\nconst Transposition = () => {\r\n  const data = useSelector(selectTransposition);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/encode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit(\r\n        '/api/transposition/decode',\r\n        text,\r\n        key,\r\n      );\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('transposition')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('transposition')}\r\n        desc={t('transposition_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Transposition_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Transposition;\r\n","import { useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport styled from 'styled-components';\r\nimport { Btn } from '../../components/Card/CardStyles';\r\nimport { ContainerDetail, ContentDetail, handlShowDetail } from '../Utils';\r\n\r\nconst Detail = ({ keys, text, processes, actionType }) => {\r\n  const container = useRef(null);\r\n  const content = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const { t } = useTranslation();\r\n  let keysAsInt = [];\r\n\r\n  if (actionType) {\r\n    keysAsInt = processes['key_as_int'].slice(0, keys.length);\r\n  }\r\n\r\n  return (\r\n    <ContainerDetail>\r\n      <div ref={container}>\r\n        <Btn onClick={() => handlShowDetail(container, content, show, setShow)}>\r\n          {show ? t('hide') : t('detail')}\r\n        </Btn>\r\n        {actionType && (\r\n          <ContentDetail ref={content}>\r\n            {actionType === 'encode' ? (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: E<sub>k</sub>( x ) = ( x<sub>i</sub> + k\r\n                  <sub>i</sub> ) mod 26, i = (1, 2, ..., m)\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('encoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <ItemDetail>\r\n                  {t('encode_func')}: D<sub>k</sub>( x ) = ( x<sub>i</sub> - k\r\n                  <sub>i</sub> ) mod 26, i = (1, 2, ..., m)\r\n                </ItemDetail>\r\n                <ItemDetail>\r\n                  {t('decoding')}: \"{text}\"\r\n                </ItemDetail>\r\n              </>\r\n            )}\r\n            <ItemDetail level=\"second\">\r\n              K ={' '}\r\n              {keysAsInt.map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                return <SmallBlock key={index}>{item}</SmallBlock>;\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              P ={' '}\r\n              {processes['string_as_int'].map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                if ((index + 1) % keys.length === 0) {\r\n                  return (\r\n                    <SmallBlock type=\"double\" key={index}>\r\n                      <span>{item}</span>\r\n                      <span>||</span>\r\n                    </SmallBlock>\r\n                  );\r\n                } else {\r\n                  return <SmallBlock key={index}>{item}</SmallBlock>;\r\n                }\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              K ={' '}\r\n              {processes['key_as_int'].map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                if ((index + 1) % keys.length === 0) {\r\n                  return (\r\n                    <SmallBlock type=\"double\" key={index}>\r\n                      <span>{item}</span>\r\n                      <span>||</span>\r\n                    </SmallBlock>\r\n                  );\r\n                } else {\r\n                  return <SmallBlock key={index}>{item}</SmallBlock>;\r\n                }\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              C ={' '}\r\n              {processes['result_as_int'].map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                if ((index + 1) % keys.length === 0) {\r\n                  return (\r\n                    <SmallBlock type=\"double\" key={index}>\r\n                      <span>{item}</span>\r\n                      <span>||</span>\r\n                    </SmallBlock>\r\n                  );\r\n                } else {\r\n                  return <SmallBlock key={index}>{item}</SmallBlock>;\r\n                }\r\n              })}\r\n            </ItemDetail>\r\n            <ItemDetail level=\"second\">\r\n              R ={'  '}\r\n              {processes['result_as_char'].map((item, index) => {\r\n                if (item < 10) {\r\n                  item = '0' + item;\r\n                }\r\n                if ((index + 1) % keys.length === 0) {\r\n                  return (\r\n                    <SmallBlock type=\"double\" key={index}>\r\n                      <span>{item}</span>\r\n                      <span>||</span>\r\n                    </SmallBlock>\r\n                  );\r\n                } else {\r\n                  return <SmallBlock key={index}>{item}</SmallBlock>;\r\n                }\r\n              })}\r\n            </ItemDetail>\r\n          </ContentDetail>\r\n        )}\r\n      </div>\r\n    </ContainerDetail>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n\r\n// Styled\r\nconst SmallBlock = styled.span`\r\n  display: inline-block;\r\n  min-width: ${(props) =>\r\n    props.type === 'double' ? '4.8rem' : '2.4rem'} !important;\r\n  text-align: center;\r\n  width: ${(props) => (props.type === 'double' ? '4.8rem' : '2.4rem')};\r\n\r\n  & > span {\r\n    display: inline-block;\r\n    min-width: 2.4rem;\r\n    width: 2.4rem;\r\n  }\r\n`;\r\n\r\nexport const ItemDetail = styled.li`\r\n  color: ${({ theme }) => theme.text};\r\n  font-size: 1.4rem;\r\n  font-weight: 590;\r\n  margin-bottom: 1rem;\r\n  padding-left: ${(props) => (props.level === 'second' ? '2rem' : '0')};\r\n  width: 100%;\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'EqeoiiXqe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 'cipher',\r\n  processes: [],\r\n  actionType: '',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const vigenereSlice = createSlice({\r\n  name: 'vigenere',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n      state.processes = action.payload.processes;\r\n      state.actionType = action.payload.actionType;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n      state.processes = initialState.processes;\r\n      state.actionType = initialState.actionType;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = vigenereSlice.actions;\r\n\r\nexport const selectVigenere = (state) => state.vigenere;\r\n\r\nexport default vigenereSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectVigenere } from './vigenereSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectVigenere);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^a-zA-Z]/gi, ''));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">{t('key')}</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter your keys...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport Detail from './Detail';\r\nimport ExtraInput from './ExtraInput';\r\nimport {\r\n  getData,\r\n  getLoading,\r\n  resetData,\r\n  selectVigenere,\r\n} from './vigenereSlice';\r\n\r\nconst Vigenere = () => {\r\n  const data = useSelector(selectVigenere);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getDataOnSubmit = (ciphertext, processes, actionType) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext,\r\n        processes,\r\n        actionType,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/vigenere/encode',\r\n        text,\r\n        key,\r\n      );\r\n\r\n      getDataOnSubmit(ciphertext, processes, 'encode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext, processes } = await submit(\r\n        '/api/vigenere/decode',\r\n        text,\r\n        key,\r\n      );\r\n\r\n      getDataOnSubmit(ciphertext, processes, 'decode');\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('vigenere')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <Detail\r\n        keys={data.key}\r\n        text={data.plaintext}\r\n        processes={data.processes}\r\n        actionType={data.actionType}\r\n      />\r\n      <CardDescription\r\n        cipher={t('vigenere')}\r\n        desc={t('vigenere_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Vigenere;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  plaintext: 'CipherVip',\r\n  ciphertext: 'EqeoiiXqe',\r\n  caseStrategy: [\r\n    { value: 'maintain case', active: true },\r\n    { value: 'upper case', active: false },\r\n    { value: 'lower case', active: false },\r\n  ],\r\n  foreignChars: 'include',\r\n  key: 'cipher',\r\n  loadingOutput: false,\r\n};\r\n\r\nexport const xorSlice = createSlice({\r\n  name: 'xor',\r\n  initialState,\r\n  reducers: {\r\n    getData(state, action) {\r\n      state.plaintext = action.payload.plaintext;\r\n      state.ciphertext = action.payload.ciphertext;\r\n      state.caseStrategy = action.payload.caseStrategy;\r\n      state.foreignChars = action.payload.foreignChars;\r\n      state.key = action.payload.key;\r\n    },\r\n    resetData(state) {\r\n      state.plaintext = '';\r\n      state.ciphertext = '';\r\n      state.caseStrategy = initialState.caseStrategy;\r\n      state.foreignChars = initialState.foreignChars;\r\n      state.key = initialState.key;\r\n    },\r\n    getLoading(state, action) {\r\n      state.loadingOutput = action.payload.loadingOutput;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getData, resetData, getLoading } = xorSlice.actions;\r\n\r\nexport const selectXor = (state) => state.xor;\r\n\r\nexport default xorSlice.reducer;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Counter, InputGroup } from '../../components/Card/CardStyles';\r\nimport { getData, selectXor } from './xorSlice';\r\n\r\nconst ExtraInput = () => {\r\n  const data = useSelector(selectXor);\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleCountChange = (e) => {\r\n    getKey(e.target.value.replace(/[^a-zA-Z]/gi, ''));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Counter>\r\n        <div>\r\n          <label htmlFor=\"key\">{t('key')}</label>\r\n          <InputGroup>\r\n            <input\r\n              type=\"text\"\r\n              value={data.key}\r\n              onChange={handleCountChange}\r\n              placeholder=\"Enter your keys...\"\r\n            />\r\n          </InputGroup>\r\n        </div>\r\n      </Counter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtraInput;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardActions from '../../components/Card/CardActions';\r\nimport CardDescription from '../../components/Card/CardDescription';\r\nimport CardInput from '../../components/Card/CardInput';\r\nimport CardOutput from '../../components/Card/CardOutput';\r\nimport {\r\n  Container,\r\n  getCurrentCase,\r\n  getCurrentIndex,\r\n  submit,\r\n  Wrap,\r\n} from '../Utils';\r\nimport ExtraInput from './ExtraInput';\r\nimport { getData, getLoading, resetData, selectXor } from './xorSlice';\r\n\r\nconst XOR = () => {\r\n  const data = useSelector(selectXor);\r\n  const dispatch = useDispatch();\r\n  const currentCase = getCurrentCase(data.caseStrategy);\r\n  const currentIndex = getCurrentIndex(data.caseStrategy);\r\n  const { t } = useTranslation();\r\n\r\n  const getPlaintext = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        plaintext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getCiphertext = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        ciphertext: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getKey = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        key: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const getForeignChars = (value) => {\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        foreignChars: value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const encode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/xor/encode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const decode = async (text, key) => {\r\n    try {\r\n      dispatch(getLoading({ loadingOutput: true }));\r\n      const { ciphertext } = await submit('/api/xor/decode', text, key);\r\n      getCiphertext(ciphertext);\r\n      dispatch(getLoading({ loadingOutput: false }));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCaseStategy = (e) => {\r\n    const value = e.target.id;\r\n    const newCases = data.caseStrategy.map((item) => {\r\n      if (item.value === value) {\r\n        return { ...item, active: true };\r\n      } else {\r\n        return { ...item, active: false };\r\n      }\r\n    });\r\n\r\n    dispatch(\r\n      getData({\r\n        ...data,\r\n        caseStrategy: newCases,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch(resetData());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <CardInput\r\n          title={t('input')}\r\n          titleAlign={false}\r\n          plaintext={data.plaintext}\r\n          getPlaintext={getPlaintext}\r\n        />\r\n        <CardActions\r\n          title={t('xor')}\r\n          titleAlign=\"center\"\r\n          keys={data.key}\r\n          getKey={getKey}\r\n          getForeignChars={getForeignChars}\r\n          encode={encode}\r\n          decode={decode}\r\n          plaintext={data.plaintext}\r\n          ciphertext={data.ciphertext}\r\n          currentIndex={currentIndex}\r\n          getCaseStategy={getCaseStategy}\r\n          caseStrategy={data.caseStrategy}\r\n          foreignChars={data.foreignChars}\r\n          reset={reset}\r\n          extraInput={<ExtraInput />}\r\n        />\r\n        <CardOutput\r\n          title={t('output')}\r\n          currentCase={currentCase}\r\n          foreignChars={data.foreignChars}\r\n          ciphertext={data.ciphertext}\r\n          loading={data.loadingOutput}\r\n        />\r\n      </Wrap>\r\n      <CardDescription\r\n        cipher={t('xor')}\r\n        desc={t('xor_desc')}\r\n        link=\"https://en.wikipedia.org/wiki/XOR_cipher\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default XOR;\r\n","import { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from '../src/components/Theme/ThemeCustome';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Affine from './feature/affine';\nimport Base64 from './feature/base64';\nimport Ceasar from './feature/ceasar';\nimport DES from './feature/des';\nimport ElGamal from './feature/elgamal';\nimport Hill from './feature/hill';\nimport ModularInverse from './feature/modularInverse';\nimport Modulo from './feature/modulo';\nimport Multiplicative from './feature/multiplicative';\nimport Reverse from './feature/reverse';\nimport Rot13 from './feature/rot13';\nimport Rsa from './feature/rsa';\nimport SimpleSubstitution from './feature/simpleSubstitution';\nimport Transposition from './feature/transposition';\nimport Vigenere from './feature/vigenere';\nimport XOR from './feature/xor';\nimport './index.css';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <div className=\"App\">\n        <Router>\n          <Header theme={theme} setTheme={setTheme} />\n          <Switch>\n            <Route exact path=\"/\" component={Ceasar} />\n            <Route path=\"/affine\" component={Affine} />\n            <Route path=\"/reverse\" component={Reverse} />\n            <Route path=\"/transposition\" component={Transposition} />\n            <Route path=\"/modulo\" component={Modulo} />\n            <Route path=\"/modular-inverse\" component={ModularInverse} />\n            <Route path=\"/simple-substitution\" component={SimpleSubstitution} />\n            <Route path=\"/vigenere\" component={Vigenere} />\n            <Route path=\"/hill\" component={Hill} />\n            <Route path=\"/rot13\" component={Rot13} />\n            <Route path=\"/base64\" component={Base64} />\n            <Route path=\"/xor\" component={XOR} />\n            <Route path=\"/multiplicative\" component={Multiplicative} />\n            <Route path=\"/des\" component={DES} />\n            <Route path=\"/elgamal\" component={ElGamal} />\n            <Route path=\"/rsa\" component={Rsa} />\n          </Switch>\n          <Footer />\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport affine from '../feature/affine/affineSlice';\r\nimport base64 from '../feature/base64/base64Slice';\r\nimport ceasar from '../feature/ceasar/ceasarSlice';\r\nimport des from '../feature/des/desSlice';\r\nimport elgamal from '../feature/elgamal/elgamalSlice';\r\nimport hill from '../feature/hill/hillSlice';\r\nimport multiplicative from '../feature/multiplicative/multiplicativeSlice';\r\nimport reverse from '../feature/reverse/reverseSlice';\r\nimport rot13 from '../feature/rot13/rot13Slice';\r\nimport simpleSubstitution from '../feature/simpleSubstitution/simpleSubstitutionSlice';\r\nimport transposition from '../feature/transposition/transpositionSlice';\r\nimport vigenere from '../feature/vigenere/vigenereSlice';\r\nimport xor from '../feature/xor/xorSlice';\r\nimport rsa from '../feature/rsa/rsaSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ceasar: ceasar,\r\n    affine: affine,\r\n    reverse: reverse,\r\n    transposition: transposition,\r\n    simpleSubstitution: simpleSubstitution,\r\n    vigenere: vigenere,\r\n    hill: hill,\r\n    rot13: rot13,\r\n    base64: base64,\r\n    xor: xor,\r\n    multiplicative: multiplicative,\r\n    des: des,\r\n    elgamal: elgamal,\r\n    rsa: rsa,\r\n  },\r\n});\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport HttpApi from 'i18next-http-backend';\r\n\r\ni18n\r\n  .use(HttpApi)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    supportedLngs: ['en', 'vn'],\r\n    fallbackLng: 'en',\r\n    detection: {\r\n      order: ['cookie', 'htmlTag', 'localStorage', 'path', 'subdomain'],\r\n      caches: ['cookie'],\r\n    },\r\n    backend: {\r\n      loadPath: '/assets/locales/{{lng}}/translation.json',\r\n    },\r\n    react: { useSuspense: false },\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}